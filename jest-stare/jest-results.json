{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 4,
  "numPassedTests": 32,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 4,
  "numTotalTests": 32,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1609772019436,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 17,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1609772024403,
        "runtime": 4895,
        "slow": false,
        "start": 1609772019508
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/v1/company/"
          ],
          "duration": 331,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/company/ should fail to create a company for an unauthorized user",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to create a company for an unauthorized user"
        },
        {
          "ancestorTitles": [
            "POST /api/v1/company/"
          ],
          "duration": 138,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/company/ should fail to create a company missing description",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to create a company missing description"
        },
        {
          "ancestorTitles": [
            "POST /api/v1/company/"
          ],
          "duration": 235,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/company/ should create a company",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should create a company"
        },
        {
          "ancestorTitles": [
            "PATCH /api/v1/company/:id"
          ],
          "duration": 141,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/v1/company/:id should fail to update another persons company",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to update another persons company"
        },
        {
          "ancestorTitles": [
            "PATCH /api/v1/company/:id"
          ],
          "duration": 164,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/v1/company/:id should update company name",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should update company name"
        },
        {
          "ancestorTitles": [
            "PATCH /api/v1/company/:id"
          ],
          "duration": 146,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/v1/company/:id should fail to update duplicate company name",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to update duplicate company name"
        },
        {
          "ancestorTitles": [
            "GET api/v1/company"
          ],
          "duration": 125,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET api/v1/company should not fetch companies for a non admin user",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should not fetch companies for a non admin user"
        },
        {
          "ancestorTitles": [
            "GET api/v1/company"
          ],
          "duration": 132,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET api/v1/company should fetch companies for admin user",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fetch companies for admin user"
        },
        {
          "ancestorTitles": [
            "PATCH /api/v1/company/:id"
          ],
          "duration": 129,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/v1/company/:id should fail to update another persons company",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to update another persons company"
        },
        {
          "ancestorTitles": [
            "PATCH /api/v1/company/:id"
          ],
          "duration": 172,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/v1/company/:id should update company name",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should update company name"
        },
        {
          "ancestorTitles": [
            "PATCH /api/v1/company/:id"
          ],
          "duration": 141,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/v1/company/:id should fail to update duplicate company name",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to update duplicate company name"
        },
        {
          "ancestorTitles": [
            "GET api/v1/company/:id"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET api/v1/company/:id owner should not fetch another company",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "owner should not fetch another company"
        },
        {
          "ancestorTitles": [
            "GET api/v1/company/:id"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET api/v1/company/:id should fetch owner company",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fetch owner company"
        },
        {
          "ancestorTitles": [
            "GET api/v1/company/:id"
          ],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET api/v1/company/:id should return company to admin",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should return company to admin"
        },
        {
          "ancestorTitles": [
            "GET api/v1/company/mine"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET api/v1/company/mine should fetch my companies",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fetch my companies"
        },
        {
          "ancestorTitles": [
            "DELETE api/v1/company/:id"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE api/v1/company/:id owner should not delete anothers company",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "owner should not delete anothers company"
        },
        {
          "ancestorTitles": [
            "DELETE api/v1/company/:id"
          ],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE api/v1/company/:id should delete company",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should delete company"
        }
      ],
      "failureMessage": null,
      "v8Coverage": [
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst morgan = require(\"morgan\");\n\nconst compression = require(\"compression\");\n\nconst helmet = require(\"helmet\");\n\nconst cors = require(\"cors\"); // Swagger stuff\n\n\nrequire(\"rootpath\")();\n\nconst swaggerUi = require(\"swagger-ui-express\");\n\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\n\nconst api = require(\"./api\");\n\nconst app = express();\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\napp.get(\"/\", (req, res) => {\n  res.json({\n    message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\"\n  });\n});\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vcmdhbiIsImNvbXByZXNzaW9uIiwiaGVsbWV0IiwiY29ycyIsInN3YWdnZXJVaSIsInN3YWdnZXJEb2MiLCJjb25maWciLCJtaWRkbGV3YXJlcyIsImFwaSIsImFwcCIsInVzZSIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJtZXNzYWdlIiwic2VydmUiLCJzZXR1cCIsIm5vdEZvdW5kIiwiZXJyb3JIYW5kbGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBM0I7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCLEMsQ0FFQTs7O0FBQ0FBLE9BQU8sQ0FBQyxVQUFELENBQVA7O0FBQ0EsTUFBTUssU0FBUyxHQUFHTCxPQUFPLENBQUMsb0JBQUQsQ0FBekI7O0FBQ0EsTUFBTU0sVUFBVSxHQUFHTixPQUFPLENBQUMsc0JBQUQsQ0FBMUI7O0FBRUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JPLE1BQWxCOztBQUVBLE1BQU1DLFdBQVcsR0FBR1IsT0FBTyxDQUFDLGVBQUQsQ0FBM0I7O0FBQ0EsTUFBTVMsR0FBRyxHQUFHVCxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQSxNQUFNVSxHQUFHLEdBQUdYLE9BQU8sRUFBbkI7QUFFQVcsR0FBRyxDQUFDQyxHQUFKLENBQVFWLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQVMsR0FBRyxDQUFDQyxHQUFKLENBQVFSLE1BQU0sRUFBZDtBQUNBTyxHQUFHLENBQUNDLEdBQUosQ0FBUVAsSUFBSSxFQUFaO0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRVCxXQUFXLEVBQW5CO0FBQ0FRLEdBQUcsQ0FBQ0MsR0FBSixDQUFRWixPQUFPLENBQUNhLElBQVIsRUFBUjtBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxHQUFSLEVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTO0FBQ0xJLElBQUFBLE9BQU8sRUFBRTtBQURKLEdBQVQ7QUFHSCxDQUpEO0FBTUFOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJGLEdBQW5CO0FBQ0FDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUJOLFNBQVMsQ0FBQ1ksS0FBL0IsRUFBc0NaLFNBQVMsQ0FBQ2EsS0FBVixDQUFnQlosVUFBaEIsQ0FBdEM7QUFFQUksR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1csUUFBcEI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1ksWUFBcEI7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoXCJtb3JnYW5cIik7XG5jb25zdCBjb21wcmVzc2lvbiA9IHJlcXVpcmUoXCJjb21wcmVzc2lvblwiKTtcbmNvbnN0IGhlbG1ldCA9IHJlcXVpcmUoXCJoZWxtZXRcIik7XG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XG5cbi8vIFN3YWdnZXIgc3R1ZmZcbnJlcXVpcmUoXCJyb290cGF0aFwiKSgpO1xuY29uc3Qgc3dhZ2dlclVpID0gcmVxdWlyZShcInN3YWdnZXItdWktZXhwcmVzc1wiKTtcbmNvbnN0IHN3YWdnZXJEb2MgPSByZXF1aXJlKFwiLi4vZG9jcy9zd2FnZ2VyLmpzb25cIik7XG5cbnJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKCk7XG5cbmNvbnN0IG1pZGRsZXdhcmVzID0gcmVxdWlyZShcIi4vbWlkZGxld2FyZXNcIik7XG5jb25zdCBhcGkgPSByZXF1aXJlKFwiLi9hcGlcIik7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xuYXBwLnVzZShoZWxtZXQoKSk7XG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGNvbXByZXNzaW9uKCkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbmFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogXCLwn6aE8J+MiOKcqPCfkYvwn4yO8J+MjfCfjI/inKjwn4yI8J+mhFwiLFxuICAgIH0pO1xufSk7XG5cbmFwcC51c2UoXCIvYXBpL3YxXCIsIGFwaSk7XG5hcHAudXNlKFwiL2FwaS1kb2NzXCIsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2MpKTtcblxuYXBwLnVzZShtaWRkbGV3YXJlcy5ub3RGb3VuZCk7XG5hcHAudXNlKG1pZGRsZXdhcmVzLmVycm9ySGFuZGxlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
            "originalCode": "const express = require(\"express\");\nconst morgan = require(\"morgan\");\nconst compression = require(\"compression\");\nconst helmet = require(\"helmet\");\nconst cors = require(\"cors\");\n\n// Swagger stuff\nrequire(\"rootpath\")();\nconst swaggerUi = require(\"swagger-ui-express\");\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\nconst api = require(\"./api\");\n\nconst app = express();\n\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\n\napp.get(\"/\", (req, res) => {\n    res.json({\n        message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\",\n    });\n});\n\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\n\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\n\nmodule.exports = app;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/68/app_6855482f668a469a3eba3734dab1ce4c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2126",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/app.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4132,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4129,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 669,
                    "endOffset": 739,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "function notFound(req, res, next) {\n  res.status(404);\n  const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n  next(error);\n}\n/* eslint-disable no-unused-vars */\n\n\nfunction errorHandler(err, req, res, next) {\n  /* eslint-enable no-unused-vars */\n  const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n  res.status(statusCode);\n  if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n  res.json({\n    message: err.message,\n    stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack\n  });\n}\n\nmodule.exports = {\n  notFound,\n  errorHandler\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm5vdEZvdW5kIiwicmVxIiwicmVzIiwibmV4dCIsInN0YXR1cyIsImVycm9yIiwiRXJyb3IiLCJvcmlnaW5hbFVybCIsImVycm9ySGFuZGxlciIsImVyciIsInN0YXR1c0NvZGUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSIsImpzb24iLCJzdGFjayIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCQyxHQUF2QixFQUE0QkMsSUFBNUIsRUFBa0M7QUFDOUJELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVg7QUFDQSxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsS0FBSixDQUFXLG9CQUFtQkwsR0FBRyxDQUFDTSxXQUFZLEVBQTlDLENBQWQ7QUFDQUosRUFBQUEsSUFBSSxDQUFDRSxLQUFELENBQUo7QUFDSDtBQUVEOzs7QUFDQSxTQUFTRyxZQUFULENBQXNCQyxHQUF0QixFQUEyQlIsR0FBM0IsRUFBZ0NDLEdBQWhDLEVBQXFDQyxJQUFyQyxFQUEyQztBQUN2QztBQUNBLFFBQU1PLFVBQVUsR0FBR1IsR0FBRyxDQUFDUSxVQUFKLEtBQW1CLEdBQW5CLEdBQXlCUixHQUFHLENBQUNRLFVBQTdCLEdBQTBDLEdBQTdEO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXTSxVQUFYO0FBQ0EsTUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixHQUFHLENBQUNPLE9BQWhCO0FBQzNDZCxFQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUztBQUNMRCxJQUFBQSxPQUFPLEVBQUVQLEdBQUcsQ0FBQ08sT0FEUjtBQUVMRSxJQUFBQSxLQUFLLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQXpCLEdBQXdDLElBQXhDLEdBQStDSixHQUFHLENBQUNTO0FBRnJELEdBQVQ7QUFJSDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JwQixFQUFBQSxRQURhO0FBRWJRLEVBQUFBO0FBRmEsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBub3RGb3VuZChyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcy5zdGF0dXMoNDA0KTtcbiAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihg8J+UjSAtIE5vdCBGb3VuZCAtICR7cmVxLm9yaWdpbmFsVXJsfWApO1xuICAgIG5leHQoZXJyb3IpO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuZnVuY3Rpb24gZXJyb3JIYW5kbGVyKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG4gICAgY29uc3Qgc3RhdHVzQ29kZSA9IHJlcy5zdGF0dXNDb2RlICE9PSAyMDAgPyByZXMuc3RhdHVzQ29kZSA6IDUwMDtcbiAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIGNvbnNvbGUubG9nKGVyci5tZXNzYWdlKTtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgICBzdGFjazogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gXCLwn6WeXCIgOiBlcnIuc3RhY2ssXG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5vdEZvdW5kLFxuICAgIGVycm9ySGFuZGxlcixcbn07XG4iXX0=",
            "originalCode": "function notFound(req, res, next) {\n    res.status(404);\n    const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n    next(error);\n}\n\n/* eslint-disable no-unused-vars */\nfunction errorHandler(err, req, res, next) {\n    /* eslint-enable no-unused-vars */\n    const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n    res.status(statusCode);\n    if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n    res.json({\n        message: err.message,\n        stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack,\n    });\n}\n\nmodule.exports = {\n    notFound,\n    errorHandler,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0d/middlewares_0d2bc57a77c05a727da8aec38de48282.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2259",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/middlewares.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3010,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3007,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "notFound",
                "ranges": [
                  {
                    "startOffset": 89,
                    "endOffset": 226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "errorHandler",
                "ranges": [
                  {
                    "startOffset": 265,
                    "endOffset": 626,
                    "count": 6
                  },
                  {
                    "startOffset": 391,
                    "endOffset": 407,
                    "count": 0
                  },
                  {
                    "startOffset": 600,
                    "endOffset": 606,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\nrouter.get(\"/\", (req, res) => {\n  res.json({\n    message: \"API - 👋🌎🌍🌏\"\n  });\n});\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwianNvbiIsIm1lc3NhZ2UiLCJ1c2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFFQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFDTEMsSUFBQUEsT0FBTyxFQUFFO0FBREosR0FBVDtBQUdILENBSkQ7QUFNQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsV0FBWCxFQUF3QlIsT0FBTyxDQUFDLG9CQUFELENBQS9CO0FBQ0FDLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLFVBQVgsRUFBdUJSLE9BQU8sQ0FBQywwQkFBRCxDQUE5QjtBQUVBUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IFwiQVBJIC0g8J+Ri/CfjI7wn4yN8J+Mj1wiLFxuICAgIH0pO1xufSk7XG5cbnJvdXRlci51c2UoXCIvYWNjb3VudHNcIiwgcmVxdWlyZShcIi4vYXV0aC9hdXRoLnJvdXRlc1wiKSk7XG5yb3V0ZXIudXNlKFwiL2NvbXBhbnlcIiwgcmVxdWlyZShcIi4vY29tcGFueS9jb21wYW55LnJvdXRlc1wiKSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
            "originalCode": "const express = require(\"express\");\n\nconst router = express.Router();\n\nrouter.get(\"/\", (req, res) => {\n    res.json({\n        message: \"API - 👋🌎🌍🌏\",\n    });\n});\n\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/46/index_46150bc44a91011b69db233a13fb0837.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2260",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/index.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1667,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1664,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 175,
                    "endOffset": 241,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst {\n  signinSchema,\n  signupSchema,\n  updateSchema,\n  verifyEmailSchema\n} = require(\"./auth.validators\");\n\nconst authService = require(\"./auth.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\nmodule.exports = router;\n\nfunction login(req, res, next) {\n  const {\n    email,\n    password\n  } = req.body;\n  authService.login({\n    email,\n    password\n  }).then(({\n    user,\n    token\n  }) => {\n    res.json({\n      user,\n      token\n    });\n  }).catch(next);\n}\n\nfunction register(req, res, next) {\n  req.body.role = Role.owner;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n  req.body.role = Role.customer;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n  authService.verifyEmail(req.body).then(() => res.json({\n    message: \"Verification successfull\"\n  })).catch(next);\n}\n\nfunction getAll(req, res, next) {\n  authService.getAll().then(accounts => res.json(accounts)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  // users can get their own account and admin can get any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.getById(req.params.id).then(account => account ? res.json(account) : res.sendStatus(404)).catch(next);\n}\n\nfunction create(req, res, next) {\n  authService.create(req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // users can update their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.update(req.params.id, req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction _delete(req, res, next) {\n  // users can delete their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.delete(req.param.id).then(() => res.json({\n    message: \"Account deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\nconst router = express.Router();\nconst {\n    signinSchema,\n    signupSchema,\n    updateSchema,\n    verifyEmailSchema,\n} = require(\"./auth.validators\");\nconst authService = require(\"./auth.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\n\nmodule.exports = router;\n\nfunction login(req, res, next) {\n    const { email, password } = req.body;\n    authService\n        .login({ email, password })\n        .then(({ user, token }) => {\n            res.json({ user, token });\n        })\n        .catch(next);\n}\n\nfunction register(req, res, next) {\n    req.body.role = Role.owner;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n    req.body.role = Role.customer;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n    authService\n        .verifyEmail(req.body)\n        .then(() => res.json({ message: \"Verification successfull\" }))\n        .catch(next);\n}\n\nfunction getAll(req, res, next) {\n    authService\n        .getAll()\n        .then((accounts) => res.json(accounts))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    // users can get their own account and admin can get any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .getById(req.params.id)\n        .then((account) => (account ? res.json(account) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction create(req, res, next) {\n    authService\n        .create(req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // users can update their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .update(req.params.id, req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction _delete(req, res, next) {\n    // users can delete their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .delete(req.param.id)\n        .then(() =>\n            res.json({\n                message: \"Account deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/75/authroutes_75bf7888c8e4ac0a10e44194cc103f96.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2261",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 15260,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 15257,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 919,
                    "endOffset": 1157,
                    "count": 11
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1058,
                    "endOffset": 1141,
                    "count": 11
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 1159,
                    "endOffset": 1486,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "registerCustomer",
                "ranges": [
                  {
                    "startOffset": 1488,
                    "endOffset": 1826,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1828,
                    "endOffset": 1985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 1987,
                    "endOffset": 2095,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2097,
                    "endOffset": 2472,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 2474,
                    "endOffset": 2588,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2590,
                    "endOffset": 2944,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2946,
                    "endOffset": 3350,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n  const schema = Joi.object({\n    firstName: Joi.string().required(),\n    lastName: Joi.string().required(),\n    phoneNumber: Joi.string().min(10).max(15).required(),\n    role: Joi.string().min(5).required(),\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required(),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n  const schema = Joi.object({\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    firstName: Joi.string().empty(\"\"),\n    lastName: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    role: Joi.string().min(5).empty(\"\"),\n    phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n    password: Joi.string().min(8).empty(\"\"),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\")\n  }; //  TODO figure out how admin can update role\n\n  const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n  validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n  const schema = Joi.object({\n    token: Joi.string().required()\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsInNpZ251cFNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJmaXJzdE5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImxhc3ROYW1lIiwicGhvbmVOdW1iZXIiLCJtaW4iLCJtYXgiLCJyb2xlIiwiZW1haWwiLCJwYXNzd29yZCIsImNvbmZpcm1QYXNzd29yZCIsInZhbGlkIiwicmVmIiwic2lnbmluU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSIsIndpdGgiLCJ2ZXJpZnlFbWFpbFNjaGVtYSIsInRva2VuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUNBLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLG9DQUFELENBQS9COztBQUVBRSxPQUFPLENBQUNDLFlBQVIsR0FBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QkMsSUFBQUEsU0FBUyxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYUMsUUFBYixFQURXO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRlk7QUFHdEJFLElBQUFBLFdBQVcsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsRUFBakIsRUFBcUJDLEdBQXJCLENBQXlCLEVBQXpCLEVBQTZCSixRQUE3QixFQUhTO0FBSXRCSyxJQUFBQSxJQUFJLEVBQUVqQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFKZ0I7QUFLdEJNLElBQUFBLEtBQUssRUFBRWxCLEdBQUcsQ0FBQ1csTUFBSixHQUFhTyxLQUFiLEdBQXFCTixRQUFyQixFQUxlO0FBTXRCTyxJQUFBQSxRQUFRLEVBQUVuQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFOWTtBQU90QlEsSUFBQUEsZUFBZSxFQUFFcEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFVLEtBQWIsQ0FBbUJyQixHQUFHLENBQUNzQixHQUFKLENBQVEsVUFBUixDQUFuQixFQUF3Q1YsUUFBeEM7QUFQSyxHQUFYLENBQWY7QUFTQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FYRDs7QUFhQUwsT0FBTyxDQUFDb0IsWUFBUixHQUF1QixDQUFDbEIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QlMsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJOLFFBQXJCLEVBRGU7QUFFdEJPLElBQUFBLFFBQVEsRUFBRW5CLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CSCxRQUFwQjtBQUZZLEdBQVgsQ0FBZjtBQUlBVixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNxQixZQUFSLEdBQXVCLENBQUNuQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNa0IsV0FBVyxHQUFHO0FBQ2hCZixJQUFBQSxTQUFTLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhZSxLQUFiLENBQW1CLEVBQW5CLENBREs7QUFFaEJiLElBQUFBLFFBQVEsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFlLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGTTtBQUdoQlIsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJRLEtBQXJCLENBQTJCLEVBQTNCLENBSFM7QUFJaEJULElBQUFBLElBQUksRUFBRWpCLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CVyxLQUFwQixDQUEwQixFQUExQixDQUpVO0FBS2hCWixJQUFBQSxXQUFXLEVBQUVkLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLEVBQWpCLEVBQXFCQyxHQUFyQixDQUF5QixFQUF6QixFQUE2QlUsS0FBN0IsQ0FBbUMsRUFBbkMsQ0FMRztBQU1oQlAsSUFBQUEsUUFBUSxFQUFFbkIsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsQ0FBakIsRUFBb0JXLEtBQXBCLENBQTBCLEVBQTFCLENBTk07QUFPaEJOLElBQUFBLGVBQWUsRUFBRXBCLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CckIsR0FBRyxDQUFDc0IsR0FBSixDQUFRLFVBQVIsQ0FBbkIsRUFBd0NJLEtBQXhDLENBQThDLEVBQTlDO0FBUEQsR0FBcEIsQ0FEdUMsQ0FXdkM7O0FBQ0EsUUFBTWxCLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdnQixXQUFYLEVBQXdCRSxJQUF4QixDQUE2QixVQUE3QixFQUF5QyxpQkFBekMsQ0FBZjtBQUVBekIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FmRDs7QUFpQkFMLE9BQU8sQ0FBQ3lCLGlCQUFSLEdBQTRCLENBQUN2QixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCb0IsSUFBQUEsS0FBSyxFQUFFN0IsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWI7QUFEZSxHQUFYLENBQWY7QUFHQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FMRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5zaWdudXBTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgZmlyc3ROYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5yZXF1aXJlZCgpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLnJlcXVpcmVkKCksXG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgICAgICBjb25maXJtUGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS52YWxpZChKb2kucmVmKFwicGFzc3dvcmRcIikpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMuc2lnbmluU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgIH0pO1xuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnVwZGF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYVJ1bGVzID0ge1xuICAgICAgICBmaXJzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZW1haWw6IEpvaS5zdHJpbmcoKS5lbWFpbCgpLmVtcHR5KFwiXCIpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLmVtcHR5KFwiXCIpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5lbXB0eShcIlwiKSxcbiAgICAgICAgcGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS5taW4oOCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGNvbmZpcm1QYXNzd29yZDogSm9pLnN0cmluZygpLnZhbGlkKEpvaS5yZWYoXCJwYXNzd29yZFwiKSkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIC8vICBUT0RPIGZpZ3VyZSBvdXQgaG93IGFkbWluIGNhbiB1cGRhdGUgcm9sZVxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpLndpdGgoXCJwYXNzd29yZFwiLCBcImNvbmZpcm1QYXNzd29yZFwiKTtcblxuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnZlcmlmeUVtYWlsU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIHRva2VuOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n    const schema = Joi.object({\n        firstName: Joi.string().required(),\n        lastName: Joi.string().required(),\n        phoneNumber: Joi.string().min(10).max(15).required(),\n        role: Joi.string().min(5).required(),\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n    const schema = Joi.object({\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        firstName: Joi.string().empty(\"\"),\n        lastName: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        role: Joi.string().min(5).empty(\"\"),\n        phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n        password: Joi.string().min(8).empty(\"\"),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\"),\n    };\n\n    //  TODO figure out how admin can update role\n    const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n\n    validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n    const schema = Joi.object({\n        token: Joi.string().required(),\n    });\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/93/authvalidators_93d8fdb0df4bea4d1ddc0a198e2ff769.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2262",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7592,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7589,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.signupSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 651,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.signinSchema",
                "ranges": [
                  {
                    "startOffset": 677,
                    "endOffset": 863,
                    "count": 11
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 889,
                    "endOffset": 1438,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.verifyEmailSchema",
                "ranges": [
                  {
                    "startOffset": 1469,
                    "endOffset": 1601,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n  const options = {\n    abortEarly: false,\n    // include all errors\n    allowUnknown: true,\n    // ignore unknown props\n    stripUnknown: true // remove unknown props\n\n  };\n  const {\n    error,\n    value\n  } = schema.validate(req.body, options);\n\n  if (error) {\n    next(`Validation error: ${error.details.map(x => x.message).join(\", \")}`);\n  } else {\n    req.body = value;\n    next();\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRlUmVxdWVzdC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidmFsaWRhdGVSZXF1ZXN0IiwicmVxIiwibmV4dCIsInNjaGVtYSIsIm9wdGlvbnMiLCJhYm9ydEVhcmx5IiwiYWxsb3dVbmtub3duIiwic3RyaXBVbmtub3duIiwiZXJyb3IiLCJ2YWx1ZSIsInZhbGlkYXRlIiwiYm9keSIsImRldGFpbHMiLCJtYXAiLCJ4IiwibWVzc2FnZSIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLGVBQWpCOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQ0MsTUFBcEMsRUFBNEM7QUFDeEMsUUFBTUMsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLFVBQVUsRUFBRSxLQURBO0FBQ087QUFDbkJDLElBQUFBLFlBQVksRUFBRSxJQUZGO0FBRVE7QUFDcEJDLElBQUFBLFlBQVksRUFBRSxJQUhGLENBR1E7O0FBSFIsR0FBaEI7QUFNQSxRQUFNO0FBQUVDLElBQUFBLEtBQUY7QUFBU0MsSUFBQUE7QUFBVCxNQUFtQk4sTUFBTSxDQUFDTyxRQUFQLENBQWdCVCxHQUFHLENBQUNVLElBQXBCLEVBQTBCUCxPQUExQixDQUF6Qjs7QUFDQSxNQUFJSSxLQUFKLEVBQVc7QUFDUE4sSUFBQUEsSUFBSSxDQUNDLHFCQUFvQk0sS0FBSyxDQUFDSSxPQUFOLENBQ2hCQyxHQURnQixDQUNYQyxDQUFELElBQU9BLENBQUMsQ0FBQ0MsT0FERyxFQUVoQkMsSUFGZ0IsQ0FFWCxJQUZXLENBRUwsRUFIaEIsQ0FBSjtBQUtILEdBTkQsTUFNTztBQUNIZixJQUFBQSxHQUFHLENBQUNVLElBQUosR0FBV0YsS0FBWDtBQUNBUCxJQUFBQSxJQUFJO0FBQ1A7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gdmFsaWRhdGVSZXF1ZXN0O1xuXG5mdW5jdGlvbiB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpIHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBhYm9ydEVhcmx5OiBmYWxzZSwgLy8gaW5jbHVkZSBhbGwgZXJyb3JzXG4gICAgICAgIGFsbG93VW5rbm93bjogdHJ1ZSwgLy8gaWdub3JlIHVua25vd24gcHJvcHNcbiAgICAgICAgc3RyaXBVbmtub3duOiB0cnVlLCAvLyByZW1vdmUgdW5rbm93biBwcm9wc1xuICAgIH07XG5cbiAgICBjb25zdCB7IGVycm9yLCB2YWx1ZSB9ID0gc2NoZW1hLnZhbGlkYXRlKHJlcS5ib2R5LCBvcHRpb25zKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChcbiAgICAgICAgICAgIGBWYWxpZGF0aW9uIGVycm9yOiAke2Vycm9yLmRldGFpbHNcbiAgICAgICAgICAgICAgICAubWFwKCh4KSA9PiB4Lm1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgLmpvaW4oXCIsIFwiKX1gXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmJvZHkgPSB2YWx1ZTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH1cbn1cbiJdfQ==",
            "originalCode": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n    const options = {\n        abortEarly: false, // include all errors\n        allowUnknown: true, // ignore unknown props\n        stripUnknown: true, // remove unknown props\n    };\n\n    const { error, value } = schema.validate(req.body, options);\n    if (error) {\n        next(\n            `Validation error: ${error.details\n                .map((x) => x.message)\n                .join(\", \")}`\n        );\n    } else {\n        req.body = value;\n        next();\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/45/validateRequest_45057a96b73bd940f5249869883efa4a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2315",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/validateRequest.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2528,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2525,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "validateRequest",
                "ranges": [
                  {
                    "startOffset": 124,
                    "endOffset": 562,
                    "count": 19
                  },
                  {
                    "startOffset": 431,
                    "endOffset": 515,
                    "count": 1
                  },
                  {
                    "startOffset": 515,
                    "endOffset": 560,
                    "count": 18
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 481,
                    "endOffset": 495,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const User = require(\"../user/user.model\");\n\nconst jwt = require(\"../../utils/jwt\");\n\nconst bcrypt = require(\"bcrypt\");\n\nconst crypto = require(\"crypto\");\n\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n  /**\n   * refreshtoken\n   * revoketoken\n   * forgotPassword\n   * validateResetToken\n   * validateResetToken\n   * resetPassword\n   */\n  login,\n  register,\n  verifyEmail,\n  create,\n  update,\n  getAll,\n  getById,\n  delete: _delete\n};\n\nasync function login({\n  email,\n  password\n}) {\n  const account = await getAccount({\n    email\n  });\n\n  if (!account || // !account.isVerified ||\n  !(await bcrypt.compare(password, account.password))) {\n    const error = new Error(\"Email or password is incorrect\");\n    throw error;\n  }\n\n  const token = await jwt.sign(account.toJSON());\n  return {\n    user: basicDetails(account),\n    token\n  };\n}\n\nasync function register(params, origin) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    // send already registered error in email to prevent account enumeration\n    // await sendAlreadyRegisteredEmail(params.email, origin);\n    const error = new Error('Email \"' + params.email + '\" is already registered');\n    throw error;\n  }\n\n  const account = await insertUser(params); // send email;\n  // await sendVerificationEmail(account, origin);\n\n  const token = await jwt.sign(account);\n  return {\n    user: account,\n    token\n  };\n}\n\nasync function verifyEmail({\n  token\n}) {\n  const account = await getAccount({\n    verificationToken: token\n  });\n  if (!account) throw \"Verification failed\";\n  await account.$query().patch({\n    verified: Date.now(),\n    isVerified: true,\n    verificationToken: null\n  });\n}\n\nasync function create(params) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    throw 'Email \"' + params.email + '\" is already registered';\n  }\n\n  const account = await insertUser(params); // TODO? bind to company here.\n\n  return basicDetails(account);\n}\n\nasync function update(id, params) {\n  const account = await getAccount({\n    id\n  }); // validate if email was changed\n\n  if (params.email && account.email !== params.email && (await getAccount({\n    email: params.email\n  }))) {\n    const error = new Error(`Email ${params.email} is already taken`);\n    throw error;\n  } // hash password if it was entered\n\n\n  if (params.password) {\n    params.password = await hash(params.password);\n  }\n\n  const updatedUser = await User.query().patchAndFetchById(id, { ...params\n  });\n  return basicDetails(updatedUser);\n} // TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\n\n\nasync function getAll() {\n  const accounts = await User.query();\n  return accounts.map(x => basicDetails(x));\n}\n\nasync function getById(id) {\n  const account = await getAccount({\n    id\n  });\n  return basicDetails(account);\n} // TODO MAKE IT ACCEPT AN ARRAY OF ID\n\n\nasync function _delete(id) {\n  await User.query().deleteById(id);\n}\n/**==================== Helpers ====================== */\n\n\nasync function getAccount(param) {\n  const account = await User.query().where({ ...param\n  }).first();\n  return account;\n}\n\nasync function insertUser(params) {\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    role,\n    phoneNumber\n  } = params; // hash password and verification token\n\n  const hashedPassword = await hash(password, 10);\n  const verificationToken = randomTokenString(); // create account\n\n  const account = await User.query().insert({\n    email,\n    firstName,\n    lastName,\n    password: hashedPassword,\n    phoneNumber,\n    role: role,\n    active: true,\n    isVerified: false,\n    verified: new Date().toISOString(),\n    verificationToken\n  });\n  return basicDetails(account);\n}\n\nasync function hash(password) {\n  return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n  return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  } = account;\n  return {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  };\n}\n\nasync function sendVerificationEmail(account, origin) {\n  let message;\n\n  if (origin) {\n    const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n    message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n  } else {\n    message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n  }\n\n  await sendEmail({\n    to: account.email,\n    subject: \"Sign-up verification API - Verify Email\",\n    html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`\n  });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n  let message;\n\n  if (origin) {\n    message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n  } else {\n    message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n  }\n\n  await sendEmail({\n    to: email,\n    subject: \"Sign-up Verification API - Email Already Registered\",\n    html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguc2VydmljZS5qcyJdLCJuYW1lcyI6WyJVc2VyIiwicmVxdWlyZSIsImp3dCIsImJjcnlwdCIsImNyeXB0byIsInNlbmRFbWFpbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJsb2dpbiIsInJlZ2lzdGVyIiwidmVyaWZ5RW1haWwiLCJjcmVhdGUiLCJ1cGRhdGUiLCJnZXRBbGwiLCJnZXRCeUlkIiwiZGVsZXRlIiwiX2RlbGV0ZSIsImVtYWlsIiwicGFzc3dvcmQiLCJhY2NvdW50IiwiZ2V0QWNjb3VudCIsImNvbXBhcmUiLCJlcnJvciIsIkVycm9yIiwidG9rZW4iLCJzaWduIiwidG9KU09OIiwidXNlciIsImJhc2ljRGV0YWlscyIsInBhcmFtcyIsIm9yaWdpbiIsImluc2VydFVzZXIiLCJ2ZXJpZmljYXRpb25Ub2tlbiIsIiRxdWVyeSIsInBhdGNoIiwidmVyaWZpZWQiLCJEYXRlIiwibm93IiwiaXNWZXJpZmllZCIsImlkIiwiaGFzaCIsInVwZGF0ZWRVc2VyIiwicXVlcnkiLCJwYXRjaEFuZEZldGNoQnlJZCIsImFjY291bnRzIiwibWFwIiwieCIsImRlbGV0ZUJ5SWQiLCJwYXJhbSIsIndoZXJlIiwiZmlyc3QiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInJvbGUiLCJwaG9uZU51bWJlciIsImhhc2hlZFBhc3N3b3JkIiwicmFuZG9tVG9rZW5TdHJpbmciLCJpbnNlcnQiLCJhY3RpdmUiLCJ0b0lTT1N0cmluZyIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJjcmVhdGVkIiwidXBkYXRlZCIsInNlbmRWZXJpZmljYXRpb25FbWFpbCIsIm1lc3NhZ2UiLCJ2ZXJpZnlVcmwiLCJ0byIsInN1YmplY3QiLCJodG1sIiwic2VuZEFscmVhZHlSZWdpc3RlcmVkRW1haWwiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQW5COztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2I7Ozs7Ozs7O0FBUUFDLEVBQUFBLEtBVGE7QUFVYkMsRUFBQUEsUUFWYTtBQVdiQyxFQUFBQSxXQVhhO0FBWWJDLEVBQUFBLE1BWmE7QUFhYkMsRUFBQUEsTUFiYTtBQWNiQyxFQUFBQSxNQWRhO0FBZWJDLEVBQUFBLE9BZmE7QUFnQmJDLEVBQUFBLE1BQU0sRUFBRUM7QUFoQkssQ0FBakI7O0FBbUJBLGVBQWVSLEtBQWYsQ0FBcUI7QUFBRVMsRUFBQUEsS0FBRjtBQUFTQyxFQUFBQTtBQUFULENBQXJCLEVBQTBDO0FBQ3RDLFFBQU1DLE9BQU8sR0FBRyxNQUFNQyxVQUFVLENBQUM7QUFBRUgsSUFBQUE7QUFBRixHQUFELENBQWhDOztBQUVBLE1BQ0ksQ0FBQ0UsT0FBRCxJQUNBO0FBQ0EsSUFBRSxNQUFNaEIsTUFBTSxDQUFDa0IsT0FBUCxDQUFlSCxRQUFmLEVBQXlCQyxPQUFPLENBQUNELFFBQWpDLENBQVIsQ0FISixFQUlFO0FBQ0UsVUFBTUksS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxnQ0FBVixDQUFkO0FBQ0EsVUFBTUQsS0FBTjtBQUNIOztBQUVELFFBQU1FLEtBQUssR0FBRyxNQUFNdEIsR0FBRyxDQUFDdUIsSUFBSixDQUFTTixPQUFPLENBQUNPLE1BQVIsRUFBVCxDQUFwQjtBQUVBLFNBQU87QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxZQUFZLENBQUNULE9BQUQsQ0FEZjtBQUVISyxJQUFBQTtBQUZHLEdBQVA7QUFJSDs7QUFFRCxlQUFlZixRQUFmLENBQXdCb0IsTUFBeEIsRUFBZ0NDLE1BQWhDLEVBQXdDO0FBQ3BDO0FBQ0EsTUFBSSxNQUFNVixVQUFVLENBQUM7QUFBRUgsSUFBQUEsS0FBSyxFQUFFWSxNQUFNLENBQUNaO0FBQWhCLEdBQUQsQ0FBcEIsRUFBK0M7QUFDM0M7QUFDQTtBQUNBLFVBQU1LLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQ1YsWUFBWU0sTUFBTSxDQUFDWixLQUFuQixHQUEyQix5QkFEakIsQ0FBZDtBQUlBLFVBQU1LLEtBQU47QUFDSDs7QUFFRCxRQUFNSCxPQUFPLEdBQUcsTUFBTVksVUFBVSxDQUFDRixNQUFELENBQWhDLENBWm9DLENBY3BDO0FBQ0E7O0FBRUEsUUFBTUwsS0FBSyxHQUFHLE1BQU10QixHQUFHLENBQUN1QixJQUFKLENBQVNOLE9BQVQsQ0FBcEI7QUFFQSxTQUFPO0FBQ0hRLElBQUFBLElBQUksRUFBRVIsT0FESDtBQUVISyxJQUFBQTtBQUZHLEdBQVA7QUFJSDs7QUFFRCxlQUFlZCxXQUFmLENBQTJCO0FBQUVjLEVBQUFBO0FBQUYsQ0FBM0IsRUFBc0M7QUFDbEMsUUFBTUwsT0FBTyxHQUFHLE1BQU1DLFVBQVUsQ0FBQztBQUFFWSxJQUFBQSxpQkFBaUIsRUFBRVI7QUFBckIsR0FBRCxDQUFoQztBQUVBLE1BQUksQ0FBQ0wsT0FBTCxFQUFjLE1BQU0scUJBQU47QUFFZCxRQUFNQSxPQUFPLENBQUNjLE1BQVIsR0FBaUJDLEtBQWpCLENBQXVCO0FBQ3pCQyxJQUFBQSxRQUFRLEVBQUVDLElBQUksQ0FBQ0MsR0FBTCxFQURlO0FBRXpCQyxJQUFBQSxVQUFVLEVBQUUsSUFGYTtBQUd6Qk4sSUFBQUEsaUJBQWlCLEVBQUU7QUFITSxHQUF2QixDQUFOO0FBS0g7O0FBRUQsZUFBZXJCLE1BQWYsQ0FBc0JrQixNQUF0QixFQUE4QjtBQUMxQjtBQUNBLE1BQUksTUFBTVQsVUFBVSxDQUFDO0FBQUVILElBQUFBLEtBQUssRUFBRVksTUFBTSxDQUFDWjtBQUFoQixHQUFELENBQXBCLEVBQStDO0FBQzNDLFVBQU0sWUFBWVksTUFBTSxDQUFDWixLQUFuQixHQUEyQix5QkFBakM7QUFDSDs7QUFFRCxRQUFNRSxPQUFPLEdBQUcsTUFBTVksVUFBVSxDQUFDRixNQUFELENBQWhDLENBTjBCLENBUTFCOztBQUVBLFNBQU9ELFlBQVksQ0FBQ1QsT0FBRCxDQUFuQjtBQUNIOztBQUVELGVBQWVQLE1BQWYsQ0FBc0IyQixFQUF0QixFQUEwQlYsTUFBMUIsRUFBa0M7QUFDOUIsUUFBTVYsT0FBTyxHQUFHLE1BQU1DLFVBQVUsQ0FBQztBQUFFbUIsSUFBQUE7QUFBRixHQUFELENBQWhDLENBRDhCLENBRzlCOztBQUNBLE1BQ0lWLE1BQU0sQ0FBQ1osS0FBUCxJQUNBRSxPQUFPLENBQUNGLEtBQVIsS0FBa0JZLE1BQU0sQ0FBQ1osS0FEekIsS0FFQyxNQUFNRyxVQUFVLENBQUM7QUFBRUgsSUFBQUEsS0FBSyxFQUFFWSxNQUFNLENBQUNaO0FBQWhCLEdBQUQsQ0FGakIsQ0FESixFQUlFO0FBQ0UsVUFBTUssS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVyxTQUFRTSxNQUFNLENBQUNaLEtBQU0sbUJBQWhDLENBQWQ7QUFDQSxVQUFNSyxLQUFOO0FBQ0gsR0FYNkIsQ0FhOUI7OztBQUNBLE1BQUlPLE1BQU0sQ0FBQ1gsUUFBWCxFQUFxQjtBQUNqQlcsSUFBQUEsTUFBTSxDQUFDWCxRQUFQLEdBQWtCLE1BQU1zQixJQUFJLENBQUNYLE1BQU0sQ0FBQ1gsUUFBUixDQUE1QjtBQUNIOztBQUVELFFBQU11QixXQUFXLEdBQUcsTUFBTXpDLElBQUksQ0FBQzBDLEtBQUwsR0FBYUMsaUJBQWIsQ0FBK0JKLEVBQS9CLEVBQW1DLEVBQUUsR0FBR1Y7QUFBTCxHQUFuQyxDQUExQjtBQUVBLFNBQU9ELFlBQVksQ0FBQ2EsV0FBRCxDQUFuQjtBQUNILEMsQ0FFRDs7O0FBQ0EsZUFBZTVCLE1BQWYsR0FBd0I7QUFDcEIsUUFBTStCLFFBQVEsR0FBRyxNQUFNNUMsSUFBSSxDQUFDMEMsS0FBTCxFQUF2QjtBQUNBLFNBQU9FLFFBQVEsQ0FBQ0MsR0FBVCxDQUFjQyxDQUFELElBQU9sQixZQUFZLENBQUNrQixDQUFELENBQWhDLENBQVA7QUFDSDs7QUFFRCxlQUFlaEMsT0FBZixDQUF1QnlCLEVBQXZCLEVBQTJCO0FBQ3ZCLFFBQU1wQixPQUFPLEdBQUcsTUFBTUMsVUFBVSxDQUFDO0FBQUVtQixJQUFBQTtBQUFGLEdBQUQsQ0FBaEM7QUFDQSxTQUFPWCxZQUFZLENBQUNULE9BQUQsQ0FBbkI7QUFDSCxDLENBRUQ7OztBQUNBLGVBQWVILE9BQWYsQ0FBdUJ1QixFQUF2QixFQUEyQjtBQUN2QixRQUFNdkMsSUFBSSxDQUFDMEMsS0FBTCxHQUFhSyxVQUFiLENBQXdCUixFQUF4QixDQUFOO0FBQ0g7QUFFRDs7O0FBQ0EsZUFBZW5CLFVBQWYsQ0FBMEI0QixLQUExQixFQUFpQztBQUM3QixRQUFNN0IsT0FBTyxHQUFHLE1BQU1uQixJQUFJLENBQUMwQyxLQUFMLEdBQ2pCTyxLQURpQixDQUNYLEVBQUUsR0FBR0Q7QUFBTCxHQURXLEVBRWpCRSxLQUZpQixFQUF0QjtBQUdBLFNBQU8vQixPQUFQO0FBQ0g7O0FBRUQsZUFBZVksVUFBZixDQUEwQkYsTUFBMUIsRUFBa0M7QUFDOUIsUUFBTTtBQUFFc0IsSUFBQUEsU0FBRjtBQUFhQyxJQUFBQSxRQUFiO0FBQXVCbkMsSUFBQUEsS0FBdkI7QUFBOEJDLElBQUFBLFFBQTlCO0FBQXdDbUMsSUFBQUEsSUFBeEM7QUFBOENDLElBQUFBO0FBQTlDLE1BQThEekIsTUFBcEUsQ0FEOEIsQ0FHOUI7O0FBQ0EsUUFBTTBCLGNBQWMsR0FBRyxNQUFNZixJQUFJLENBQUN0QixRQUFELEVBQVcsRUFBWCxDQUFqQztBQUNBLFFBQU1jLGlCQUFpQixHQUFHd0IsaUJBQWlCLEVBQTNDLENBTDhCLENBTzlCOztBQUNBLFFBQU1yQyxPQUFPLEdBQUcsTUFBTW5CLElBQUksQ0FBQzBDLEtBQUwsR0FBYWUsTUFBYixDQUFvQjtBQUN0Q3hDLElBQUFBLEtBRHNDO0FBRXRDa0MsSUFBQUEsU0FGc0M7QUFHdENDLElBQUFBLFFBSHNDO0FBSXRDbEMsSUFBQUEsUUFBUSxFQUFFcUMsY0FKNEI7QUFLdENELElBQUFBLFdBTHNDO0FBTXRDRCxJQUFBQSxJQUFJLEVBQUVBLElBTmdDO0FBT3RDSyxJQUFBQSxNQUFNLEVBQUUsSUFQOEI7QUFRdENwQixJQUFBQSxVQUFVLEVBQUUsS0FSMEI7QUFTdENILElBQUFBLFFBQVEsRUFBRSxJQUFJQyxJQUFKLEdBQVd1QixXQUFYLEVBVDRCO0FBVXRDM0IsSUFBQUE7QUFWc0MsR0FBcEIsQ0FBdEI7QUFhQSxTQUFPSixZQUFZLENBQUNULE9BQUQsQ0FBbkI7QUFDSDs7QUFFRCxlQUFlcUIsSUFBZixDQUFvQnRCLFFBQXBCLEVBQThCO0FBQzFCLFNBQU8sTUFBTWYsTUFBTSxDQUFDcUMsSUFBUCxDQUFZdEIsUUFBWixFQUFzQixFQUF0QixDQUFiO0FBQ0g7O0FBRUQsU0FBU3NDLGlCQUFULEdBQTZCO0FBQ3pCLFNBQU9wRCxNQUFNLENBQUN3RCxXQUFQLENBQW1CLEVBQW5CLEVBQXVCQyxRQUF2QixDQUFnQyxLQUFoQyxDQUFQO0FBQ0g7O0FBRUQsU0FBU2pDLFlBQVQsQ0FBc0JULE9BQXRCLEVBQStCO0FBQzNCLFFBQU07QUFDRm9CLElBQUFBLEVBREU7QUFFRlksSUFBQUEsU0FGRTtBQUdGQyxJQUFBQSxRQUhFO0FBSUZuQyxJQUFBQSxLQUpFO0FBS0ZvQyxJQUFBQSxJQUxFO0FBTUZTLElBQUFBLE9BTkU7QUFPRkMsSUFBQUEsT0FQRTtBQVFGekIsSUFBQUE7QUFSRSxNQVNGbkIsT0FUSjtBQVVBLFNBQU87QUFDSG9CLElBQUFBLEVBREc7QUFFSFksSUFBQUEsU0FGRztBQUdIQyxJQUFBQSxRQUhHO0FBSUhuQyxJQUFBQSxLQUpHO0FBS0hvQyxJQUFBQSxJQUxHO0FBTUhTLElBQUFBLE9BTkc7QUFPSEMsSUFBQUEsT0FQRztBQVFIekIsSUFBQUE7QUFSRyxHQUFQO0FBVUg7O0FBRUQsZUFBZTBCLHFCQUFmLENBQXFDN0MsT0FBckMsRUFBOENXLE1BQTlDLEVBQXNEO0FBQ2xELE1BQUltQyxPQUFKOztBQUNBLE1BQUluQyxNQUFKLEVBQVk7QUFDUixVQUFNb0MsU0FBUyxHQUFJLEdBQUVwQyxNQUFPLDRCQUEyQlgsT0FBTyxDQUFDYSxpQkFBa0IsRUFBakY7QUFDQWlDLElBQUFBLE9BQU8sR0FBSTtzQkFDR0MsU0FBVSxLQUFJQSxTQUFVO1NBRHRDO0FBR0gsR0FMRCxNQUtPO0FBQ0hELElBQUFBLE9BQU8sR0FBSTs4QkFDVzlDLE9BQU8sQ0FBQ2EsaUJBQWtCLGFBRGhEO0FBRUg7O0FBRUQsUUFBTTNCLFNBQVMsQ0FBQztBQUNaOEQsSUFBQUEsRUFBRSxFQUFFaEQsT0FBTyxDQUFDRixLQURBO0FBRVptRCxJQUFBQSxPQUFPLEVBQUUseUNBRkc7QUFHWkMsSUFBQUEsSUFBSSxFQUFHOztVQUVMSixPQUFRO0FBTEUsR0FBRCxDQUFmO0FBT0g7O0FBRUQsZUFBZUssMEJBQWYsQ0FBMENyRCxLQUExQyxFQUFpRGEsTUFBakQsRUFBeUQ7QUFDckQsTUFBSW1DLE9BQUo7O0FBQ0EsTUFBSW5DLE1BQUosRUFBWTtBQUNSbUMsSUFBQUEsT0FBTyxHQUFJLGdFQUErRG5DLE1BQU8sc0RBQWpGO0FBQ0gsR0FGRCxNQUVPO0FBQ0htQyxJQUFBQSxPQUFPLEdBQUksK0dBQVg7QUFDSDs7QUFFRCxRQUFNNUQsU0FBUyxDQUFDO0FBQ1o4RCxJQUFBQSxFQUFFLEVBQUVsRCxLQURRO0FBRVptRCxJQUFBQSxPQUFPLEVBQUUscURBRkc7QUFHWkMsSUFBQUEsSUFBSSxFQUFHO3VDQUN3QnBELEtBQU07aUJBQzVCZ0QsT0FBUTtBQUxMLEdBQUQsQ0FBZjtBQU9IIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXNlciA9IHJlcXVpcmUoXCIuLi91c2VyL3VzZXIubW9kZWxcIik7XG5jb25zdCBqd3QgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvand0XCIpO1xuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdFwiKTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBzZW5kRW1haWwgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZW1haWxcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIC8qKlxuICAgICAqIHJlZnJlc2h0b2tlblxuICAgICAqIHJldm9rZXRva2VuXG4gICAgICogZm9yZ290UGFzc3dvcmRcbiAgICAgKiB2YWxpZGF0ZVJlc2V0VG9rZW5cbiAgICAgKiB2YWxpZGF0ZVJlc2V0VG9rZW5cbiAgICAgKiByZXNldFBhc3N3b3JkXG4gICAgICovXG4gICAgbG9naW4sXG4gICAgcmVnaXN0ZXIsXG4gICAgdmVyaWZ5RW1haWwsXG4gICAgY3JlYXRlLFxuICAgIHVwZGF0ZSxcbiAgICBnZXRBbGwsXG4gICAgZ2V0QnlJZCxcbiAgICBkZWxldGU6IF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBsb2dpbih7IGVtYWlsLCBwYXNzd29yZCB9KSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IGdldEFjY291bnQoeyBlbWFpbCB9KTtcblxuICAgIGlmIChcbiAgICAgICAgIWFjY291bnQgfHxcbiAgICAgICAgLy8gIWFjY291bnQuaXNWZXJpZmllZCB8fFxuICAgICAgICAhKGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCBhY2NvdW50LnBhc3N3b3JkKSlcbiAgICApIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoXCJFbWFpbCBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3RcIik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgand0LnNpZ24oYWNjb3VudC50b0pTT04oKSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VyOiBiYXNpY0RldGFpbHMoYWNjb3VudCksXG4gICAgICAgIHRva2VuLFxuICAgIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKHBhcmFtcywgb3JpZ2luKSB7XG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoYXdhaXQgZ2V0QWNjb3VudCh7IGVtYWlsOiBwYXJhbXMuZW1haWwgfSkpIHtcbiAgICAgICAgLy8gc2VuZCBhbHJlYWR5IHJlZ2lzdGVyZWQgZXJyb3IgaW4gZW1haWwgdG8gcHJldmVudCBhY2NvdW50IGVudW1lcmF0aW9uXG4gICAgICAgIC8vIGF3YWl0IHNlbmRBbHJlYWR5UmVnaXN0ZXJlZEVtYWlsKHBhcmFtcy5lbWFpbCwgb3JpZ2luKTtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICAgICAnRW1haWwgXCInICsgcGFyYW1zLmVtYWlsICsgJ1wiIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCdcbiAgICAgICAgKTtcblxuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG5cbiAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgaW5zZXJ0VXNlcihwYXJhbXMpO1xuXG4gICAgLy8gc2VuZCBlbWFpbDtcbiAgICAvLyBhd2FpdCBzZW5kVmVyaWZpY2F0aW9uRW1haWwoYWNjb3VudCwgb3JpZ2luKTtcblxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgand0LnNpZ24oYWNjb3VudCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VyOiBhY2NvdW50LFxuICAgICAgICB0b2tlbixcbiAgICB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlFbWFpbCh7IHRva2VuIH0pIHtcbiAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgZ2V0QWNjb3VudCh7IHZlcmlmaWNhdGlvblRva2VuOiB0b2tlbiB9KTtcblxuICAgIGlmICghYWNjb3VudCkgdGhyb3cgXCJWZXJpZmljYXRpb24gZmFpbGVkXCI7XG5cbiAgICBhd2FpdCBhY2NvdW50LiRxdWVyeSgpLnBhdGNoKHtcbiAgICAgICAgdmVyaWZpZWQ6IERhdGUubm93KCksXG4gICAgICAgIGlzVmVyaWZpZWQ6IHRydWUsXG4gICAgICAgIHZlcmlmaWNhdGlvblRva2VuOiBudWxsLFxuICAgIH0pO1xufVxuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGUocGFyYW1zKSB7XG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoYXdhaXQgZ2V0QWNjb3VudCh7IGVtYWlsOiBwYXJhbXMuZW1haWwgfSkpIHtcbiAgICAgICAgdGhyb3cgJ0VtYWlsIFwiJyArIHBhcmFtcy5lbWFpbCArICdcIiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQnO1xuICAgIH1cblxuICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCBpbnNlcnRVc2VyKHBhcmFtcyk7XG5cbiAgICAvLyBUT0RPPyBiaW5kIHRvIGNvbXBhbnkgaGVyZS5cblxuICAgIHJldHVybiBiYXNpY0RldGFpbHMoYWNjb3VudCk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZShpZCwgcGFyYW1zKSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IGdldEFjY291bnQoeyBpZCB9KTtcblxuICAgIC8vIHZhbGlkYXRlIGlmIGVtYWlsIHdhcyBjaGFuZ2VkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMuZW1haWwgJiZcbiAgICAgICAgYWNjb3VudC5lbWFpbCAhPT0gcGFyYW1zLmVtYWlsICYmXG4gICAgICAgIChhd2FpdCBnZXRBY2NvdW50KHsgZW1haWw6IHBhcmFtcy5lbWFpbCB9KSlcbiAgICApIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoYEVtYWlsICR7cGFyYW1zLmVtYWlsfSBpcyBhbHJlYWR5IHRha2VuYCk7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cblxuICAgIC8vIGhhc2ggcGFzc3dvcmQgaWYgaXQgd2FzIGVudGVyZWRcbiAgICBpZiAocGFyYW1zLnBhc3N3b3JkKSB7XG4gICAgICAgIHBhcmFtcy5wYXNzd29yZCA9IGF3YWl0IGhhc2gocGFyYW1zLnBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkVXNlciA9IGF3YWl0IFVzZXIucXVlcnkoKS5wYXRjaEFuZEZldGNoQnlJZChpZCwgeyAuLi5wYXJhbXMgfSk7XG5cbiAgICByZXR1cm4gYmFzaWNEZXRhaWxzKHVwZGF0ZWRVc2VyKTtcbn1cblxuLy8gVE9ETyBNQUtFIFNPIElUIENBTiBRVUVSWSBGT1IgRElGRkVSRU5UIFRZUEVTIE9GIFVTRVJTXG5hc3luYyBmdW5jdGlvbiBnZXRBbGwoKSB7XG4gICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBVc2VyLnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGFjY291bnRzLm1hcCgoeCkgPT4gYmFzaWNEZXRhaWxzKHgpKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QnlJZChpZCkge1xuICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCBnZXRBY2NvdW50KHsgaWQgfSk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhhY2NvdW50KTtcbn1cblxuLy8gVE9ETyBNQUtFIElUIEFDQ0VQVCBBTiBBUlJBWSBPRiBJRFxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShpZCkge1xuICAgIGF3YWl0IFVzZXIucXVlcnkoKS5kZWxldGVCeUlkKGlkKTtcbn1cblxuLyoqPT09PT09PT09PT09PT09PT09PT0gSGVscGVycyA9PT09PT09PT09PT09PT09PT09PT09ICovXG5hc3luYyBmdW5jdGlvbiBnZXRBY2NvdW50KHBhcmFtKSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IFVzZXIucXVlcnkoKVxuICAgICAgICAud2hlcmUoeyAuLi5wYXJhbSB9KVxuICAgICAgICAuZmlyc3QoKTtcbiAgICByZXR1cm4gYWNjb3VudDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gaW5zZXJ0VXNlcihwYXJhbXMpIHtcbiAgICBjb25zdCB7IGZpcnN0TmFtZSwgbGFzdE5hbWUsIGVtYWlsLCBwYXNzd29yZCwgcm9sZSwgcGhvbmVOdW1iZXIgfSA9IHBhcmFtcztcblxuICAgIC8vIGhhc2ggcGFzc3dvcmQgYW5kIHZlcmlmaWNhdGlvbiB0b2tlblxuICAgIGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgaGFzaChwYXNzd29yZCwgMTApO1xuICAgIGNvbnN0IHZlcmlmaWNhdGlvblRva2VuID0gcmFuZG9tVG9rZW5TdHJpbmcoKTtcblxuICAgIC8vIGNyZWF0ZSBhY2NvdW50XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IFVzZXIucXVlcnkoKS5pbnNlcnQoe1xuICAgICAgICBlbWFpbCxcbiAgICAgICAgZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZSxcbiAgICAgICAgcGFzc3dvcmQ6IGhhc2hlZFBhc3N3b3JkLFxuICAgICAgICBwaG9uZU51bWJlcixcbiAgICAgICAgcm9sZTogcm9sZSxcbiAgICAgICAgYWN0aXZlOiB0cnVlLFxuICAgICAgICBpc1ZlcmlmaWVkOiBmYWxzZSxcbiAgICAgICAgdmVyaWZpZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgdmVyaWZpY2F0aW9uVG9rZW4sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gYmFzaWNEZXRhaWxzKGFjY291bnQpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBoYXNoKHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCAxMCk7XG59XG5cbmZ1bmN0aW9uIHJhbmRvbVRva2VuU3RyaW5nKCkge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoNDApLnRvU3RyaW5nKFwiaGV4XCIpO1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMoYWNjb3VudCkge1xuICAgIGNvbnN0IHtcbiAgICAgICAgaWQsXG4gICAgICAgIGZpcnN0TmFtZSxcbiAgICAgICAgbGFzdE5hbWUsXG4gICAgICAgIGVtYWlsLFxuICAgICAgICByb2xlLFxuICAgICAgICBjcmVhdGVkLFxuICAgICAgICB1cGRhdGVkLFxuICAgICAgICBpc1ZlcmlmaWVkLFxuICAgIH0gPSBhY2NvdW50O1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICBmaXJzdE5hbWUsXG4gICAgICAgIGxhc3ROYW1lLFxuICAgICAgICBlbWFpbCxcbiAgICAgICAgcm9sZSxcbiAgICAgICAgY3JlYXRlZCxcbiAgICAgICAgdXBkYXRlZCxcbiAgICAgICAgaXNWZXJpZmllZCxcbiAgICB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiBzZW5kVmVyaWZpY2F0aW9uRW1haWwoYWNjb3VudCwgb3JpZ2luKSB7XG4gICAgbGV0IG1lc3NhZ2U7XG4gICAgaWYgKG9yaWdpbikge1xuICAgICAgICBjb25zdCB2ZXJpZnlVcmwgPSBgJHtvcmlnaW59L2F1dGgvdmVyaWZ5LWVtYWlsP3Rva2VuPSR7YWNjb3VudC52ZXJpZmljYXRpb25Ub2tlbn1gO1xuICAgICAgICBtZXNzYWdlID0gYDxwPiBQbGVhc2UgY2xpY2sgdGhlIGJlbG93IGxpbmsgdG8gdmVyaWZ5IHlvdXIgZW1haWwgYWRkcmVzczo8L3A+XG4gICAgICAgIDxwPjxhIGhyZWY9XCIke3ZlcmlmeVVybH1cIj4ke3ZlcmlmeVVybH08L2E+PC9wPlxuICAgICAgICBgO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG1lc3NhZ2UgPSBgPHA+UGxlYXNlIHVzZSB0aGUgYmVsb3cgdG9rZW4gdG8gdmVyaWZ5IHlvdXIgZW1haWwgYWRkcmVzcyB3aXRoIHRoZSA8Y29kZT4vYXV0aC92ZXJpZnktZW1haWw8L2NvZGU+IGFwaSByb3V0ZTo8L3A+XG4gICAgICAgICAgICAgICAgICAgPHA+PGNvZGU+JHthY2NvdW50LnZlcmlmaWNhdGlvblRva2VufTwvY29kZT48L3A+YDtcbiAgICB9XG5cbiAgICBhd2FpdCBzZW5kRW1haWwoe1xuICAgICAgICB0bzogYWNjb3VudC5lbWFpbCxcbiAgICAgICAgc3ViamVjdDogXCJTaWduLXVwIHZlcmlmaWNhdGlvbiBBUEkgLSBWZXJpZnkgRW1haWxcIixcbiAgICAgICAgaHRtbDogYDxoND5WZXJpZnkgRW1haWw8L2g0PlxuICAgICAgICA8cD5UaGFua3MgZm9yIHJlZ2lzdGVyaW5nITwvcD5cbiAgICAgICAgJHttZXNzYWdlfWAsXG4gICAgfSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHNlbmRBbHJlYWR5UmVnaXN0ZXJlZEVtYWlsKGVtYWlsLCBvcmlnaW4pIHtcbiAgICBsZXQgbWVzc2FnZTtcbiAgICBpZiAob3JpZ2luKSB7XG4gICAgICAgIG1lc3NhZ2UgPSBgPHA+SWYgeW91IGRvbid0IGtub3cgeW91ciBwYXNzd29yZCBwbGVhc2UgdmlzaXQgdGhlIDxhIGhyZWY9XCIke29yaWdpbn0vYXV0aC9mb3Jnb3QtcGFzc3dvcmRcIj5mb3Jnb3QgcGFzc3dvcmQ8L2E+IHBhZ2UuPC9wPmA7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbWVzc2FnZSA9IGA8cD5JZiB5b3UgZG9uJ3Qga25vdyB5b3VyIHBhc3N3b3JkIHlvdSBjYW4gcmVzZXQgaXQgdmlhIHRoZSA8Y29kZT4vYXV0aC9mb3Jnb3QtcGFzc3dvcmQ8L2NvZGU+IGFwaSByb3V0ZS48L3A+YDtcbiAgICB9XG5cbiAgICBhd2FpdCBzZW5kRW1haWwoe1xuICAgICAgICB0bzogZW1haWwsXG4gICAgICAgIHN1YmplY3Q6IFwiU2lnbi11cCBWZXJpZmljYXRpb24gQVBJIC0gRW1haWwgQWxyZWFkeSBSZWdpc3RlcmVkXCIsXG4gICAgICAgIGh0bWw6IGA8aDQ+RW1haWwgQWxyZWFkeSBSZWdpc3RlcmVkPC9oND5cbiAgICAgICAgICAgICAgIDxwPllvdXIgZW1haWwgPHN0cm9uZz4ke2VtYWlsfTwvc3Ryb25nPiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQuPC9wPlxuICAgICAgICAgICAgICAgJHttZXNzYWdlfWAsXG4gICAgfSk7XG59XG4iXX0=",
            "originalCode": "const User = require(\"../user/user.model\");\nconst jwt = require(\"../../utils/jwt\");\nconst bcrypt = require(\"bcrypt\");\nconst crypto = require(\"crypto\");\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n    /**\n     * refreshtoken\n     * revoketoken\n     * forgotPassword\n     * validateResetToken\n     * validateResetToken\n     * resetPassword\n     */\n    login,\n    register,\n    verifyEmail,\n    create,\n    update,\n    getAll,\n    getById,\n    delete: _delete,\n};\n\nasync function login({ email, password }) {\n    const account = await getAccount({ email });\n\n    if (\n        !account ||\n        // !account.isVerified ||\n        !(await bcrypt.compare(password, account.password))\n    ) {\n        const error = new Error(\"Email or password is incorrect\");\n        throw error;\n    }\n\n    const token = await jwt.sign(account.toJSON());\n\n    return {\n        user: basicDetails(account),\n        token,\n    };\n}\n\nasync function register(params, origin) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        // send already registered error in email to prevent account enumeration\n        // await sendAlreadyRegisteredEmail(params.email, origin);\n        const error = new Error(\n            'Email \"' + params.email + '\" is already registered'\n        );\n\n        throw error;\n    }\n\n    const account = await insertUser(params);\n\n    // send email;\n    // await sendVerificationEmail(account, origin);\n\n    const token = await jwt.sign(account);\n\n    return {\n        user: account,\n        token,\n    };\n}\n\nasync function verifyEmail({ token }) {\n    const account = await getAccount({ verificationToken: token });\n\n    if (!account) throw \"Verification failed\";\n\n    await account.$query().patch({\n        verified: Date.now(),\n        isVerified: true,\n        verificationToken: null,\n    });\n}\n\nasync function create(params) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        throw 'Email \"' + params.email + '\" is already registered';\n    }\n\n    const account = await insertUser(params);\n\n    // TODO? bind to company here.\n\n    return basicDetails(account);\n}\n\nasync function update(id, params) {\n    const account = await getAccount({ id });\n\n    // validate if email was changed\n    if (\n        params.email &&\n        account.email !== params.email &&\n        (await getAccount({ email: params.email }))\n    ) {\n        const error = new Error(`Email ${params.email} is already taken`);\n        throw error;\n    }\n\n    // hash password if it was entered\n    if (params.password) {\n        params.password = await hash(params.password);\n    }\n\n    const updatedUser = await User.query().patchAndFetchById(id, { ...params });\n\n    return basicDetails(updatedUser);\n}\n\n// TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\nasync function getAll() {\n    const accounts = await User.query();\n    return accounts.map((x) => basicDetails(x));\n}\n\nasync function getById(id) {\n    const account = await getAccount({ id });\n    return basicDetails(account);\n}\n\n// TODO MAKE IT ACCEPT AN ARRAY OF ID\nasync function _delete(id) {\n    await User.query().deleteById(id);\n}\n\n/**==================== Helpers ====================== */\nasync function getAccount(param) {\n    const account = await User.query()\n        .where({ ...param })\n        .first();\n    return account;\n}\n\nasync function insertUser(params) {\n    const { firstName, lastName, email, password, role, phoneNumber } = params;\n\n    // hash password and verification token\n    const hashedPassword = await hash(password, 10);\n    const verificationToken = randomTokenString();\n\n    // create account\n    const account = await User.query().insert({\n        email,\n        firstName,\n        lastName,\n        password: hashedPassword,\n        phoneNumber,\n        role: role,\n        active: true,\n        isVerified: false,\n        verified: new Date().toISOString(),\n        verificationToken,\n    });\n\n    return basicDetails(account);\n}\n\nasync function hash(password) {\n    return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n    return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n    const {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    } = account;\n    return {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    };\n}\n\nasync function sendVerificationEmail(account, origin) {\n    let message;\n    if (origin) {\n        const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n        message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n    } else {\n        message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n    }\n\n    await sendEmail({\n        to: account.email,\n        subject: \"Sign-up verification API - Verify Email\",\n        html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`,\n    });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n    let message;\n    if (origin) {\n        message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n    } else {\n        message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n    }\n\n    await sendEmail({\n        to: email,\n        subject: \"Sign-up Verification API - Email Already Registered\",\n        html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`,\n    });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/15/authservice_15139629ee8738726404e916e3a02258.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2316",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 22003,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 22000,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 546,
                    "endOffset": 944,
                    "count": 44
                  },
                  {
                    "startOffset": 646,
                    "endOffset": 745,
                    "count": 11
                  },
                  {
                    "startOffset": 747,
                    "endOffset": 832,
                    "count": 0
                  },
                  {
                    "startOffset": 832,
                    "endOffset": 942,
                    "count": 11
                  },
                  {
                    "startOffset": 942,
                    "endOffset": 943,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 946,
                    "endOffset": 1502,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1504,
                    "endOffset": 1779,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1781,
                    "endOffset": 2062,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2064,
                    "endOffset": 2621,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 2682,
                    "endOffset": 2793,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2795,
                    "endOffset": 2907,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2948,
                    "endOffset": 3015,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAccount",
                "ranges": [
                  {
                    "startOffset": 3076,
                    "endOffset": 3198,
                    "count": 22
                  },
                  {
                    "startOffset": 3178,
                    "endOffset": 3196,
                    "count": 11
                  },
                  {
                    "startOffset": 3196,
                    "endOffset": 3197,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "insertUser",
                "ranges": [
                  {
                    "startOffset": 3200,
                    "endOffset": 3791,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "hash",
                "ranges": [
                  {
                    "startOffset": 3793,
                    "endOffset": 3868,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "randomTokenString",
                "ranges": [
                  {
                    "startOffset": 3870,
                    "endOffset": 3951,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 3953,
                    "endOffset": 4226,
                    "count": 11
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "sendVerificationEmail",
                "ranges": [
                  {
                    "startOffset": 4228,
                    "endOffset": 4965,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendAlreadyRegisteredEmail",
                "ranges": [
                  {
                    "startOffset": 4967,
                    "endOffset": 5605,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst db = require(\"../../db\");\n\nclass User extends Model {\n  static get tableName() {\n    return tableNames.user;\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiVXNlciIsInRhYmxlTmFtZSIsInVzZXIiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLDRCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsSUFBTixTQUFtQkosS0FBbkIsQ0FBeUI7QUFDckIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLElBQWxCO0FBQ0g7O0FBSG9COztBQU16Qk4sS0FBSyxDQUFDTyxJQUFOLENBQVdKLEVBQVg7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vZGJcIik7XG5cbmNsYXNzIFVzZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLnVzZXI7XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyO1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst db = require(\"../../db\");\n\nclass User extends Model {\n    static get tableName() {\n        return tableNames.user;\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = User;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/65/usermodel_65a16864dea2cc43f1cea59fb9ce1a95.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2317",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/user/user.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1454,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1451,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "User",
                "ranges": [
                  {
                    "startOffset": 224,
                    "endOffset": 224,
                    "count": 27
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 260,
                    "endOffset": 309,
                    "count": 81
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  user: \"user\",\n  address: \"address\",\n  company: \"company\",\n  accounts: \"accounts\",\n  category: \"category\",\n  menu: \"menu\",\n  item: \"item\",\n  order: \"order\",\n  orderItem: \"orderItem\",\n  payments: \"payments\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlTmFtZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInVzZXIiLCJhZGRyZXNzIiwiY29tcGFueSIsImFjY291bnRzIiwiY2F0ZWdvcnkiLCJtZW51IiwiaXRlbSIsIm9yZGVyIiwib3JkZXJJdGVtIiwicGF5bWVudHMiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLE1BRE87QUFFYkMsRUFBQUEsT0FBTyxFQUFFLFNBRkk7QUFHYkMsRUFBQUEsT0FBTyxFQUFFLFNBSEk7QUFJYkMsRUFBQUEsUUFBUSxFQUFFLFVBSkc7QUFLYkMsRUFBQUEsUUFBUSxFQUFFLFVBTEc7QUFNYkMsRUFBQUEsSUFBSSxFQUFFLE1BTk87QUFPYkMsRUFBQUEsSUFBSSxFQUFFLE1BUE87QUFRYkMsRUFBQUEsS0FBSyxFQUFFLE9BUk07QUFTYkMsRUFBQUEsU0FBUyxFQUFFLFdBVEU7QUFVYkMsRUFBQUEsUUFBUSxFQUFFO0FBVkcsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICB1c2VyOiBcInVzZXJcIixcbiAgICBhZGRyZXNzOiBcImFkZHJlc3NcIixcbiAgICBjb21wYW55OiBcImNvbXBhbnlcIixcbiAgICBhY2NvdW50czogXCJhY2NvdW50c1wiLFxuICAgIGNhdGVnb3J5OiBcImNhdGVnb3J5XCIsXG4gICAgbWVudTogXCJtZW51XCIsXG4gICAgaXRlbTogXCJpdGVtXCIsXG4gICAgb3JkZXI6IFwib3JkZXJcIixcbiAgICBvcmRlckl0ZW06IFwib3JkZXJJdGVtXCIsXG4gICAgcGF5bWVudHM6IFwicGF5bWVudHNcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    user: \"user\",\n    address: \"address\",\n    company: \"company\",\n    accounts: \"accounts\",\n    category: \"category\",\n    menu: \"menu\",\n    item: \"item\",\n    order: \"order\",\n    orderItem: \"orderItem\",\n    payments: \"payments\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/d1/tableNames_d158fb35bde4ba2feb47fa73fcd1c0db.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2530",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/constants/tableNames.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1435,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1432,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Knex = require(\"knex\");\n\nconst {\n  Model\n} = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\n\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\nconst db = Knex(connectionConfig);\nModel.knex(db);\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIktuZXgiLCJyZXF1aXJlIiwiTW9kZWwiLCJrbmV4RmlsZSIsImVudmlyb25tZW50IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiY29ubmVjdGlvbkNvbmZpZyIsImRiIiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQVlELE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1FLFFBQVEsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBeEI7O0FBQ0EsTUFBTUcsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixhQUE1QztBQUNBLE1BQU1DLGdCQUFnQixHQUFHTCxRQUFRLENBQUNDLFdBQUQsQ0FBakM7QUFFQSxNQUFNSyxFQUFFLEdBQUdULElBQUksQ0FBQ1EsZ0JBQUQsQ0FBZjtBQUVBTixLQUFLLENBQUNRLElBQU4sQ0FBV0QsRUFBWDtBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJILEVBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgS25leCA9IHJlcXVpcmUoXCJrbmV4XCIpO1xuY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcblxuY29uc3Qga25leEZpbGUgPSByZXF1aXJlKFwiLi4va25leGZpbGVcIik7XG5jb25zdCBlbnZpcm9ubWVudCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8IFwiZGV2ZWxvcG1lbnRcIjtcbmNvbnN0IGNvbm5lY3Rpb25Db25maWcgPSBrbmV4RmlsZVtlbnZpcm9ubWVudF07XG5cbmNvbnN0IGRiID0gS25leChjb25uZWN0aW9uQ29uZmlnKTtcblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG4iXX0=",
            "originalCode": "const Knex = require(\"knex\");\nconst { Model } = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\n\nconst db = Knex(connectionConfig);\n\nModel.knex(db);\n\nmodule.exports = db;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/06/db_061f2ffe7a9d03a98dba0f960ecba1d1.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2531",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/db.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1629,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1626,
                    "count": 1
                  },
                  {
                    "startOffset": 246,
                    "endOffset": 262,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n  test: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB_TEST,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  development: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  production: {\n    client: \"pg\",\n    connection: process.env.DATABASE_URL,\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhmaWxlLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIiwidGVzdCIsImNsaWVudCIsImNvbm5lY3Rpb24iLCJkYXRhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJQT1NUR1JFU19EQl9URVNUIiwidXNlciIsIlBPU1RHUkVTX1VTRVIiLCJwYXNzd29yZCIsIlBPU1RHUkVTX1BBU1NXT1JEIiwibWlncmF0aW9ucyIsImRpcmVjdG9yeSIsIl9fZGlybmFtZSIsInNlZWRzIiwiZGV2ZWxvcG1lbnQiLCJQT1NUR1JFU19EQiIsInByb2R1Y3Rpb24iLCJEQVRBQkFTRV9VUkwiLCJwb29sIiwibWluIiwibWF4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxNQUFNLEVBQUUsSUFETjtBQUVGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxnQkFGZDtBQUdSQyxNQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxhQUhWO0FBSVJDLE1BQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLO0FBSmQsS0FGVjtBQVFGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUkMsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEZixLQVJWO0FBWUZDLElBQUFBLEtBQUssRUFBRTtBQUNIRixNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURwQjtBQVpMLEdBRE87QUFrQmJFLEVBQUFBLFdBQVcsRUFBRTtBQUNUZCxJQUFBQSxNQUFNLEVBQUUsSUFEQztBQUVUQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVyxXQUZkO0FBR1JULE1BQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGFBSFY7QUFJUkMsTUFBQUEsUUFBUSxFQUFFTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUs7QUFKZCxLQUZIO0FBUVRDLElBQUFBLFVBQVUsRUFBRTtBQUNSQyxNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURmLEtBUkg7QUFZVEMsSUFBQUEsS0FBSyxFQUFFO0FBQ0hGLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRHBCO0FBWkUsR0FsQkE7QUFtQ2JJLEVBQUFBLFVBQVUsRUFBRTtBQUNSaEIsSUFBQUEsTUFBTSxFQUFFLElBREE7QUFFUkMsSUFBQUEsVUFBVSxFQUFFRSxPQUFPLENBQUNDLEdBQVIsQ0FBWWEsWUFGaEI7QUFHUkMsSUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLE1BQUFBLEdBQUcsRUFBRSxDQURIO0FBRUZDLE1BQUFBLEdBQUcsRUFBRTtBQUZILEtBSEU7QUFPUlYsSUFBQUEsVUFBVSxFQUFFO0FBQ1JDLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRGYsS0FQSjtBQVdSQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEYsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEcEI7QUFYQztBQW5DQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVwZGF0ZSB3aXRoIHlvdXIgY29uZmlnIHNldHRpbmdzLlxucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdGVzdDoge1xuICAgICAgICBjbGllbnQ6IFwicGdcIixcbiAgICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICAgICAgLy8gaG9zdDogXCIxMjcuMC4wLjFcIixcbiAgICAgICAgICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5QT1NUR1JFU19EQl9URVNULFxuICAgICAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfVVNFUixcbiAgICAgICAgICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5QT1NUR1JFU19QQVNTV09SRCxcbiAgICAgICAgfSxcbiAgICAgICAgbWlncmF0aW9uczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9taWdyYXRpb25zXCIsXG4gICAgICAgIH0sXG5cbiAgICAgICAgc2VlZHM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvc2VlZHNcIixcbiAgICAgICAgfSxcbiAgICB9LFxuXG4gICAgZGV2ZWxvcG1lbnQ6IHtcbiAgICAgICAgY2xpZW50OiBcInBnXCIsXG4gICAgICAgIGNvbm5lY3Rpb246IHtcbiAgICAgICAgICAgIC8vIGhvc3Q6IFwiMTI3LjAuMC4xXCIsXG4gICAgICAgICAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfREIsXG4gICAgICAgICAgICB1c2VyOiBwcm9jZXNzLmVudi5QT1NUR1JFU19VU0VSLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBPU1RHUkVTX1BBU1NXT1JELFxuICAgICAgICB9LFxuICAgICAgICBtaWdyYXRpb25zOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL21pZ3JhdGlvbnNcIixcbiAgICAgICAgfSxcblxuICAgICAgICBzZWVkczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9zZWVkc1wiLFxuICAgICAgICB9LFxuICAgIH0sXG5cbiAgICBwcm9kdWN0aW9uOiB7XG4gICAgICAgIGNsaWVudDogXCJwZ1wiLFxuICAgICAgICBjb25uZWN0aW9uOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsXG4gICAgICAgIHBvb2w6IHtcbiAgICAgICAgICAgIG1pbjogMixcbiAgICAgICAgICAgIG1heDogMTAsXG4gICAgICAgIH0sXG4gICAgICAgIG1pZ3JhdGlvbnM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvbWlncmF0aW9uc1wiLFxuICAgICAgICB9LFxuXG4gICAgICAgIHNlZWRzOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL3NlZWRzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4iXX0=",
            "originalCode": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n    test: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB_TEST,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    development: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    production: {\n        client: \"pg\",\n        connection: process.env.DATABASE_URL,\n        pool: {\n            min: 2,\n            max: 10,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e2/knexfile_e268b34e213dcf9ff4bbc9c1fff3199f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2763",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/knexfile.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4994,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4991,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n  return new Promise((resolve, reject) => {\n    jwt.sign(payload, process.env.JWT_SECRET, {\n      expiresIn: \"3h\"\n    }, (error, token) => {\n      if (error) return reject(error);\n      return resolve(token);\n    });\n  });\n}\n\nmodule.exports = {\n  sign\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwic2lnbiIsInBheWxvYWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiZXhwaXJlc0luIiwiZXJyb3IiLCJ0b2tlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUEsU0FBU0MsSUFBVCxDQUFjQyxPQUFkLEVBQXVCO0FBQ25CLFNBQU8sSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUNwQ04sSUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQ0lDLE9BREosRUFFSUksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBRmhCLEVBR0k7QUFDSUMsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FISixFQU1JLENBQUNDLEtBQUQsRUFBUUMsS0FBUixLQUFrQjtBQUNkLFVBQUlELEtBQUosRUFBVyxPQUFPTCxNQUFNLENBQUNLLEtBQUQsQ0FBYjtBQUNYLGFBQU9OLE9BQU8sQ0FBQ08sS0FBRCxDQUFkO0FBQ0gsS0FUTDtBQVdILEdBWk0sQ0FBUDtBQWFIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlosRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XG5cbmZ1bmN0aW9uIHNpZ24ocGF5bG9hZCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGp3dC5zaWduKFxuICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZXhwaXJlc0luOiBcIjNoXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgKGVycm9yLCB0b2tlbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUodG9rZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBzaWduLFxufTtcbiJdfQ==",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n    return new Promise((resolve, reject) => {\n        jwt.sign(\n            payload,\n            process.env.JWT_SECRET,\n            {\n                expiresIn: \"3h\",\n            },\n            (error, token) => {\n                if (error) return reject(error);\n                return resolve(token);\n            }\n        );\n    });\n}\n\nmodule.exports = {\n    sign,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/a2/jwt_a2ecd03f3666d6bdf618e5bb010e6f13.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2815",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/jwt.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1961,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "sign",
                "ranges": [
                  {
                    "startOffset": 127,
                    "endOffset": 376,
                    "count": 11
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 173,
                    "endOffset": 372,
                    "count": 11
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 273,
                    "endOffset": 366,
                    "count": 11
                  },
                  {
                    "startOffset": 310,
                    "endOffset": 331,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const nodemailer = require(\"nodemailer\");\n\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({\n  to,\n  subject,\n  html,\n  from = config[\"emailFrom\"]\n}) {\n  const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n  await transporter.sendMail({\n    from,\n    to,\n    subject,\n    html\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbIm5vZGVtYWlsZXIiLCJyZXF1aXJlIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlbmRFbWFpbCIsInRvIiwic3ViamVjdCIsImh0bWwiLCJmcm9tIiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJzZW5kTWFpbCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxTQUFqQjs7QUFFQSxlQUFlQSxTQUFmLENBQXlCO0FBQUVDLEVBQUFBLEVBQUY7QUFBTUMsRUFBQUEsT0FBTjtBQUFlQyxFQUFBQSxJQUFmO0FBQXFCQyxFQUFBQSxJQUFJLEdBQUdQLE1BQU0sQ0FBQyxXQUFEO0FBQWxDLENBQXpCLEVBQTRFO0FBQ3hFLFFBQU1RLFdBQVcsR0FBR1YsVUFBVSxDQUFDVyxlQUFYLENBQTJCVCxNQUFNLENBQUMsYUFBRCxDQUFqQyxDQUFwQjtBQUNBLFFBQU1RLFdBQVcsQ0FBQ0UsUUFBWixDQUFxQjtBQUFFSCxJQUFBQSxJQUFGO0FBQVFILElBQUFBLEVBQVI7QUFBWUMsSUFBQUEsT0FBWjtBQUFxQkMsSUFBQUE7QUFBckIsR0FBckIsQ0FBTjtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZW1haWxlciA9IHJlcXVpcmUoXCJub2RlbWFpbGVyXCIpO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZShcIi4uL2NvbmZpZy5qc29uXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNlbmRFbWFpbDtcblxuYXN5bmMgZnVuY3Rpb24gc2VuZEVtYWlsKHsgdG8sIHN1YmplY3QsIGh0bWwsIGZyb20gPSBjb25maWdbXCJlbWFpbEZyb21cIl0gfSkge1xuICAgIGNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoY29uZmlnW1wic210cE9wdGlvbnNcIl0pO1xuICAgIGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHsgZnJvbSwgdG8sIHN1YmplY3QsIGh0bWwgfSk7XG59XG4iXX0=",
            "originalCode": "const nodemailer = require(\"nodemailer\");\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({ to, subject, html, from = config[\"emailFrom\"] }) {\n    const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n    await transporter.sendMail({ from, to, subject, html });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/email_4444491566e111edc26f59e95bae5b33.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2906",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/email.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1859,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1856,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "sendEmail",
                "ranges": [
                  {
                    "startOffset": 204,
                    "endOffset": 441,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nconst User = require(\"../api/user/user.model\");\n\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n  auth,\n  isOwner\n};\n\nfunction auth(roles = []) {\n  if (typeof roles === \"string\") {\n    roles = [roles];\n  }\n\n  return async (req, res, next) => {\n    let token;\n\n    if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer \")) {\n      token = req.headers.authorization.split(\"Bearer \")[1];\n    } else {\n      return res.status(403).json({\n        message: \"Token not found, access denied\"\n      });\n    } // verify token and account\n\n\n    try {\n      const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n      const user = await User.query().where({\n        id: decodedToken.id\n      }).first();\n\n      if (!user || roles.length && !roles.includes(decodedToken.role)) {\n        // account does not exist or role not authorized\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      } // authentication and authorization successful\n\n\n      req.user = decodedToken;\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nfunction isOwner() {\n  return async (req, res, next) => {\n    try {\n      const bool = await Company.query().where({\n        owner_id: req.user.id,\n        company_id: req.params.company_id\n      }).first();\n\n      if (!bool) {\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      }\n\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJDb21wYW55IiwibW9kdWxlIiwiZXhwb3J0cyIsImF1dGgiLCJpc093bmVyIiwicm9sZXMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInN0YXJ0c1dpdGgiLCJzcGxpdCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZGVjb2RlZFRva2VuIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJ1c2VyIiwicXVlcnkiLCJ3aGVyZSIsImlkIiwiZmlyc3QiLCJsZW5ndGgiLCJpbmNsdWRlcyIsInJvbGUiLCJlcnJvciIsImJvb2wiLCJvd25lcl9pZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsOEJBQUQsQ0FBdkI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQURhO0FBRWJDLEVBQUFBO0FBRmEsQ0FBakI7O0FBS0EsU0FBU0QsSUFBVCxDQUFjRSxLQUFLLEdBQUcsRUFBdEIsRUFBMEI7QUFDdEIsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzNCQSxJQUFBQSxLQUFLLEdBQUcsQ0FBQ0EsS0FBRCxDQUFSO0FBQ0g7O0FBRUQsU0FBTyxPQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUlDLEtBQUo7O0FBQ0EsUUFDSUgsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosSUFDQUwsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLFVBQTFCLENBQXFDLFNBQXJDLENBRkosRUFHRTtBQUNFSCxNQUFBQSxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxhQUFaLENBQTBCRSxLQUExQixDQUFnQyxTQUFoQyxFQUEyQyxDQUEzQyxDQUFSO0FBQ0gsS0FMRCxNQUtPO0FBQ0gsYUFBT04sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLFFBQUFBLE9BQU8sRUFBRTtBQURlLE9BQXJCLENBQVA7QUFHSCxLQVg0QixDQWE3Qjs7O0FBQ0EsUUFBSTtBQUNBLFlBQU1DLFlBQVksR0FBR3BCLEdBQUcsQ0FBQ3FCLE1BQUosQ0FBV1QsS0FBWCxFQUFrQlUsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLENBQXJCO0FBRUEsWUFBTUMsSUFBSSxHQUFHLE1BQU12QixJQUFJLENBQUN3QixLQUFMLEdBQ2RDLEtBRGMsQ0FDUjtBQUFFQyxRQUFBQSxFQUFFLEVBQUVSLFlBQVksQ0FBQ1E7QUFBbkIsT0FEUSxFQUVkQyxLQUZjLEVBQW5COztBQUlBLFVBQUksQ0FBQ0osSUFBRCxJQUFVakIsS0FBSyxDQUFDc0IsTUFBTixJQUFnQixDQUFDdEIsS0FBSyxDQUFDdUIsUUFBTixDQUFlWCxZQUFZLENBQUNZLElBQTVCLENBQS9CLEVBQW1FO0FBQy9EO0FBQ0EsZUFBT3RCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSCxPQVZELENBWUE7OztBQUNBVixNQUFBQSxHQUFHLENBQUNnQixJQUFKLEdBQVdMLFlBQVg7QUFDQVQsTUFBQUEsSUFBSTtBQUNQLEtBZkQsQ0FlRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaENEO0FBaUNIOztBQUVELFNBQVMxQixPQUFULEdBQW1CO0FBQ2YsU0FBTyxPQUFPRSxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUk7QUFDQSxZQUFNdUIsSUFBSSxHQUFHLE1BQU0vQixPQUFPLENBQUN1QixLQUFSLEdBQ2RDLEtBRGMsQ0FDUjtBQUNIUSxRQUFBQSxRQUFRLEVBQUUxQixHQUFHLENBQUNnQixJQUFKLENBQVNHLEVBRGhCO0FBRUhRLFFBQUFBLFVBQVUsRUFBRTNCLEdBQUcsQ0FBQzRCLE1BQUosQ0FBV0Q7QUFGcEIsT0FEUSxFQUtkUCxLQUxjLEVBQW5COztBQU9BLFVBQUksQ0FBQ0ssSUFBTCxFQUFXO0FBQ1AsZUFBT3hCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSDs7QUFDRFIsTUFBQUEsSUFBSTtBQUNQLEtBWkQsQ0FZRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaEJEO0FBaUJIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKFwiLi4vYXBpL3VzZXIvdXNlci5tb2RlbFwiKTtcbmNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vYXBpL2NvbXBhbnkvY29tcGFueS5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYXV0aCxcbiAgICBpc093bmVyLFxufTtcblxuZnVuY3Rpb24gYXV0aChyb2xlcyA9IFtdKSB7XG4gICAgaWYgKHR5cGVvZiByb2xlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByb2xlcyA9IFtyb2xlc107XG4gICAgfVxuXG4gICAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICBsZXQgdG9rZW47XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24gJiZcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3RhcnRzV2l0aChcIkJlYXJlciBcIilcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCJCZWFyZXIgXCIpWzFdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlRva2VuIG5vdCBmb3VuZCwgYWNjZXNzIGRlbmllZFwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB2ZXJpZnkgdG9rZW4gYW5kIGFjY291bnRcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xuXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5xdWVyeSgpXG4gICAgICAgICAgICAgICAgLndoZXJlKHsgaWQ6IGRlY29kZWRUb2tlbi5pZCB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIXVzZXIgfHwgKHJvbGVzLmxlbmd0aCAmJiAhcm9sZXMuaW5jbHVkZXMoZGVjb2RlZFRva2VuLnJvbGUpKSkge1xuICAgICAgICAgICAgICAgIC8vIGFjY291bnQgZG9lcyBub3QgZXhpc3Qgb3Igcm9sZSBub3QgYXV0aG9yaXplZFxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdXRob3JpemVkXCIgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGF1dGhlbnRpY2F0aW9uIGFuZCBhdXRob3JpemF0aW9uIHN1Y2Nlc3NmdWxcbiAgICAgICAgICAgIHJlcS51c2VyID0gZGVjb2RlZFRva2VuO1xuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBpc093bmVyKCkge1xuICAgIHJldHVybiBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGJvb2wgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KClcbiAgICAgICAgICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgICAgICAgICBvd25lcl9pZDogcmVxLnVzZXIuaWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIWJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuIl19",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\nconst User = require(\"../api/user/user.model\");\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n    auth,\n    isOwner,\n};\n\nfunction auth(roles = []) {\n    if (typeof roles === \"string\") {\n        roles = [roles];\n    }\n\n    return async (req, res, next) => {\n        let token;\n        if (\n            req.headers.authorization &&\n            req.headers.authorization.startsWith(\"Bearer \")\n        ) {\n            token = req.headers.authorization.split(\"Bearer \")[1];\n        } else {\n            return res.status(403).json({\n                message: \"Token not found, access denied\",\n            });\n        }\n\n        // verify token and account\n        try {\n            const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n\n            const user = await User.query()\n                .where({ id: decodedToken.id })\n                .first();\n\n            if (!user || (roles.length && !roles.includes(decodedToken.role))) {\n                // account does not exist or role not authorized\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            // authentication and authorization successful\n            req.user = decodedToken;\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n\nfunction isOwner() {\n    return async (req, res, next) => {\n        try {\n            const bool = await Company.query()\n                .where({\n                    owner_id: req.user.id,\n                    company_id: req.params.company_id,\n                })\n                .first();\n\n            if (!bool) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c1/auth_c11b599cb8ed1c90504edcca0550628f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2940",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/auth.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7297,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7294,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "auth",
                "ranges": [
                  {
                    "startOffset": 275,
                    "endOffset": 1253,
                    "count": 28
                  },
                  {
                    "startOffset": 336,
                    "endOffset": 362,
                    "count": 5
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 1250,
                    "count": 33
                  },
                  {
                    "startOffset": 451,
                    "endOffset": 501,
                    "count": 16
                  },
                  {
                    "startOffset": 503,
                    "endOffset": 571,
                    "count": 16
                  },
                  {
                    "startOffset": 571,
                    "endOffset": 680,
                    "count": 1
                  },
                  {
                    "startOffset": 680,
                    "endOffset": 953,
                    "count": 16
                  },
                  {
                    "startOffset": 955,
                    "endOffset": 1105,
                    "count": 1
                  },
                  {
                    "startOffset": 1105,
                    "endOffset": 1206,
                    "count": 15
                  },
                  {
                    "startOffset": 1206,
                    "endOffset": 1246,
                    "count": 0
                  },
                  {
                    "startOffset": 1246,
                    "endOffset": 1249,
                    "count": 15
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 1255,
                    "endOffset": 1643,
                    "count": 3
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1285,
                    "endOffset": 1640,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n  static get tableName() {\n    return tableNames.company;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const User = require(\"../user/user.model\");\n\n    const Account = require(\"./accounts/accounts.model\");\n\n    const Menu = require(\"./menu/menu.model\");\n\n    return {\n      owner: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.company}.owner_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      accounts: {\n        relation: Model.HasManyRelation,\n        modelClass: Account,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.accounts}.company_id`\n        }\n      },\n      menus: {\n        relation: Model.HasManyRelation,\n        modelClass: Menu,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.menu}.company_id`\n        }\n      }\n    };\n  }\n\n}\n\nmodule.exports = Company;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsInNjaGVtYSIsIkNvbXBhbnkiLCJ0YWJsZU5hbWUiLCJjb21wYW55IiwianNvblNjaGVtYSIsInJlbGF0aW9uTWFwcGluZ3MiLCJVc2VyIiwiQWNjb3VudCIsIk1lbnUiLCJvd25lciIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsInVzZXIiLCJhY2NvdW50cyIsIkhhc01hbnlSZWxhdGlvbiIsIm1lbnVzIiwibWVudSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyw0QkFBRCxDQUExQjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxNQUFNRyxPQUFOLFNBQXNCSixLQUF0QixDQUE0QjtBQUN4QixhQUFXSyxTQUFYLEdBQXVCO0FBQ25CLFdBQU9ILFVBQVUsQ0FBQ0ksT0FBbEI7QUFDSDs7QUFFRCxhQUFXQyxVQUFYLEdBQXdCO0FBQ3BCLFdBQU9KLE1BQVA7QUFDSDs7QUFFRCxhQUFXSyxnQkFBWCxHQUE4QjtBQUMxQjtBQUNBLFVBQU1DLElBQUksR0FBR1IsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLFVBQU1TLE9BQU8sR0FBR1QsT0FBTyxDQUFDLDJCQUFELENBQXZCOztBQUNBLFVBQU1VLElBQUksR0FBR1YsT0FBTyxDQUFDLG1CQUFELENBQXBCOztBQUVBLFdBQU87QUFDSFcsTUFBQUEsS0FBSyxFQUFFO0FBQ0hDLFFBQUFBLFFBQVEsRUFBRWIsS0FBSyxDQUFDYyxvQkFEYjtBQUVIQyxRQUFBQSxVQUFVLEVBQUVOLElBRlQ7QUFHSE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZixVQUFVLENBQUNJLE9BQVEsV0FEMUI7QUFFRlksVUFBQUEsRUFBRSxFQUFHLEdBQUVoQixVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEgsT0FESjtBQVNIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURWO0FBRU5OLFFBQUFBLFVBQVUsRUFBRUwsT0FGTjtBQUdOTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ2tCLFFBQVM7QUFGekI7QUFIQSxPQVRQO0FBaUJIRSxNQUFBQSxLQUFLLEVBQUU7QUFDSFQsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURiO0FBRUhOLFFBQUFBLFVBQVUsRUFBRUosSUFGVDtBQUdISyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ3FCLElBQUs7QUFGckI7QUFISDtBQWpCSixLQUFQO0FBMEJIOztBQXpDdUI7O0FBNEM1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckIsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2NvbXBhbnkuc2NoZW1hLmpzb25cIik7XG5cbmNsYXNzIENvbXBhbnkgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLmNvbXBhbnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgQWNjb3VudCA9IHJlcXVpcmUoXCIuL2FjY291bnRzL2FjY291bnRzLm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvd25lcjoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBVc2VyLFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5vd25lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFjY291bnRzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBBY2NvdW50LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmFjY291bnRzfS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1lbnVzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBNZW51LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLm1lbnV9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wYW55O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n    static get tableName() {\n        return tableNames.company;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const User = require(\"../user/user.model\");\n        const Account = require(\"./accounts/accounts.model\");\n        const Menu = require(\"./menu/menu.model\");\n\n        return {\n            owner: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.company}.owner_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            accounts: {\n                relation: Model.HasManyRelation,\n                modelClass: Account,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.accounts}.company_id`,\n                },\n            },\n            menus: {\n                relation: Model.HasManyRelation,\n                modelClass: Menu,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.menu}.company_id`,\n                },\n            },\n        };\n    }\n}\n\nmodule.exports = Company;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8b/companymodel_8b713279ce3af8b604431fcbf24964b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2941",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5514,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5511,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Company",
                "ranges": [
                  {
                    "startOffset": 241,
                    "endOffset": 241,
                    "count": 20
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 280,
                    "endOffset": 332,
                    "count": 81
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 343,
                    "endOffset": 384,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 395,
                    "endOffset": 1298,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  admin: \"admin\",\n  owner: \"owner\",\n  customer: \"customer\",\n  staff: \"staff\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFkbWluIiwib3duZXIiLCJjdXN0b21lciIsInN0YWZmIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLEtBQUssRUFBRSxPQURNO0FBRWJDLEVBQUFBLEtBQUssRUFBRSxPQUZNO0FBR2JDLEVBQUFBLFFBQVEsRUFBRSxVQUhHO0FBSWJDLEVBQUFBLEtBQUssRUFBRTtBQUpNLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYWRtaW46IFwiYWRtaW5cIixcbiAgICBvd25lcjogXCJvd25lclwiLFxuICAgIGN1c3RvbWVyOiBcImN1c3RvbWVyXCIsXG4gICAgc3RhZmY6IFwic3RhZmZcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    admin: \"admin\",\n    owner: \"owner\",\n    customer: \"customer\",\n    staff: \"staff\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c3/role_c386996d0c7428ed82a7fa0a3ec37236.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2942",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/role.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 789,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 786,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./company.validators\");\n\nconst companyService = require(\"./company.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nconst {\n  scopedItems\n} = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\n\nconst Menu = require(\"./menu/menu.routes\");\n\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/1/accounts\n\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.owner_id = req.user.id;\n  companyService.create(req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n  companyService.getAllCompanies().then(companies => {\n    res.json(scopedItems(req.user, companies));\n  }).catch(next);\n}\n\nfunction getMyCompanies(req, res, next) {\n  companyService.getMyCompanies(req.user.id).then(companies => companies ? res.json(companies) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyById(req, res, next) {\n  // owner can get his company and the admin can get any company\n  companyService.getCompanyById(req.params.id).then(company => {\n    if (company.owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    res.json(company);\n  }).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company\n  companyService.updateCompany({\n    id: req.params.id,\n    owner_id: req.user.id\n  }, req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n  // only owner delete can delete their company\n  companyService._delete({\n    id: parseInt(req.params.id),\n    owner_id: req.user.id\n  }).then(() => {\n    res.json({\n      id: parseInt(req.params.id)\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkucm91dGVzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY3JlYXRlU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwiY29tcGFueVNlcnZpY2UiLCJhdXRoIiwiQXV0aCIsIlJvbGUiLCJzY29wZWRJdGVtcyIsIkFjY291bnQiLCJNZW51IiwiT3JkZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInVzZSIsInBvc3QiLCJvd25lciIsImNyZWF0ZSIsInBhdGNoIiwidXBkYXRlIiwiZ2V0IiwiYWRtaW4iLCJnZXRBbGxDb21wYW5pZXMiLCJnZXRNeUNvbXBhbmllcyIsImdldENvbXBhbnlCeUlkIiwiZGVsZXRlIiwiX2RlbGV0ZUNvbXBhbnkiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsImJvZHkiLCJvd25lcl9pZCIsInVzZXIiLCJpZCIsInRoZW4iLCJjb21wYW55IiwianNvbiIsImNhdGNoIiwiY29tcGFuaWVzIiwic2VuZFN0YXR1cyIsInBhcmFtcyIsInJvbGUiLCJzdGF0dXMiLCJtZXNzYWdlIiwidXBkYXRlQ29tcGFueSIsIl9kZWxldGUiLCJwYXJzZUludCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBO0FBQWhCLElBQWlDRixPQUFPLENBQUMsc0JBQUQsQ0FBOUM7O0FBQ0EsTUFBTUcsY0FBYyxHQUFHSCxPQUFPLENBQUMsbUJBQUQsQ0FBOUI7O0FBQ0EsTUFBTTtBQUFFSSxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJMLE9BQU8sQ0FBQyx5QkFBRCxDQUE5Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxrQkFBRCxDQUFwQjs7QUFDQSxNQUFNO0FBQUVPLEVBQUFBO0FBQUYsSUFBa0JQLE9BQU8sQ0FBQyx5QkFBRCxDQUEvQjs7QUFFQSxNQUFNUSxPQUFPLEdBQUdSLE9BQU8sQ0FBQyw0QkFBRCxDQUF2Qjs7QUFDQSxNQUFNUyxJQUFJLEdBQUdULE9BQU8sQ0FBQyxvQkFBRCxDQUFwQjs7QUFDQSxNQUFNVSxLQUFLLEdBQUdWLE9BQU8sQ0FBQyxzQkFBRCxDQUFyQjs7QUFFQSxNQUFNVyxNQUFNLEdBQUdaLE9BQU8sQ0FBQ2EsTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWYsQyxDQUlBOztBQUNBRixNQUFNLENBQUNHLEdBQVAsQ0FBVyx1QkFBWCxFQUFvQ04sT0FBcEM7QUFDQUcsTUFBTSxDQUFDRyxHQUFQLENBQVcsbUJBQVgsRUFBZ0NMLElBQWhDO0FBQ0FFLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLG9CQUFYLEVBQWlDSixLQUFqQztBQUVBQyxNQUFNLENBQUNJLElBQVAsQ0FBWSxHQUFaLEVBQWlCVixJQUFJLENBQUMsQ0FBQ0MsSUFBSSxDQUFDVSxLQUFOLENBQUQsQ0FBckIsRUFBcUNmLFlBQXJDLEVBQW1EZ0IsTUFBbkQ7QUFDQU4sTUFBTSxDQUFDTyxLQUFQLENBQWEsTUFBYixFQUFxQmIsSUFBSSxDQUFDLENBQUNDLElBQUksQ0FBQ1UsS0FBTixDQUFELENBQXpCLEVBQXlDZCxZQUF6QyxFQUF1RGlCLE1BQXZEO0FBQ0FSLE1BQU0sQ0FBQ1MsR0FBUCxDQUFXLEdBQVgsRUFBZ0JmLElBQUksQ0FBQyxDQUFDQyxJQUFJLENBQUNlLEtBQU4sQ0FBRCxDQUFwQixFQUFvQ0MsZUFBcEM7QUFDQVgsTUFBTSxDQUFDUyxHQUFQLENBQVcsT0FBWCxFQUFvQmYsSUFBSSxDQUFDLENBQUNDLElBQUksQ0FBQ1UsS0FBTixDQUFELENBQXhCLEVBQXdDTyxjQUF4QztBQUNBWixNQUFNLENBQUNTLEdBQVAsQ0FBVyxNQUFYLEVBQW1CZixJQUFJLENBQUMsQ0FBQ0MsSUFBSSxDQUFDZSxLQUFOLEVBQWFmLElBQUksQ0FBQ1UsS0FBbEIsQ0FBRCxDQUF2QixFQUFtRFEsY0FBbkQ7QUFDQWIsTUFBTSxDQUFDYyxNQUFQLENBQWMsTUFBZCxFQUFzQnBCLElBQUksQ0FBQyxDQUFDQyxJQUFJLENBQUNlLEtBQU4sRUFBYWYsSUFBSSxDQUFDVSxLQUFsQixDQUFELENBQTFCLEVBQXNEVSxjQUF0RDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJqQixNQUFqQjs7QUFFQSxTQUFTTSxNQUFULENBQWdCWSxHQUFoQixFQUFxQkMsR0FBckIsRUFBMEJDLElBQTFCLEVBQWdDO0FBQzVCRixFQUFBQSxHQUFHLENBQUNHLElBQUosQ0FBU0MsUUFBVCxHQUFvQkosR0FBRyxDQUFDSyxJQUFKLENBQVNDLEVBQTdCO0FBQ0FoQyxFQUFBQSxjQUFjLENBQ1RjLE1BREwsQ0FDWVksR0FBRyxDQUFDRyxJQURoQixFQUVLSSxJQUZMLENBRVdDLE9BQUQsSUFBYVAsR0FBRyxDQUFDUSxJQUFKLENBQVNELE9BQVQsQ0FGdkIsRUFHS0UsS0FITCxDQUdXUixJQUhYO0FBSUg7O0FBRUQsU0FBU1QsZUFBVCxDQUF5Qk8sR0FBekIsRUFBOEJDLEdBQTlCLEVBQW1DQyxJQUFuQyxFQUF5QztBQUNyQzVCLEVBQUFBLGNBQWMsQ0FDVG1CLGVBREwsR0FFS2MsSUFGTCxDQUVXSSxTQUFELElBQWU7QUFDakJWLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTL0IsV0FBVyxDQUFDc0IsR0FBRyxDQUFDSyxJQUFMLEVBQVdNLFNBQVgsQ0FBcEI7QUFDSCxHQUpMLEVBS0tELEtBTEwsQ0FLV1IsSUFMWDtBQU1IOztBQUNELFNBQVNSLGNBQVQsQ0FBd0JNLEdBQXhCLEVBQTZCQyxHQUE3QixFQUFrQ0MsSUFBbEMsRUFBd0M7QUFDcEM1QixFQUFBQSxjQUFjLENBQ1RvQixjQURMLENBQ29CTSxHQUFHLENBQUNLLElBQUosQ0FBU0MsRUFEN0IsRUFFS0MsSUFGTCxDQUVXSSxTQUFELElBQ0ZBLFNBQVMsR0FBR1YsR0FBRyxDQUFDUSxJQUFKLENBQVNFLFNBQVQsQ0FBSCxHQUF5QlYsR0FBRyxDQUFDVyxVQUFKLENBQWUsR0FBZixDQUgxQyxFQUtLRixLQUxMLENBS1dSLElBTFg7QUFNSDs7QUFDRCxTQUFTUCxjQUFULENBQXdCSyxHQUF4QixFQUE2QkMsR0FBN0IsRUFBa0NDLElBQWxDLEVBQXdDO0FBQ3BDO0FBQ0E1QixFQUFBQSxjQUFjLENBQ1RxQixjQURMLENBQ29CSyxHQUFHLENBQUNhLE1BQUosQ0FBV1AsRUFEL0IsRUFFS0MsSUFGTCxDQUVXQyxPQUFELElBQWE7QUFDZixRQUNJQSxPQUFPLENBQUNKLFFBQVIsS0FBcUJKLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxFQUE5QixJQUNBTixHQUFHLENBQUNLLElBQUosQ0FBU1MsSUFBVCxLQUFrQnJDLElBQUksQ0FBQ2UsS0FGM0IsRUFHRTtBQUNFLGFBQU9TLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLEdBQVgsRUFBZ0JOLElBQWhCLENBQXFCO0FBQUVPLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQXJCLENBQVA7QUFDSDs7QUFFRGYsSUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVNELE9BQVQ7QUFDSCxHQVhMLEVBWUtFLEtBWkwsQ0FZV1IsSUFaWDtBQWFIOztBQUVELFNBQVNaLE1BQVQsQ0FBZ0JVLEdBQWhCLEVBQXFCQyxHQUFyQixFQUEwQkMsSUFBMUIsRUFBZ0M7QUFDNUI7QUFDQTVCLEVBQUFBLGNBQWMsQ0FDVDJDLGFBREwsQ0FDbUI7QUFBRVgsSUFBQUEsRUFBRSxFQUFFTixHQUFHLENBQUNhLE1BQUosQ0FBV1AsRUFBakI7QUFBcUJGLElBQUFBLFFBQVEsRUFBRUosR0FBRyxDQUFDSyxJQUFKLENBQVNDO0FBQXhDLEdBRG5CLEVBQ2lFTixHQUFHLENBQUNHLElBRHJFLEVBRUtJLElBRkwsQ0FFV0MsT0FBRCxJQUFhUCxHQUFHLENBQUNRLElBQUosQ0FBU0QsT0FBVCxDQUZ2QixFQUdLRSxLQUhMLENBR1dSLElBSFg7QUFJSDs7QUFFRCxTQUFTTCxjQUFULENBQXdCRyxHQUF4QixFQUE2QkMsR0FBN0IsRUFBa0NDLElBQWxDLEVBQXdDO0FBQ3BDO0FBQ0E1QixFQUFBQSxjQUFjLENBQ1Q0QyxPQURMLENBQ2E7QUFBRVosSUFBQUEsRUFBRSxFQUFFYSxRQUFRLENBQUNuQixHQUFHLENBQUNhLE1BQUosQ0FBV1AsRUFBWixDQUFkO0FBQStCRixJQUFBQSxRQUFRLEVBQUVKLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQztBQUFsRCxHQURiLEVBRUtDLElBRkwsQ0FFVSxNQUFNO0FBQ1JOLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUVILE1BQUFBLEVBQUUsRUFBRWEsUUFBUSxDQUFDbkIsR0FBRyxDQUFDYSxNQUFKLENBQVdQLEVBQVo7QUFBZCxLQUFUO0FBQ0gsR0FKTCxFQUtLSSxLQUxMLENBS1dSLElBTFg7QUFNSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHsgY3JlYXRlU2NoZW1hLCB1cGRhdGVTY2hlbWEgfSA9IHJlcXVpcmUoXCIuL2NvbXBhbnkudmFsaWRhdG9yc1wiKTtcbmNvbnN0IGNvbXBhbnlTZXJ2aWNlID0gcmVxdWlyZShcIi4vY29tcGFueS5zZXJ2aWNlXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCB7IHNjb3BlZEl0ZW1zIH0gPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvcGVybWlzc2lvbnNcIik7XG5cbmNvbnN0IEFjY291bnQgPSByZXF1aXJlKFwiLi9hY2NvdW50cy9hY2NvdW50cy5yb3V0ZXNcIik7XG5jb25zdCBNZW51ID0gcmVxdWlyZShcIi4vbWVudS9tZW51LnJvdXRlc1wiKTtcbmNvbnN0IE9yZGVyID0gcmVxdWlyZShcIi4vb3JkZXIvb3JkZXIucm91dGVzXCIpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcih7XG4gICAgbWVyZ2VQYXJhbXM6IHRydWUsXG59KTtcblxuLy8gYXBpL3YxL2NvbXBhbnkvMS9hY2NvdW50c1xucm91dGVyLnVzZShcIi86Y29tcGFueV9pZC9hY2NvdW50c1wiLCBBY2NvdW50KTtcbnJvdXRlci51c2UoXCIvOmNvbXBhbnlfaWQvbWVudVwiLCBNZW51KTtcbnJvdXRlci51c2UoXCIvOmNvbXBhbnlfaWQvb3JkZXJcIiwgT3JkZXIpO1xuXG5yb3V0ZXIucG9zdChcIi9cIiwgQXV0aChbUm9sZS5vd25lcl0pLCBjcmVhdGVTY2hlbWEsIGNyZWF0ZSk7XG5yb3V0ZXIucGF0Y2goXCIvOmlkXCIsIEF1dGgoW1JvbGUub3duZXJdKSwgdXBkYXRlU2NoZW1hLCB1cGRhdGUpO1xucm91dGVyLmdldChcIi9cIiwgQXV0aChbUm9sZS5hZG1pbl0pLCBnZXRBbGxDb21wYW5pZXMpO1xucm91dGVyLmdldChcIi9taW5lXCIsIEF1dGgoW1JvbGUub3duZXJdKSwgZ2V0TXlDb21wYW5pZXMpO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aChbUm9sZS5hZG1pbiwgUm9sZS5vd25lcl0pLCBnZXRDb21wYW55QnlJZCk7XG5yb3V0ZXIuZGVsZXRlKFwiLzppZFwiLCBBdXRoKFtSb2xlLmFkbWluLCBSb2xlLm93bmVyXSksIF9kZWxldGVDb21wYW55KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG5cbmZ1bmN0aW9uIGNyZWF0ZShyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcS5ib2R5Lm93bmVyX2lkID0gcmVxLnVzZXIuaWQ7XG4gICAgY29tcGFueVNlcnZpY2VcbiAgICAgICAgLmNyZWF0ZShyZXEuYm9keSlcbiAgICAgICAgLnRoZW4oKGNvbXBhbnkpID0+IHJlcy5qc29uKGNvbXBhbnkpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldEFsbENvbXBhbmllcyhyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbXBhbnlTZXJ2aWNlXG4gICAgICAgIC5nZXRBbGxDb21wYW5pZXMoKVxuICAgICAgICAudGhlbigoY29tcGFuaWVzKSA9PiB7XG4gICAgICAgICAgICByZXMuanNvbihzY29wZWRJdGVtcyhyZXEudXNlciwgY29tcGFuaWVzKSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChuZXh0KTtcbn1cbmZ1bmN0aW9uIGdldE15Q29tcGFuaWVzKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29tcGFueVNlcnZpY2VcbiAgICAgICAgLmdldE15Q29tcGFuaWVzKHJlcS51c2VyLmlkKVxuICAgICAgICAudGhlbigoY29tcGFuaWVzKSA9PlxuICAgICAgICAgICAgY29tcGFuaWVzID8gcmVzLmpzb24oY29tcGFuaWVzKSA6IHJlcy5zZW5kU3RhdHVzKDQwNClcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5mdW5jdGlvbiBnZXRDb21wYW55QnlJZChyZXEsIHJlcywgbmV4dCkge1xuICAgIC8vIG93bmVyIGNhbiBnZXQgaGlzIGNvbXBhbnkgYW5kIHRoZSBhZG1pbiBjYW4gZ2V0IGFueSBjb21wYW55XG4gICAgY29tcGFueVNlcnZpY2VcbiAgICAgICAgLmdldENvbXBhbnlCeUlkKHJlcS5wYXJhbXMuaWQpXG4gICAgICAgIC50aGVuKChjb21wYW55KSA9PiB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgY29tcGFueS5vd25lcl9pZCAhPT0gcmVxLnVzZXIuaWQgJiZcbiAgICAgICAgICAgICAgICByZXEudXNlci5yb2xlICE9PSBSb2xlLmFkbWluXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXMuanNvbihjb21wYW55KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGUocmVxLCByZXMsIG5leHQpIHtcbiAgICAvLyBvbmx5IG93bmVyIGNhbiB1cGRhdGUgdGhlaXIgY29tcGFueVxuICAgIGNvbXBhbnlTZXJ2aWNlXG4gICAgICAgIC51cGRhdGVDb21wYW55KHsgaWQ6IHJlcS5wYXJhbXMuaWQsIG93bmVyX2lkOiByZXEudXNlci5pZCB9LCByZXEuYm9keSlcbiAgICAgICAgLnRoZW4oKGNvbXBhbnkpID0+IHJlcy5qc29uKGNvbXBhbnkpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIF9kZWxldGVDb21wYW55KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8gb25seSBvd25lciBkZWxldGUgY2FuIGRlbGV0ZSB0aGVpciBjb21wYW55XG4gICAgY29tcGFueVNlcnZpY2VcbiAgICAgICAgLl9kZWxldGUoeyBpZDogcGFyc2VJbnQocmVxLnBhcmFtcy5pZCksIG93bmVyX2lkOiByZXEudXNlci5pZCB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICByZXMuanNvbih7IGlkOiBwYXJzZUludChyZXEucGFyYW1zLmlkKSB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuIl19",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./company.validators\");\nconst companyService = require(\"./company.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\nconst { scopedItems } = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\nconst Menu = require(\"./menu/menu.routes\");\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/1/accounts\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.owner_id = req.user.id;\n    companyService\n        .create(req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n    companyService\n        .getAllCompanies()\n        .then((companies) => {\n            res.json(scopedItems(req.user, companies));\n        })\n        .catch(next);\n}\nfunction getMyCompanies(req, res, next) {\n    companyService\n        .getMyCompanies(req.user.id)\n        .then((companies) =>\n            companies ? res.json(companies) : res.sendStatus(404)\n        )\n        .catch(next);\n}\nfunction getCompanyById(req, res, next) {\n    // owner can get his company and the admin can get any company\n    companyService\n        .getCompanyById(req.params.id)\n        .then((company) => {\n            if (\n                company.owner_id !== req.user.id &&\n                req.user.role !== Role.admin\n            ) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            res.json(company);\n        })\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company\n    companyService\n        .updateCompany({ id: req.params.id, owner_id: req.user.id }, req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n    // only owner delete can delete their company\n    companyService\n        ._delete({ id: parseInt(req.params.id), owner_id: req.user.id })\n        .then(() => {\n            res.json({ id: parseInt(req.params.id) });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2a/companyroutes_2accae81b914ebc49b8ad824faf130cd.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2943",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 11663,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 11660,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1186,
                    "endOffset": 1338,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1294,
                    "endOffset": 1322,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1340,
                    "endOffset": 1505,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1423,
                    "endOffset": 1489,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1507,
                    "endOffset": 1681,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1599,
                    "endOffset": 1665,
                    "count": 1
                  },
                  {
                    "startOffset": 1644,
                    "endOffset": 1665,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1683,
                    "endOffset": 2058,
                    "count": 3
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1842,
                    "endOffset": 2042,
                    "count": 3
                  },
                  {
                    "startOffset": 1896,
                    "endOffset": 1927,
                    "count": 1
                  },
                  {
                    "startOffset": 1929,
                    "endOffset": 2014,
                    "count": 1
                  },
                  {
                    "startOffset": 2014,
                    "endOffset": 2041,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2060,
                    "endOffset": 2281,
                    "count": 6
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 2237,
                    "endOffset": 2265,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "_deleteCompany",
                "ranges": [
                  {
                    "startOffset": 2283,
                    "endOffset": 2553,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 2469,
                    "endOffset": 2537,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    logo_url: Joi.string(),\n    website_url: Joi.string(),\n    email: Joi.string().email().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    owner: Joi.number().empty(\"\"),\n    logo_url: Joi.string().empty(\"\"),\n    website_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJkZXNjcmlwdGlvbiIsImxvZ29fdXJsIiwid2Vic2l0ZV91cmwiLCJlbWFpbCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiLCJvd25lciIsIm51bWJlciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyxvQ0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsUUFBUSxFQUFFZCxHQUFHLENBQUNXLE1BQUosRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosRUFKUztBQUt0QkssSUFBQUEsS0FBSyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFLLEtBQWIsR0FBcUJKLFFBQXJCO0FBTGUsR0FBWCxDQUFmO0FBT0FWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQ7O0FBV0FMLE9BQU8sQ0FBQ2MsWUFBUixHQUF1QixDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNVyxXQUFXLEdBQUc7QUFDaEJSLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQk4sSUFBQUEsV0FBVyxFQUFFYixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQixDQUZHO0FBR2hCSCxJQUFBQSxLQUFLLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYUssS0FBYixHQUFxQkcsS0FBckIsQ0FBMkIsRUFBM0IsQ0FIUztBQUloQkMsSUFBQUEsS0FBSyxFQUFFcEIsR0FBRyxDQUFDcUIsTUFBSixHQUFhRixLQUFiLENBQW1CLEVBQW5CLENBSlM7QUFLaEJMLElBQUFBLFFBQVEsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FMTTtBQU1oQkosSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQjtBQU5HLEdBQXBCO0FBU0EsUUFBTVgsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV1MsV0FBWCxDQUFmO0FBRUFoQixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQWJEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBsb2dvX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICB3ZWJzaXRlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIG93bmVyOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGxvZ29fdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIHdlYnNpdGVfdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        logo_url: Joi.string(),\n        website_url: Joi.string(),\n        email: Joi.string().email().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        owner: Joi.number().empty(\"\"),\n        logo_url: Joi.string().empty(\"\"),\n        website_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/3c/companyvalidators_3ce01f397e22205413767a4933ebdfd8.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2944",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4153,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4150,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 489,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 515,
                    "endOffset": 878,
                    "count": 6
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Company = require(\"../company/company.model\");\n\nconst error = require(\"../../utils/error\");\n\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n  create,\n  updateCompany,\n  getAllCompanies,\n  getMyCompanies,\n  getCompanyById,\n  _delete\n};\n\nasync function create(params) {\n  // validate if company name exists\n  if (await getCompany({\n    name: params.name\n  })) {\n    error('Name \"' + params.name + '\" is already registered');\n  }\n\n  const company = await Company.query().insert(params);\n  return company;\n}\n\nasync function updateCompany(queryParams, params) {\n  const company = await getCompany({ ...queryParams\n  });\n\n  if (!company) {\n    error(\"Unauthorized\");\n  } // validate if name was changed\n\n\n  if (params.name && company.name !== params.name && (await getCompany({\n    name: params.name\n  }))) {\n    error(`Name ${params.name} is already taken`);\n  }\n\n  const updatedCompany = await Company.query().patchAndFetchById(queryParams.id, { ...params\n  });\n  return updatedCompany;\n}\n\nasync function getAllCompanies() {\n  const companies = await Company.query();\n  return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n  const companies = await Company.query().where({\n    owner_id: ownerId\n  });\n  return companies;\n}\n\nasync function getCompanyById(id) {\n  const company = await getCompany({\n    id\n  });\n  return company;\n}\n\nasync function _delete(queryParams) {\n  const tobeDeleted = await getCompany(queryParams);\n\n  if (tobeDeleted) {\n    return await Company.query().delete().where({ ...queryParams\n    });\n  }\n\n  return error(\"Forbidden\");\n} // async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCompany(param) {\n  const company = await Company.query().where({ ...param\n  }).first();\n  return company;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJDb21wYW55IiwicmVxdWlyZSIsImVycm9yIiwiY3JlYXRlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlIiwidXBkYXRlQ29tcGFueSIsImdldEFsbENvbXBhbmllcyIsImdldE15Q29tcGFuaWVzIiwiZ2V0Q29tcGFueUJ5SWQiLCJfZGVsZXRlIiwicGFyYW1zIiwiZ2V0Q29tcGFueSIsIm5hbWUiLCJjb21wYW55IiwicXVlcnkiLCJpbnNlcnQiLCJxdWVyeVBhcmFtcyIsInVwZGF0ZWRDb21wYW55IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJpZCIsImNvbXBhbmllcyIsIm93bmVySWQiLCJ3aGVyZSIsIm93bmVyX2lkIiwidG9iZURlbGV0ZWQiLCJkZWxldGUiLCJwYXJhbSIsImZpcnN0Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQywwQkFBRCxDQUF2Qjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUFyQjs7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsTUFEYTtBQUViQyxFQUFBQSxhQUZhO0FBR2JDLEVBQUFBLGVBSGE7QUFJYkMsRUFBQUEsY0FKYTtBQUtiQyxFQUFBQSxjQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsTUFBZixDQUFzQk0sTUFBdEIsRUFBOEI7QUFDMUI7QUFDQSxNQUFJLE1BQU1DLFVBQVUsQ0FBQztBQUFFQyxJQUFBQSxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0U7QUFBZixHQUFELENBQXBCLEVBQTZDO0FBQ3pDWixJQUFBQSxLQUFLLENBQUMsV0FBV1UsTUFBTSxDQUFDRSxJQUFsQixHQUF5Qix5QkFBMUIsQ0FBTDtBQUNIOztBQUVELFFBQU1DLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQWdCQyxNQUFoQixDQUF1QkwsTUFBdkIsQ0FBdEI7QUFDQSxTQUFPRyxPQUFQO0FBQ0g7O0FBRUQsZUFBZVIsYUFBZixDQUE2QlcsV0FBN0IsRUFBMENOLE1BQTFDLEVBQWtEO0FBQzlDLFFBQU1HLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUMsRUFBRSxHQUFHSztBQUFMLEdBQUQsQ0FBaEM7O0FBRUEsTUFBSSxDQUFDSCxPQUFMLEVBQWM7QUFDVmIsSUFBQUEsS0FBSyxDQUFDLGNBQUQsQ0FBTDtBQUNILEdBTDZDLENBTzlDOzs7QUFDQSxNQUNJVSxNQUFNLENBQUNFLElBQVAsSUFDQUMsT0FBTyxDQUFDRCxJQUFSLEtBQWlCRixNQUFNLENBQUNFLElBRHhCLEtBRUMsTUFBTUQsVUFBVSxDQUFDO0FBQUVDLElBQUFBLElBQUksRUFBRUYsTUFBTSxDQUFDRTtBQUFmLEdBQUQsQ0FGakIsQ0FESixFQUlFO0FBQ0VaLElBQUFBLEtBQUssQ0FBRSxRQUFPVSxNQUFNLENBQUNFLElBQUssbUJBQXJCLENBQUw7QUFDSDs7QUFFRCxRQUFNSyxjQUFjLEdBQUcsTUFBTW5CLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JJLGlCQUFoQixDQUN6QkYsV0FBVyxDQUFDRyxFQURhLEVBRXpCLEVBQ0ksR0FBR1Q7QUFEUCxHQUZ5QixDQUE3QjtBQU9BLFNBQU9PLGNBQVA7QUFDSDs7QUFFRCxlQUFlWCxlQUFmLEdBQWlDO0FBQzdCLFFBQU1jLFNBQVMsR0FBRyxNQUFNdEIsT0FBTyxDQUFDZ0IsS0FBUixFQUF4QjtBQUNBLFNBQU9NLFNBQVA7QUFDSDs7QUFFRCxlQUFlYixjQUFmLENBQThCYyxPQUE5QixFQUF1QztBQUNuQyxRQUFNRCxTQUFTLEdBQUcsTUFBTXRCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JRLEtBQWhCLENBQXNCO0FBQzFDQyxJQUFBQSxRQUFRLEVBQUVGO0FBRGdDLEdBQXRCLENBQXhCO0FBR0EsU0FBT0QsU0FBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsQ0FBOEJXLEVBQTlCLEVBQWtDO0FBQzlCLFFBQU1OLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUM7QUFBRVEsSUFBQUE7QUFBRixHQUFELENBQWhDO0FBQ0EsU0FBT04sT0FBUDtBQUNIOztBQUVELGVBQWVKLE9BQWYsQ0FBdUJPLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU1RLFdBQVcsR0FBRyxNQUFNYixVQUFVLENBQUNLLFdBQUQsQ0FBcEM7O0FBRUEsTUFBSVEsV0FBSixFQUFpQjtBQUNiLFdBQU8sTUFBTTFCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FDUlcsTUFEUSxHQUVSSCxLQUZRLENBRUYsRUFBRSxHQUFHTjtBQUFMLEtBRkUsQ0FBYjtBQUdIOztBQUVELFNBQU9oQixLQUFLLENBQUMsV0FBRCxDQUFaO0FBQ0gsQyxDQUVEO0FBQ0E7QUFDQTtBQUVBO0FBRUE7OztBQUVBLGVBQWVXLFVBQWYsQ0FBMEJlLEtBQTFCLEVBQWlDO0FBQzdCLFFBQU1iLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQ2pCUSxLQURpQixDQUNYLEVBQUUsR0FBR0k7QUFBTCxHQURXLEVBRWpCQyxLQUZpQixFQUF0QjtBQUdBLFNBQU9kLE9BQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vY29tcGFueS9jb21wYW55Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5jb25zdCBjcmVhdGVFcnJvciA9IHJlcXVpcmUoXCJodHRwLWVycm9yc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlLFxuICAgIHVwZGF0ZUNvbXBhbnksXG4gICAgZ2V0QWxsQ29tcGFuaWVzLFxuICAgIGdldE15Q29tcGFuaWVzLFxuICAgIGdldENvbXBhbnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGUocGFyYW1zKSB7XG4gICAgLy8gdmFsaWRhdGUgaWYgY29tcGFueSBuYW1lIGV4aXN0c1xuICAgIGlmIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpIHtcbiAgICAgICAgZXJyb3IoJ05hbWUgXCInICsgcGFyYW1zLm5hbWUgKyAnXCIgaXMgYWxyZWFkeSByZWdpc3RlcmVkJyk7XG4gICAgfVxuXG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5pbnNlcnQocGFyYW1zKTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlQ29tcGFueShxdWVyeVBhcmFtcywgcGFyYW1zKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyAuLi5xdWVyeVBhcmFtcyB9KTtcblxuICAgIGlmICghY29tcGFueSkge1xuICAgICAgICBlcnJvcihcIlVuYXV0aG9yaXplZFwiKTtcbiAgICB9XG5cbiAgICAvLyB2YWxpZGF0ZSBpZiBuYW1lIHdhcyBjaGFuZ2VkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjb21wYW55Lm5hbWUgIT09IHBhcmFtcy5uYW1lICYmXG4gICAgICAgIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBOYW1lICR7cGFyYW1zLm5hbWV9IGlzIGFscmVhZHkgdGFrZW5gKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkQ29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5wYXRjaEFuZEZldGNoQnlJZChcbiAgICAgICAgcXVlcnlQYXJhbXMuaWQsXG4gICAgICAgIHtcbiAgICAgICAgICAgIC4uLnBhcmFtcyxcbiAgICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gdXBkYXRlZENvbXBhbnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbmllcygpIHtcbiAgICBjb25zdCBjb21wYW5pZXMgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNvbXBhbmllcztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TXlDb21wYW5pZXMob3duZXJJZCkge1xuICAgIGNvbnN0IGNvbXBhbmllcyA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS53aGVyZSh7XG4gICAgICAgIG93bmVyX2lkOiBvd25lcklkLFxuICAgIH0pO1xuICAgIHJldHVybiBjb21wYW5pZXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnlCeUlkKGlkKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyBpZCB9KTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGNvbnN0IHRvYmVEZWxldGVkID0gYXdhaXQgZ2V0Q29tcGFueShxdWVyeVBhcmFtcyk7XG5cbiAgICBpZiAodG9iZURlbGV0ZWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IENvbXBhbnkucXVlcnkoKVxuICAgICAgICAgICAgLmRlbGV0ZSgpXG4gICAgICAgICAgICAud2hlcmUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXJyb3IoXCJGb3JiaWRkZW5cIik7XG59XG5cbi8vIGFzeW5jIGZ1bmN0aW9uIF9zb2Z0RGVsZXRlKGlkKSB7XG4vL21hcmsgYXMgaW5hY3RpdmVcbi8vICBhd2FpdCBDb21wYW55LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnkocGFyYW0pIHtcbiAgICBjb25zdCBjb21wYW55ID0gYXdhaXQgQ29tcGFueS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBjb21wYW55O1xufVxuIl19",
            "originalCode": "const Company = require(\"../company/company.model\");\nconst error = require(\"../../utils/error\");\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n    create,\n    updateCompany,\n    getAllCompanies,\n    getMyCompanies,\n    getCompanyById,\n    _delete,\n};\n\nasync function create(params) {\n    // validate if company name exists\n    if (await getCompany({ name: params.name })) {\n        error('Name \"' + params.name + '\" is already registered');\n    }\n\n    const company = await Company.query().insert(params);\n    return company;\n}\n\nasync function updateCompany(queryParams, params) {\n    const company = await getCompany({ ...queryParams });\n\n    if (!company) {\n        error(\"Unauthorized\");\n    }\n\n    // validate if name was changed\n    if (\n        params.name &&\n        company.name !== params.name &&\n        (await getCompany({ name: params.name }))\n    ) {\n        error(`Name ${params.name} is already taken`);\n    }\n\n    const updatedCompany = await Company.query().patchAndFetchById(\n        queryParams.id,\n        {\n            ...params,\n        }\n    );\n\n    return updatedCompany;\n}\n\nasync function getAllCompanies() {\n    const companies = await Company.query();\n    return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n    const companies = await Company.query().where({\n        owner_id: ownerId,\n    });\n    return companies;\n}\n\nasync function getCompanyById(id) {\n    const company = await getCompany({ id });\n    return company;\n}\n\nasync function _delete(queryParams) {\n    const tobeDeleted = await getCompany(queryParams);\n\n    if (tobeDeleted) {\n        return await Company.query()\n            .delete()\n            .where({ ...queryParams });\n    }\n\n    return error(\"Forbidden\");\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCompany(param) {\n    const company = await Company.query()\n        .where({ ...param })\n        .first();\n    return company;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/10/companyservice_103976749abb46712c9f5147304425bb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2945",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7967,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 615,
                    "count": 3
                  },
                  {
                    "startOffset": 468,
                    "endOffset": 470,
                    "count": 1
                  },
                  {
                    "startOffset": 470,
                    "endOffset": 538,
                    "count": 0
                  },
                  {
                    "startOffset": 538,
                    "endOffset": 613,
                    "count": 1
                  },
                  {
                    "startOffset": 613,
                    "endOffset": 614,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "updateCompany",
                "ranges": [
                  {
                    "startOffset": 617,
                    "endOffset": 1096,
                    "count": 17
                  },
                  {
                    "startOffset": 726,
                    "endOffset": 744,
                    "count": 6
                  },
                  {
                    "startOffset": 744,
                    "endOffset": 776,
                    "count": 2
                  },
                  {
                    "startOffset": 776,
                    "endOffset": 860,
                    "count": 4
                  },
                  {
                    "startOffset": 861,
                    "endOffset": 911,
                    "count": 3
                  },
                  {
                    "startOffset": 913,
                    "endOffset": 1094,
                    "count": 2
                  },
                  {
                    "startOffset": 1094,
                    "endOffset": 1095,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1098,
                    "endOffset": 1197,
                    "count": 2
                  },
                  {
                    "startOffset": 1175,
                    "endOffset": 1195,
                    "count": 1
                  },
                  {
                    "startOffset": 1195,
                    "endOffset": 1196,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1199,
                    "endOffset": 1339,
                    "count": 2
                  },
                  {
                    "startOffset": 1317,
                    "endOffset": 1337,
                    "count": 1
                  },
                  {
                    "startOffset": 1337,
                    "endOffset": 1338,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1341,
                    "endOffset": 1446,
                    "count": 6
                  },
                  {
                    "startOffset": 1426,
                    "endOffset": 1444,
                    "count": 3
                  },
                  {
                    "startOffset": 1444,
                    "endOffset": 1445,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1448,
                    "endOffset": 1669,
                    "count": 5
                  },
                  {
                    "startOffset": 1538,
                    "endOffset": 1559,
                    "count": 2
                  },
                  {
                    "startOffset": 1559,
                    "endOffset": 1667,
                    "count": 1
                  },
                  {
                    "startOffset": 1667,
                    "endOffset": 1668,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getCompany",
                "ranges": [
                  {
                    "startOffset": 1808,
                    "endOffset": 1933,
                    "count": 30
                  },
                  {
                    "startOffset": 1913,
                    "endOffset": 1931,
                    "count": 15
                  },
                  {
                    "startOffset": 1931,
                    "endOffset": 1932,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = message => {\n  const error = new Error(message);\n  throw error;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9yLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQkMsT0FBRCxJQUFhO0FBQzFCLFFBQU1DLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQVVGLE9BQVYsQ0FBZDtBQUNBLFFBQU1DLEtBQU47QUFDSCxDQUhEIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAobWVzc2FnZSkgPT4ge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIHRocm93IGVycm9yO1xufTtcbiJdfQ==",
            "originalCode": "module.exports = (message) => {\n    const error = new Error(message);\n    throw error;\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/fa/error_fa67f28dedb39797d87045fcac49c533.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2946",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/error.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 690,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 687,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.module.exports",
                "ranges": [
                  {
                    "startOffset": 106,
                    "endOffset": 171,
                    "count": 5
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n  if (user.role == role.admin) return items;\n  return items.filter(item => item.owner_id == user.id);\n}\n\nmodule.exports = {\n  scopedItems\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcm1pc3Npb25zLmpzIl0sIm5hbWVzIjpbInJvbGUiLCJyZXF1aXJlIiwic2NvcGVkSXRlbXMiLCJ1c2VyIiwiaXRlbXMiLCJhZG1pbiIsImZpbHRlciIsIml0ZW0iLCJvd25lcl9pZCIsImlkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxTQUFTQyxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsS0FBM0IsRUFBa0M7QUFDOUIsTUFBSUQsSUFBSSxDQUFDSCxJQUFMLElBQWFBLElBQUksQ0FBQ0ssS0FBdEIsRUFBNkIsT0FBT0QsS0FBUDtBQUM3QixTQUFPQSxLQUFLLENBQUNFLE1BQU4sQ0FBY0MsSUFBRCxJQUFVQSxJQUFJLENBQUNDLFFBQUwsSUFBaUJMLElBQUksQ0FBQ00sRUFBN0MsQ0FBUDtBQUNIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlQsRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvbGUgPSByZXF1aXJlKFwiLi9yb2xlXCIpO1xuXG5mdW5jdGlvbiBzY29wZWRJdGVtcyh1c2VyLCBpdGVtcykge1xuICAgIGlmICh1c2VyLnJvbGUgPT0gcm9sZS5hZG1pbikgcmV0dXJuIGl0ZW1zO1xuICAgIHJldHVybiBpdGVtcy5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0ub3duZXJfaWQgPT0gdXNlci5pZCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHNjb3BlZEl0ZW1zLFxufTtcbiJdfQ==",
            "originalCode": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n    if (user.role == role.admin) return items;\n    return items.filter((item) => item.owner_id == user.id);\n}\n\nmodule.exports = {\n    scopedItems,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/08/permissions_089e905c4105820f9841c9d528f11f86.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2949",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/permissions.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1344,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1341,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "scopedItems",
                "ranges": [
                  {
                    "startOffset": 122,
                    "endOffset": 261,
                    "count": 1
                  },
                  {
                    "startOffset": 202,
                    "endOffset": 260,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 225,
                    "endOffset": 257,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Account = require(\"./accounts.model\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n  mergeParams: true\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n  try {\n    const {\n      owner_id\n    } = req.body;\n\n    if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unathorized\"\n      });\n    }\n\n    const accounts = await Account.query().where({\n      company_id: req.params.company_id,\n      owner_id\n    });\n\n    if (!accounts) {\n      res.status(404);\n    }\n\n    res.json(accounts);\n  } catch (error) {\n    next(error);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJBY2NvdW50IiwicmVxdWlyZSIsIlJvbGUiLCJhdXRoIiwiQXV0aCIsInJvdXRlciIsIlJvdXRlciIsIm1lcmdlUGFyYW1zIiwiZ2V0IiwiYWRtaW4iLCJvd25lciIsImdldEFjY291bnRzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJvd25lcl9pZCIsImJvZHkiLCJ1c2VyIiwiaWQiLCJyb2xlIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJhY2NvdW50cyIsInF1ZXJ5Iiwid2hlcmUiLCJjb21wYW55X2lkIiwicGFyYW1zIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUUsRUFBQUEsSUFBSSxFQUFFQztBQUFSLElBQWlCSCxPQUFPLENBQUMsNEJBQUQsQ0FBOUI7O0FBRUEsTUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CSyxNQUFuQixDQUEwQjtBQUNyQ0MsRUFBQUEsV0FBVyxFQUFFO0FBRHdCLENBQTFCLENBQWY7O0FBSUFGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JKLElBQUksQ0FBQyxDQUFDRixJQUFJLENBQUNPLEtBQU4sRUFBYVAsSUFBSSxDQUFDUSxLQUFsQixDQUFELENBQXBCLEVBQWdEQyxXQUFoRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCOztBQUVBLGVBQWVNLFdBQWYsQ0FBMkJHLEdBQTNCLEVBQWdDQyxHQUFoQyxFQUFxQ0MsSUFBckMsRUFBMkM7QUFDdkMsTUFBSTtBQUNBLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFlSCxHQUFHLENBQUNJLElBQXpCOztBQUVBLFFBQUlELFFBQVEsS0FBS0gsR0FBRyxDQUFDSyxJQUFKLENBQVNDLEVBQXRCLElBQTRCTixHQUFHLENBQUNLLElBQUosQ0FBU0UsSUFBVCxLQUFrQm5CLElBQUksQ0FBQ08sS0FBdkQsRUFBOEQ7QUFDMUQsYUFBT00sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUMsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBckIsQ0FBUDtBQUNIOztBQUVELFVBQU1DLFFBQVEsR0FBRyxNQUFNekIsT0FBTyxDQUFDMEIsS0FBUixHQUFnQkMsS0FBaEIsQ0FBc0I7QUFDekNDLE1BQUFBLFVBQVUsRUFBRWQsR0FBRyxDQUFDZSxNQUFKLENBQVdELFVBRGtCO0FBRXpDWCxNQUFBQTtBQUZ5QyxLQUF0QixDQUF2Qjs7QUFLQSxRQUFJLENBQUNRLFFBQUwsRUFBZTtBQUNYVixNQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYO0FBQ0g7O0FBRURQLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRSxRQUFUO0FBQ0gsR0FqQkQsQ0FpQkUsT0FBT0ssS0FBUCxFQUFjO0FBQ1pkLElBQUFBLElBQUksQ0FBQ2MsS0FBRCxDQUFKO0FBQ0g7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFjY291bnQgPSByZXF1aXJlKFwiLi9hY2NvdW50cy5tb2RlbFwiKTtcbmNvbnN0IFJvbGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvcm9sZVwiKTtcbmNvbnN0IHsgYXV0aDogQXV0aCB9ID0gcmVxdWlyZShcIi4uLy4uLy4uL19taWRkbGV3YXJlcy9hdXRoXCIpO1xuXG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKFwiZXhwcmVzc1wiKS5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5nZXQoXCIvXCIsIEF1dGgoW1JvbGUuYWRtaW4sIFJvbGUub3duZXJdKSwgZ2V0QWNjb3VudHMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWNjb3VudHMocmVxLCByZXMsIG5leHQpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB7IG93bmVyX2lkIH0gPSByZXEuYm9keTtcblxuICAgICAgICBpZiAob3duZXJfaWQgIT09IHJlcS51c2VyLmlkICYmIHJlcS51c2VyLnJvbGUgIT09IFJvbGUuYWRtaW4pIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdGhvcml6ZWRcIiB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgQWNjb3VudC5xdWVyeSgpLndoZXJlKHtcbiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgIG93bmVyX2lkLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIWFjY291bnRzKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXMuanNvbihhY2NvdW50cyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChlcnJvcik7XG4gICAgfVxufVxuIl19",
            "originalCode": "const Account = require(\"./accounts.model\");\nconst Role = require(\"../../../utils/role\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n    mergeParams: true,\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\n\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n    try {\n        const { owner_id } = req.body;\n\n        if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n            return res.status(401).json({ message: \"Unathorized\" });\n        }\n\n        const accounts = await Account.query().where({\n            company_id: req.params.company_id,\n            owner_id,\n        });\n\n        if (!accounts) {\n            res.status(404);\n        }\n\n        res.json(accounts);\n    } catch (error) {\n        next(error);\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/9b/accountsroutes_9b5521c435078c2c6c307235bad04141.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2950",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4064,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4061,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getAccounts",
                "ranges": [
                  {
                    "startOffset": 402,
                    "endOffset": 886,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n  static get tableName() {\n    return tableNames.accounts;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n}\n\nmodule.exports = Account;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJzY2hlbWEiLCJBY2NvdW50IiwidGFibGVOYW1lIiwiYWNjb3VudHMiLCJqc29uU2NoZW1hIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUVBLE1BQU1HLE9BQU4sU0FBc0JKLEtBQXRCLENBQTRCO0FBQ3hCLGFBQVdLLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0gsVUFBVSxDQUFDSSxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0osTUFBUDtBQUNIOztBQVB1Qjs7QUFVNUJLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2FjY291bnRzLnNjaGVtYS5qc29uXCIpO1xuXG5jbGFzcyBBY2NvdW50IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5hY2NvdW50cztcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IGpzb25TY2hlbWEoKSB7XG4gICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFjY291bnQ7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n    static get tableName() {\n        return tableNames.accounts;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n}\n\nmodule.exports = Account;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/01/accountsmodel_01a1ad309c7db6ca01e6d4ebe4774684.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2951",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1669,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1666,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Account",
                "ranges": [
                  {
                    "startOffset": 245,
                    "endOffset": 245,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 284,
                    "endOffset": 337,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 389,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./menu.validator\");\n\nconst Company = require(\"../company.model\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\n\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/company_id/menu_id/category\n\nrouter.use(\"/:menu_id/category\", Category);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.company_id = req.params.company_id;\n  menuService.createMenu(req.body).then(menu => res.json(menu)).catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  menuService.getAllCompanyMenus({\n    company_id\n  }).then(menus => menus ? res.json(menus) : res.sendStatus(404)).catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n  menuService.getMenuById(req.params.id).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService.updateMenu(req.params.id, req.body);\n  }).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n  // only owner delete can delete their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./menu.validator\");\nconst Company = require(\"../company.model\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/company_id/menu_id/category\nrouter.use(\"/:menu_id/category\", Category);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.company_id = req.params.company_id;\n    menuService\n        .createMenu(req.body)\n        .then((menu) => res.json(menu))\n        .catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n    const { company_id } = req.params;\n\n    menuService\n        .getAllCompanyMenus({ company_id })\n        .then((menus) => (menus ? res.json(menus) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n    menuService\n        .getMenuById(req.params.id)\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService.updateMenu(req.params.id, req.body);\n        })\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n    // only owner delete can delete their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/13/menuroutes_138af69f63d31c1d809ea7f466e071eb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2952",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10631,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10628,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 932,
                    "endOffset": 1091,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 1093,
                    "endOffset": 1312,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1314,
                    "endOffset": 1466,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1468,
                    "endOffset": 1843,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteMenu",
                "ranges": [
                  {
                    "startOffset": 1845,
                    "endOffset": 2285,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    cover_url: Joi.string()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    cover_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUudmFsaWRhdG9yLmpzIl0sIm5hbWVzIjpbIkpvaSIsInJlcXVpcmUiLCJ2YWxpZGF0ZVJlcXVlc3QiLCJleHBvcnRzIiwiY3JlYXRlU2NoZW1hIiwicmVxIiwicmVzIiwibmV4dCIsInNjaGVtYSIsIm9iamVjdCIsIm5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImRlc2NyaXB0aW9uIiwiY292ZXJfdXJsIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsU0FBUyxFQUFFZCxHQUFHLENBQUNXLE1BQUo7QUFIVyxHQUFYLENBQWY7QUFLQVQsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FQRDs7QUFTQUwsT0FBTyxDQUFDWSxZQUFSLEdBQXVCLENBQUNWLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1TLFdBQVcsR0FBRztBQUNoQk4sSUFBQUEsSUFBSSxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixDQUFtQixFQUFuQixDQURVO0FBRWhCSixJQUFBQSxXQUFXLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhTSxLQUFiLENBQW1CLEVBQW5CLENBRkc7QUFHaEJILElBQUFBLFNBQVMsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFwQjtBQU1BLFFBQU1ULE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdPLFdBQVgsQ0FBZjtBQUVBZCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVZEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICB9O1xuXG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdChzY2hlbWFSdWxlcyk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        cover_url: Joi.string(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        cover_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0b/menuvalidator_0bff2254f7ebb231be87a9bba47a9cd7.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2953",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.validator.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3165,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 216,
                    "endOffset": 418,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 444,
                    "endOffset": 689,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./category.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../utils/role\");\n\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\n\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company_id/menu_id/category/category_id/item\n\nrouter.use(\"/:category_id/item\", Item);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  // check if owner of company\n  const payload = req.body;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.createcategory(payload);\n  }).then(category => res.json(category)).catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  categoryService.getAllCompanyCategorys({\n    company_id\n  }).then(categories => categories ? res.json(categories) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n  categoryService.getCategoryById(req.params.id).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company category\n  const payload = req.body;\n  payload.menu_id = req.params.menu_id;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.updateCategory(req.params.id, payload);\n  }).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n  // only owner delete can delete their company category\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n} // =========================================\n\n\nasync function isOwner(owner_id, company_id) {\n  const bool = await Company.query().where({\n    owner_id,\n    id: company_id\n  }).first();\n  return bool;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./category.validators\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst Role = require(\"../../../../utils/role\");\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company_id/menu_id/category/category_id/item\nrouter.use(\"/:category_id/item\", Item);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    // check if owner of company\n    const payload = req.body;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.createcategory(payload);\n        })\n        .then((category) => res.json(category))\n        .catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n    const { company_id } = req.params;\n\n    categoryService\n        .getAllCompanyCategorys({ company_id })\n        .then((categories) =>\n            categories ? res.json(categories) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n    categoryService\n        .getCategoryById(req.params.id)\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company category\n    const payload = req.body;\n    payload.menu_id = req.params.menu_id;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.updateCategory(req.params.id, payload);\n        })\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n    // only owner delete can delete their company category\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n\n// =========================================\nasync function isOwner(owner_id, company_id) {\n    const bool = await Company.query()\n        .where({ owner_id, id: company_id })\n        .first();\n\n    return bool;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/f9/categoryroutes_f95c539ef7b2381e749f49618b0199b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2954",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 12907,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 12904,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 962,
                    "endOffset": 1328,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 1330,
                    "endOffset": 1576,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1578,
                    "endOffset": 1754,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1756,
                    "endOffset": 2229,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteCategory",
                "ranges": [
                  {
                    "startOffset": 2231,
                    "endOffset": 2690,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 2738,
                    "endOffset": 2893,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    menu_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    menu_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVTY2hlbWEiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2NoZW1hIiwib2JqZWN0IiwibmFtZSIsInN0cmluZyIsInJlcXVpcmVkIiwibWVudV9pZCIsIm51bWJlciIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsMENBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxPQUFPLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBRmEsR0FBWCxDQUFmO0FBSUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBTkQ7O0FBUUFMLE9BQU8sQ0FBQ1ksWUFBUixHQUF1QixDQUFDVixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNUyxXQUFXLEdBQUc7QUFDaEJOLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQkosSUFBQUEsT0FBTyxFQUFFYixHQUFHLENBQUNjLE1BQUosR0FBYUcsS0FBYixDQUFtQixFQUFuQjtBQUZPLEdBQXBCO0FBS0EsUUFBTVQsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV08sV0FBWCxDQUFmO0FBRUFkLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBKb2kgPSByZXF1aXJlKFwiam9pXCIpO1xuY29uc3QgdmFsaWRhdGVSZXF1ZXN0ID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL19taWRkbGV3YXJlcy92YWxpZGF0ZVJlcXVlc3RcIik7XG5cbmV4cG9ydHMuY3JlYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        menu_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        menu_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/1b/categoryvalidators_1b6fa12bad6d90716c229117a118363b.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2955",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2827,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2824,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 219,
                    "endOffset": 388,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 414,
                    "endOffset": 616,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./item.validators\");\n\nconst {\n  auth: Auth,\n  isOwner\n} = require(\"../../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../../utils/role\");\n\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  itemService.createItem(req.body).then(item => res.status(201).json(item)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  itemService.getItemById(req.params.id).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction updateItem(req, res, next) {\n  itemService.updateItem(req.params.id, req.body).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n  itemService.deleteItem({\n    id: req.params.id\n  }).then(() => res.json({\n    message: \"Item deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ucm91dGVzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY3JlYXRlU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwiYXV0aCIsIkF1dGgiLCJpc093bmVyIiwiUm9sZSIsIml0ZW1TZXJ2aWNlIiwicm91dGVyIiwiUm91dGVyIiwibWVyZ2VQYXJhbXMiLCJwb3N0Iiwib3duZXIiLCJjcmVhdGUiLCJnZXQiLCJnZXRCeUlkIiwicGF0Y2giLCJ1cGRhdGVJdGVtIiwiZGVsZXRlIiwiZGVsZXRlSXRlbSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY3JlYXRlSXRlbSIsImJvZHkiLCJ0aGVuIiwiaXRlbSIsInN0YXR1cyIsImpzb24iLCJjYXRjaCIsImdldEl0ZW1CeUlkIiwicGFyYW1zIiwiaWQiLCJzZW5kU3RhdHVzIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBO0FBQWhCLElBQWlDRixPQUFPLENBQUMsbUJBQUQsQ0FBOUM7O0FBQ0EsTUFBTTtBQUFFRyxFQUFBQSxJQUFJLEVBQUVDLElBQVI7QUFBY0MsRUFBQUE7QUFBZCxJQUEwQkwsT0FBTyxDQUFDLGtDQUFELENBQXZDOztBQUNBLE1BQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLDJCQUFELENBQXBCOztBQUNBLE1BQU1PLFdBQVcsR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQTNCOztBQUVBLE1BQU1RLE1BQU0sR0FBR1QsT0FBTyxDQUFDVSxNQUFSLENBQWU7QUFDMUJDLEVBQUFBLFdBQVcsRUFBRTtBQURhLENBQWYsQ0FBZjtBQUlBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCUCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBckIsRUFBcUNQLE9BQU8sRUFBNUMsRUFBZ0RKLFlBQWhELEVBQThEWSxNQUE5RDtBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxNQUFYLEVBQW1CVixJQUFJLEVBQXZCLEVBQTJCVyxPQUEzQjtBQUNBUCxNQUFNLENBQUNRLEtBQVAsQ0FBYSxNQUFiLEVBQXFCWixJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBekIsRUFBeUNQLE9BQU8sRUFBaEQsRUFBb0RILFlBQXBELEVBQWtFZSxVQUFsRTtBQUNBVCxNQUFNLENBQUNVLE1BQVAsQ0FBYyxNQUFkLEVBQXNCZCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBMUIsRUFBMENQLE9BQU8sRUFBakQsRUFBcURjLFVBQXJEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakI7O0FBRUEsU0FBU0ssTUFBVCxDQUFnQlMsR0FBaEIsRUFBcUJDLEdBQXJCLEVBQTBCQyxJQUExQixFQUFnQztBQUM1QmpCLEVBQUFBLFdBQVcsQ0FDTmtCLFVBREwsQ0FDZ0JILEdBQUcsQ0FBQ0ksSUFEcEIsRUFFS0MsSUFGTCxDQUVXQyxJQUFELElBQVVMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixJQUFyQixDQUZwQixFQUdLRyxLQUhMLENBR1dQLElBSFg7QUFJSDs7QUFFRCxTQUFTVCxPQUFULENBQWlCTyxHQUFqQixFQUFzQkMsR0FBdEIsRUFBMkJDLElBQTNCLEVBQWlDO0FBQzdCakIsRUFBQUEsV0FBVyxDQUNOeUIsV0FETCxDQUNpQlYsR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDVCLEVBRUtQLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU1AsVUFBVCxDQUFvQkssR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlUsVUFETCxDQUNnQkssR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDNCLEVBQytCWixHQUFHLENBQUNJLElBRG5DLEVBRUtDLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU0wsVUFBVCxDQUFvQkcsR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlksVUFETCxDQUNnQjtBQUFFZSxJQUFBQSxFQUFFLEVBQUVaLEdBQUcsQ0FBQ1csTUFBSixDQUFXQztBQUFqQixHQURoQixFQUVLUCxJQUZMLENBRVUsTUFDRkosR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDTE0sSUFBQUEsT0FBTyxFQUFFLDJCQURKO0FBRUxGLElBQUFBLEVBQUUsRUFBRVosR0FBRyxDQUFDVyxNQUFKLENBQVdDO0FBRlYsR0FBVCxDQUhSLEVBUUtILEtBUkwsQ0FRV1AsSUFSWDtBQVNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBjcmVhdGVTY2hlbWEsIHVwZGF0ZVNjaGVtYSB9ID0gcmVxdWlyZShcIi4vaXRlbS52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoLCBpc093bmVyIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBpdGVtU2VydmljZSA9IHJlcXVpcmUoXCIuL2l0ZW0uc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wb3N0KFwiL1wiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgY3JlYXRlU2NoZW1hLCBjcmVhdGUpO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRCeUlkKTtcbnJvdXRlci5wYXRjaChcIi86aWRcIiwgQXV0aChbUm9sZS5vd25lcl0pLCBpc093bmVyKCksIHVwZGF0ZVNjaGVtYSwgdXBkYXRlSXRlbSk7XG5yb3V0ZXIuZGVsZXRlKFwiLzppZFwiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgZGVsZXRlSXRlbSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuXG5mdW5jdGlvbiBjcmVhdGUocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuY3JlYXRlSXRlbShyZXEuYm9keSlcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKGl0ZW0pKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldEJ5SWQocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuZ2V0SXRlbUJ5SWQocmVxLnBhcmFtcy5pZClcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IChpdGVtID8gcmVzLmpzb24oaXRlbSkgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVJdGVtKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgaXRlbVNlcnZpY2VcbiAgICAgICAgLnVwZGF0ZUl0ZW0ocmVxLnBhcmFtcy5pZCwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChpdGVtKSA9PiAoaXRlbSA/IHJlcy5qc29uKGl0ZW0pIDogcmVzLnNlbmRTdGF0dXMoNDA0KSkpXG4gICAgICAgIC5jYXRjaChuZXh0KTtcbn1cblxuZnVuY3Rpb24gZGVsZXRlSXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIGl0ZW1TZXJ2aWNlXG4gICAgICAgIC5kZWxldGVJdGVtKHsgaWQ6IHJlcS5wYXJhbXMuaWQgfSlcbiAgICAgICAgLnRoZW4oKCkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkl0ZW0gZGVsZXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgICAgICBpZDogcmVxLnBhcmFtcy5pZCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuIl19",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./item.validators\");\nconst { auth: Auth, isOwner } = require(\"../../../../../_middlewares/auth\");\nconst Role = require(\"../../../../../utils/role\");\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    itemService\n        .createItem(req.body)\n        .then((item) => res.status(201).json(item))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    itemService\n        .getItemById(req.params.id)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction updateItem(req, res, next) {\n    itemService\n        .updateItem(req.params.id, req.body)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n    itemService\n        .deleteItem({ id: req.params.id })\n        .then(() =>\n            res.json({\n                message: \"Item deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/de/itemroutes_de9b46cc999b0a12213b699c8d15bd22.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2956",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6599,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6596,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 717,
                    "endOffset": 841,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 843,
                    "endOffset": 991,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 993,
                    "endOffset": 1153,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 1155,
                    "endOffset": 1353,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    price: Joi.number().required(),\n    quantity: Joi.number().required(),\n    description: Joi.string().required(),\n    image_url: Joi.string(),\n    category_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    price: Joi.number().empty(\"\"),\n    quantity: Joi.number().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    image_url: Joi.string(),\n    category_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0udmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJwcmljZSIsIm51bWJlciIsInF1YW50aXR5IiwiZGVzY3JpcHRpb24iLCJpbWFnZV91cmwiLCJjYXRlZ29yeV9pZCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsNkNBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxLQUFLLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiLEVBRmU7QUFHdEJHLElBQUFBLFFBQVEsRUFBRWYsR0FBRyxDQUFDYyxNQUFKLEdBQWFGLFFBQWIsRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFKUztBQUt0QkssSUFBQUEsU0FBUyxFQUFFakIsR0FBRyxDQUFDVyxNQUFKLEVBTFc7QUFNdEJPLElBQUFBLFdBQVcsRUFBRWxCLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBTlMsR0FBWCxDQUFmO0FBUUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVkQ7O0FBWUFMLE9BQU8sQ0FBQ2dCLFlBQVIsR0FBdUIsQ0FBQ2QsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTWEsV0FBVyxHQUFHO0FBQ2hCVixJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CLEVBQW5CLENBRFU7QUFFaEJSLElBQUFBLEtBQUssRUFBRWIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGUztBQUdoQk4sSUFBQUEsUUFBUSxFQUFFZixHQUFHLENBQUNjLE1BQUosR0FBYU8sS0FBYixDQUFtQixFQUFuQixDQUhNO0FBSWhCTCxJQUFBQSxXQUFXLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYVUsS0FBYixDQUFtQixFQUFuQixDQUpHO0FBS2hCSixJQUFBQSxTQUFTLEVBQUVqQixHQUFHLENBQUNXLE1BQUosRUFMSztBQU1oQk8sSUFBQUEsV0FBVyxFQUFFbEIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkI7QUFORyxHQUFwQjtBQVNBLFFBQU1iLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdXLFdBQVgsQ0FBZjtBQUVBbEIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FiRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIHByaWNlOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5yZXF1aXJlZCgpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIGltYWdlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBjYXRlZ29yeV9pZDogSm9pLm51bWJlcigpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMudXBkYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hUnVsZXMgPSB7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHJpY2U6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgaW1hZ2VfdXJsOiBKb2kuc3RyaW5nKCksXG4gICAgICAgIGNhdGVnb3J5X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        price: Joi.number().required(),\n        quantity: Joi.number().required(),\n        description: Joi.string().required(),\n        image_url: Joi.string(),\n        category_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        price: Joi.number().empty(\"\"),\n        quantity: Joi.number().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        image_url: Joi.string(),\n        category_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/b3/itemvalidators_b3b5560b6fc02d936e24d53b4a41cdcb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2957",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4275,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4272,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 222,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 567,
                    "endOffset": 916,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Item = require(\"./item.model\");\n\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n  createItem,\n  getItemById,\n  updateItem,\n  deleteItem\n};\n\nasync function createItem(params) {\n  const item = await Item.query().insert(params);\n  return basicDetails(item);\n}\n\nasync function getItemById(id) {\n  const item = await getItem({\n    id\n  });\n  return item;\n}\n\nasync function updateItem(id, params) {\n  const updateItem = await Item.query().patchAndFetchById(id, params);\n  return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n  await Item.query().delete({ ...queryParams\n  });\n} // =================== helpers ============================\n\n\nasync function getItem(params) {\n  const item = await Item.query().where({ ...params\n  }).first();\n  return item;\n}\n\nfunction basicDetails(item) {\n  const {\n    id,\n    name,\n    description\n  } = item;\n  return {\n    id,\n    name,\n    description\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0uc2VydmljZS5qcyJdLCJuYW1lcyI6WyJJdGVtIiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZUl0ZW0iLCJnZXRJdGVtQnlJZCIsInVwZGF0ZUl0ZW0iLCJkZWxldGVJdGVtIiwicGFyYW1zIiwiaXRlbSIsInF1ZXJ5IiwiaW5zZXJ0IiwiYmFzaWNEZXRhaWxzIiwiaWQiLCJnZXRJdGVtIiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsIndoZXJlIiwiZmlyc3QiLCJuYW1lIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFdBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQTtBQUphLENBQWpCOztBQU9BLGVBQWVILFVBQWYsQ0FBMEJJLE1BQTFCLEVBQWtDO0FBQzlCLFFBQU1DLElBQUksR0FBRyxNQUFNVixJQUFJLENBQUNXLEtBQUwsR0FBYUMsTUFBYixDQUFvQkgsTUFBcEIsQ0FBbkI7QUFDQSxTQUFPSSxZQUFZLENBQUNILElBQUQsQ0FBbkI7QUFDSDs7QUFFRCxlQUFlSixXQUFmLENBQTJCUSxFQUEzQixFQUErQjtBQUMzQixRQUFNSixJQUFJLEdBQUcsTUFBTUssT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9KLElBQVA7QUFDSDs7QUFFRCxlQUFlSCxVQUFmLENBQTBCTyxFQUExQixFQUE4QkwsTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUYsVUFBVSxHQUFHLE1BQU1QLElBQUksQ0FBQ1csS0FBTCxHQUFhSyxpQkFBYixDQUErQkYsRUFBL0IsRUFBbUNMLE1BQW5DLENBQXpCO0FBRUEsU0FBT0YsVUFBUDtBQUNIOztBQUVELGVBQWVDLFVBQWYsQ0FBMEJTLFdBQTFCLEVBQXVDO0FBQ25DLFFBQU1qQixJQUFJLENBQUNXLEtBQUwsR0FBYU8sTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDs7O0FBQ0EsZUFBZUYsT0FBZixDQUF1Qk4sTUFBdkIsRUFBK0I7QUFDM0IsUUFBTUMsSUFBSSxHQUFHLE1BQU1WLElBQUksQ0FBQ1csS0FBTCxHQUNkUSxLQURjLENBQ1IsRUFBRSxHQUFHVjtBQUFMLEdBRFEsRUFFZFcsS0FGYyxFQUFuQjtBQUdBLFNBQU9WLElBQVA7QUFDSDs7QUFFRCxTQUFTRyxZQUFULENBQXNCSCxJQUF0QixFQUE0QjtBQUN4QixRQUFNO0FBQUVJLElBQUFBLEVBQUY7QUFBTU8sSUFBQUEsSUFBTjtBQUFZQyxJQUFBQTtBQUFaLE1BQTRCWixJQUFsQztBQUNBLFNBQU87QUFBRUksSUFBQUEsRUFBRjtBQUFNTyxJQUFBQSxJQUFOO0FBQVlDLElBQUFBO0FBQVosR0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSXRlbSA9IHJlcXVpcmUoXCIuL2l0ZW0ubW9kZWxcIik7XG5jb25zdCBlcnJvciA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi91dGlscy9lcnJvclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlSXRlbSxcbiAgICBnZXRJdGVtQnlJZCxcbiAgICB1cGRhdGVJdGVtLFxuICAgIGRlbGV0ZUl0ZW0sXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhpdGVtKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0SXRlbUJ5SWQoaWQpIHtcbiAgICBjb25zdCBpdGVtID0gYXdhaXQgZ2V0SXRlbSh7IGlkIH0pO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVJdGVtKGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCB1cGRhdGVJdGVtID0gYXdhaXQgSXRlbS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIHVwZGF0ZUl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUl0ZW0ocXVlcnlQYXJhbXMpIHtcbiAgICBhd2FpdCBJdGVtLnF1ZXJ5KCkuZGVsZXRlKHsgLi4ucXVlcnlQYXJhbXMgfSk7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT0gaGVscGVycyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW1zIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMoaXRlbSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGRlc2NyaXB0aW9uIH0gPSBpdGVtO1xuICAgIHJldHVybiB7IGlkLCBuYW1lLCBkZXNjcmlwdGlvbiB9O1xufVxuIl19",
            "originalCode": "const Item = require(\"./item.model\");\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n    createItem,\n    getItemById,\n    updateItem,\n    deleteItem,\n};\n\nasync function createItem(params) {\n    const item = await Item.query().insert(params);\n    return basicDetails(item);\n}\n\nasync function getItemById(id) {\n    const item = await getItem({ id });\n    return item;\n}\n\nasync function updateItem(id, params) {\n    const updateItem = await Item.query().patchAndFetchById(id, params);\n\n    return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n    await Item.query().delete({ ...queryParams });\n}\n\n// =================== helpers ============================\nasync function getItem(params) {\n    const item = await Item.query()\n        .where({ ...params })\n        .first();\n    return item;\n}\n\nfunction basicDetails(item) {\n    const { id, name, description } = item;\n    return { id, name, description };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/37/itemservice_37723bc6ce9a1333746fd65833e30b1c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2958",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4281,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4278,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "createItem",
                "ranges": [
                  {
                    "startOffset": 261,
                    "endOffset": 377,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItemById",
                "ranges": [
                  {
                    "startOffset": 379,
                    "endOffset": 472,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 474,
                    "endOffset": 607,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 609,
                    "endOffset": 702,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItem",
                "ranges": [
                  {
                    "startOffset": 765,
                    "endOffset": 880,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 882,
                    "endOffset": 1019,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../../../constants/tableNames\");\n\nconst db = require(\"../../../../../db\");\n\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n  static get tableName() {\n    return tableNames.item;\n  }\n\n  static get relationMappings() {\n    const Category = require(\"../../category/category.model\");\n\n    return {\n      category: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Category,\n        join: {\n          from: `${tableNames.item}.category_id`,\n          to: `${tableNames.category}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Item;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiQ2F0ZWdvcnkiLCJJdGVtIiwidGFibGVOYW1lIiwiaXRlbSIsInJlbGF0aW9uTWFwcGluZ3MiLCJjYXRlZ29yeSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsImtuZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBWUMsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMscUNBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBbEI7O0FBQ0EsTUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBRUEsTUFBTUksSUFBTixTQUFtQkwsS0FBbkIsQ0FBeUI7QUFDckIsYUFBV00sU0FBWCxHQUF1QjtBQUNuQixXQUFPSixVQUFVLENBQUNLLElBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUosUUFBUSxHQUFHSCxPQUFPLENBQUMsK0JBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIUSxNQUFBQSxRQUFRLEVBQUU7QUFDTkMsUUFBQUEsUUFBUSxFQUFFVixLQUFLLENBQUNXLG9CQURWO0FBRU5DLFFBQUFBLFVBQVUsRUFBRVIsUUFGTjtBQUdOUyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVaLFVBQVUsQ0FBQ0ssSUFBSyxjQUR2QjtBQUVGUSxVQUFBQSxFQUFFLEVBQUcsR0FBRWIsVUFBVSxDQUFDTyxRQUFTO0FBRnpCO0FBSEE7QUFEUCxLQUFQO0FBVUg7O0FBbEJvQjs7QUFxQnpCVCxLQUFLLENBQUNnQixJQUFOLENBQVdiLEVBQVg7QUFFQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vZGJcIik7XG5jb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS5tb2RlbFwiKTtcblxuY2xhc3MgSXRlbSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuaXRlbTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIGNvbnN0IENhdGVnb3J5ID0gcmVxdWlyZShcIi4uLy4uL2NhdGVnb3J5L2NhdGVnb3J5Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjYXRlZ29yeToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBDYXRlZ29yeSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMuaXRlbX0uY2F0ZWdvcnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jYXRlZ29yeX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gSXRlbTtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../../../constants/tableNames\");\nconst db = require(\"../../../../../db\");\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n    static get tableName() {\n        return tableNames.item;\n    }\n\n    static get relationMappings() {\n        const Category = require(\"../../category/category.model\");\n\n        return {\n            category: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Category,\n                join: {\n                    from: `${tableNames.item}.category_id`,\n                    to: `${tableNames.category}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Item;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/bd/itemmodel_bde36e534327c1a1231475da3047e2a2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2959",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3171,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Item",
                "ranges": [
                  {
                    "startOffset": 290,
                    "endOffset": 290,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 326,
                    "endOffset": 375,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 386,
                    "endOffset": 718,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../../db\");\n\nconst schema = require(\"./category.schema.json\");\n\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n  static get tableName() {\n    return tableNames.category;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Menu = require(\"../menu.model\");\n\n    const Item = require(\"../menu/item/item.model\");\n\n    return {\n      menu: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Menu,\n        join: {\n          from: `${tableName.category}.menu_id`,\n          to: `${tableNames.menu}.id`\n        }\n      },\n      items: {\n        relation: Model.HasManyRelation,\n        modelClasss: Item,\n        join: {\n          from: `${tableNames.category}.id`,\n          to: `${tableNames.item}.category_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Category;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5Lm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsImRiIiwic2NoZW1hIiwidGFibGVOYW1lcyIsIkNhdGVnb3J5IiwidGFibGVOYW1lIiwiY2F0ZWdvcnkiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIk1lbnUiLCJJdGVtIiwibWVudSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJpdGVtcyIsIkhhc01hbnlSZWxhdGlvbiIsIml0ZW0iLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLGtDQUFELENBQTFCOztBQUVBLE1BQU1JLFFBQU4sU0FBdUJMLEtBQXZCLENBQTZCO0FBQ3pCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsSUFBSSxHQUFHVCxPQUFPLENBQUMsZUFBRCxDQUFwQjs7QUFDQSxVQUFNVSxJQUFJLEdBQUdWLE9BQU8sQ0FBQyx5QkFBRCxDQUFwQjs7QUFFQSxXQUFPO0FBQ0hXLE1BQUFBLElBQUksRUFBRTtBQUNGQyxRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ2Msb0JBRGQ7QUFFRkMsUUFBQUEsV0FBVyxFQUFFTCxJQUZYO0FBR0ZNLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRVgsU0FBUyxDQUFDQyxRQUFTLFVBRDFCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNRLElBQUs7QUFGckI7QUFISixPQURIO0FBU0hPLE1BQUFBLEtBQUssRUFBRTtBQUNITixRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ29CLGVBRGI7QUFFSEwsUUFBQUEsV0FBVyxFQUFFSixJQUZWO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWIsVUFBVSxDQUFDRyxRQUFTLEtBRDNCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEg7QUFUSixLQUFQO0FBa0JIOztBQWhDd0I7O0FBbUM3QnJCLEtBQUssQ0FBQ3NCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLFFBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IGRiID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2RiXCIpO1xuY29uc3Qgc2NoZW1hID0gcmVxdWlyZShcIi4vY2F0ZWdvcnkuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBDYXRlZ29yeSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuY2F0ZWdvcnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4uL21lbnUubW9kZWxcIik7XG4gICAgICAgIGNvbnN0IEl0ZW0gPSByZXF1aXJlKFwiLi4vbWVudS9pdGVtL2l0ZW0ubW9kZWxcIik7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1lbnU6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IE1lbnUsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWUuY2F0ZWdvcnl9Lm1lbnVfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpdGVtczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IEl0ZW0sXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLml0ZW19LmNhdGVnb3J5X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhdGVnb3J5O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../../db\");\nconst schema = require(\"./category.schema.json\");\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n    static get tableName() {\n        return tableNames.category;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Menu = require(\"../menu.model\");\n        const Item = require(\"../menu/item/item.model\");\n\n        return {\n            menu: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Menu,\n                join: {\n                    from: `${tableName.category}.menu_id`,\n                    to: `${tableNames.menu}.id`,\n                },\n            },\n            items: {\n                relation: Model.HasManyRelation,\n                modelClasss: Item,\n                join: {\n                    from: `${tableNames.category}.id`,\n                    to: `${tableNames.item}.category_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Category;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0e/categorymodel_0ef83f3e2352e4f7122c2a335cba1fb2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2960",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4654,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4651,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Category",
                "ranges": [
                  {
                    "startOffset": 287,
                    "endOffset": 287,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 327,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 391,
                    "endOffset": 432,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 443,
                    "endOffset": 1073,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Category = require(\"./category.model\");\n\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n  createCategory,\n  updateCategory,\n  getAllCategory,\n  getAllCompanyCategorys,\n  getCategoryById,\n  _delete\n};\n\nasync function createCategory(params) {\n  const category = await Category.query().insert(params);\n  return category;\n}\n\nasync function updateCategory(id, params) {\n  const category = await getCategory({\n    id\n  }); //check if category name is duplicated\n\n  if (params.name && category.name !== params.name && (await getCategory({\n    name: params.name,\n    menu_id: params.menu_id\n  }))) {\n    error(`Category ${params.name} already exists`);\n  }\n\n  const updatedcategory = await Category.query().patchAndFetchById(id, { ...params\n  });\n  return updatedcategory;\n}\n\nasync function getAllCategory() {\n  const categorys = await Category.query();\n  return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n  const categorys = await Category.query({ ...params\n  });\n  return categorys;\n}\n\nasync function getCategoryById(id) {\n  const category = await getCategory({\n    id\n  });\n  return category;\n}\n\nasync function _delete(queryParams) {\n  await Category.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCategory(param) {\n  const category = await Category.query().where({ ...param\n  }).withGraphFetched(\"items\").first();\n  return category;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnNlcnZpY2UuanMiXSwibmFtZXMiOlsiQ2F0ZWdvcnkiLCJyZXF1aXJlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlQ2F0ZWdvcnkiLCJ1cGRhdGVDYXRlZ29yeSIsImdldEFsbENhdGVnb3J5IiwiZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyIsImdldENhdGVnb3J5QnlJZCIsIl9kZWxldGUiLCJwYXJhbXMiLCJjYXRlZ29yeSIsInF1ZXJ5IiwiaW5zZXJ0IiwiaWQiLCJnZXRDYXRlZ29yeSIsIm5hbWUiLCJtZW51X2lkIiwidXBkYXRlZGNhdGVnb3J5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJjYXRlZ29yeXMiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsInBhcmFtIiwid2hlcmUiLCJ3aXRoR3JhcGhGZXRjaGVkIiwiZmlyc3QiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXhCOztBQUNBLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLHlCQUFELENBQXJCOztBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsY0FEYTtBQUViQyxFQUFBQSxjQUZhO0FBR2JDLEVBQUFBLGNBSGE7QUFJYkMsRUFBQUEsc0JBSmE7QUFLYkMsRUFBQUEsZUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLGNBQWYsQ0FBOEJNLE1BQTlCLEVBQXNDO0FBQ2xDLFFBQU1DLFFBQVEsR0FBRyxNQUFNWixRQUFRLENBQUNhLEtBQVQsR0FBaUJDLE1BQWpCLENBQXdCSCxNQUF4QixDQUF2QjtBQUNBLFNBQU9DLFFBQVA7QUFDSDs7QUFFRCxlQUFlTixjQUFmLENBQThCUyxFQUE5QixFQUFrQ0osTUFBbEMsRUFBMEM7QUFDdEMsUUFBTUMsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEMsQ0FEc0MsQ0FFdEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLFFBQVEsQ0FBQ0ssSUFBVCxLQUFrQk4sTUFBTSxDQUFDTSxJQUR6QixLQUVDLE1BQU1ELFdBQVcsQ0FBQztBQUNmQyxJQUFBQSxJQUFJLEVBQUVOLE1BQU0sQ0FBQ00sSUFERTtBQUVmQyxJQUFBQSxPQUFPLEVBQUVQLE1BQU0sQ0FBQ087QUFGRCxHQUFELENBRmxCLENBREosRUFPRTtBQUNFaEIsSUFBQUEsS0FBSyxDQUFFLFlBQVdTLE1BQU0sQ0FBQ00sSUFBSyxpQkFBekIsQ0FBTDtBQUNIOztBQUNELFFBQU1FLGVBQWUsR0FBRyxNQUFNbkIsUUFBUSxDQUFDYSxLQUFULEdBQWlCTyxpQkFBakIsQ0FBbUNMLEVBQW5DLEVBQXVDLEVBQ2pFLEdBQUdKO0FBRDhELEdBQXZDLENBQTlCO0FBSUEsU0FBT1EsZUFBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsR0FBZ0M7QUFDNUIsUUFBTWMsU0FBUyxHQUFHLE1BQU1yQixRQUFRLENBQUNhLEtBQVQsRUFBeEI7QUFDQSxTQUFPUSxTQUFQO0FBQ0g7O0FBRUQsZUFBZWIsc0JBQWYsQ0FBc0NHLE1BQXRDLEVBQThDO0FBQzFDLFFBQU1VLFNBQVMsR0FBRyxNQUFNckIsUUFBUSxDQUFDYSxLQUFULENBQWUsRUFBRSxHQUFHRjtBQUFMLEdBQWYsQ0FBeEI7QUFDQSxTQUFPVSxTQUFQO0FBQ0g7O0FBRUQsZUFBZVosZUFBZixDQUErQk0sRUFBL0IsRUFBbUM7QUFDL0IsUUFBTUgsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEM7QUFDQSxTQUFPSCxRQUFQO0FBQ0g7O0FBRUQsZUFBZUYsT0FBZixDQUF1QlksV0FBdkIsRUFBb0M7QUFDaEMsUUFBTXRCLFFBQVEsQ0FBQ2EsS0FBVCxHQUFpQlUsTUFBakIsQ0FBd0IsRUFBRSxHQUFHRDtBQUFMLEdBQXhCLENBQU47QUFDSCxDLENBRUQ7QUFDQTtBQUNBO0FBRUE7QUFFQTs7O0FBRUEsZUFBZU4sV0FBZixDQUEyQlEsS0FBM0IsRUFBa0M7QUFDOUIsUUFBTVosUUFBUSxHQUFHLE1BQU1aLFFBQVEsQ0FBQ2EsS0FBVCxHQUNsQlksS0FEa0IsQ0FDWixFQUFFLEdBQUdEO0FBQUwsR0FEWSxFQUVsQkUsZ0JBRmtCLENBRUQsT0FGQyxFQUdsQkMsS0FIa0IsRUFBdkI7QUFLQSxTQUFPZixRQUFQO0FBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuL2NhdGVnb3J5Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZUNhdGVnb3J5LFxuICAgIHVwZGF0ZUNhdGVnb3J5LFxuICAgIGdldEFsbENhdGVnb3J5LFxuICAgIGdldEFsbENvbXBhbnlDYXRlZ29yeXMsXG4gICAgZ2V0Q2F0ZWdvcnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVDYXRlZ29yeShwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVDYXRlZ29yeShpZCwgcGFyYW1zKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBnZXRDYXRlZ29yeSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgY2F0ZWdvcnkgbmFtZSBpcyBkdXBsaWNhdGVkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjYXRlZ29yeS5uYW1lICE9PSBwYXJhbXMubmFtZSAmJlxuICAgICAgICAoYXdhaXQgZ2V0Q2F0ZWdvcnkoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBtZW51X2lkOiBwYXJhbXMubWVudV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBDYXRlZ29yeSAke3BhcmFtcy5uYW1lfSBhbHJlYWR5IGV4aXN0c2ApO1xuICAgIH1cbiAgICBjb25zdCB1cGRhdGVkY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkY2F0ZWdvcnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENhdGVnb3J5KCkge1xuICAgIGNvbnN0IGNhdGVnb3J5cyA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNhdGVnb3J5cztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyhwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeXMgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSh7IC4uLnBhcmFtcyB9KTtcbiAgICByZXR1cm4gY2F0ZWdvcnlzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRDYXRlZ29yeUJ5SWQoaWQpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IGdldENhdGVnb3J5KHsgaWQgfSk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiBfZGVsZXRlKHF1ZXJ5UGFyYW1zKSB7XG4gICAgYXdhaXQgQ2F0ZWdvcnkucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IGNhdGVnb3J5LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENhdGVnb3J5KHBhcmFtKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIilcbiAgICAgICAgLmZpcnN0KCk7XG5cbiAgICByZXR1cm4gY2F0ZWdvcnk7XG59XG4iXX0=",
            "originalCode": "const Category = require(\"./category.model\");\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n    createCategory,\n    updateCategory,\n    getAllCategory,\n    getAllCompanyCategorys,\n    getCategoryById,\n    _delete,\n};\n\nasync function createCategory(params) {\n    const category = await Category.query().insert(params);\n    return category;\n}\n\nasync function updateCategory(id, params) {\n    const category = await getCategory({ id });\n    //check if category name is duplicated\n    if (\n        params.name &&\n        category.name !== params.name &&\n        (await getCategory({\n            name: params.name,\n            menu_id: params.menu_id,\n        }))\n    ) {\n        error(`Category ${params.name} already exists`);\n    }\n    const updatedcategory = await Category.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedcategory;\n}\n\nasync function getAllCategory() {\n    const categorys = await Category.query();\n    return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n    const categorys = await Category.query({ ...params });\n    return categorys;\n}\n\nasync function getCategoryById(id) {\n    const category = await getCategory({ id });\n    return category;\n}\n\nasync function _delete(queryParams) {\n    await Category.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCategory(param) {\n    const category = await Category.query()\n        .where({ ...param })\n        .withGraphFetched(\"items\")\n        .first();\n\n    return category;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/af/categoryservice_af4a088c54a063175cdbab3d375f5ef2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2961",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6647,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6644,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "createCategory",
                "ranges": [
                  {
                    "startOffset": 319,
                    "endOffset": 437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateCategory",
                "ranges": [
                  {
                    "startOffset": 439,
                    "endOffset": 884,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCategory",
                "ranges": [
                  {
                    "startOffset": 886,
                    "endOffset": 985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 987,
                    "endOffset": 1115,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1117,
                    "endOffset": 1226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1228,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategory",
                "ranges": [
                  {
                    "startOffset": 1462,
                    "endOffset": 1617,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Menu = require(\"../menu/menu.model\");\n\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n  createMenu,\n  updateMenu,\n  getAllMenu,\n  getAllCompanyMenus,\n  getMenuById,\n  _delete\n};\n\nasync function createMenu(params) {\n  const menu = await Menu.query().insert(params);\n  return menu;\n}\n\nasync function updateMenu(id, params) {\n  const menu = await getMenu({\n    id\n  }); //check if menu name is duplicated\n\n  if (params.name && menu.name !== params.name && (await getMenu({\n    name: params.name,\n    company_id: params.company_id\n  }))) {\n    error(`Menu ${params.name} already exists`);\n  }\n\n  const updatedmenu = await Menu.query().patchAndFetchById(id, { ...params\n  });\n  return updatedmenu;\n}\n\nasync function getAllMenu() {\n  const menus = await Menu.query();\n  return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n  const menus = await Menu.query({ ...params\n  });\n  return menus;\n}\n\nasync function getMenuById(id) {\n  const menu = await getMenu({\n    id\n  });\n  return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n  await Menu.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getMenu(param) {\n  const menu = await Menu.query().where({ ...param\n  }).withGraphFetched(\"categories\").first();\n  return menu;\n}\n\nfunction basicDetails(menu) {\n  const {\n    id,\n    name,\n    company_id,\n    categories\n  } = menu;\n  return {\n    id,\n    name,\n    company_id,\n    categories\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZW51IiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU1lbnUiLCJ1cGRhdGVNZW51IiwiZ2V0QWxsTWVudSIsImdldEFsbENvbXBhbnlNZW51cyIsImdldE1lbnVCeUlkIiwiX2RlbGV0ZSIsInBhcmFtcyIsIm1lbnUiLCJxdWVyeSIsImluc2VydCIsImlkIiwiZ2V0TWVudSIsIm5hbWUiLCJjb21wYW55X2lkIiwidXBkYXRlZG1lbnUiLCJwYXRjaEFuZEZldGNoQnlJZCIsIm1lbnVzIiwiYmFzaWNEZXRhaWxzIiwicXVlcnlQYXJhbXMiLCJkZWxldGUiLCJwYXJhbSIsIndoZXJlIiwid2l0aEdyYXBoRmV0Y2hlZCIsImZpcnN0IiwiY2F0ZWdvcmllcyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsc0JBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFVBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQSxrQkFKYTtBQUtiQyxFQUFBQSxXQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsVUFBZixDQUEwQk0sTUFBMUIsRUFBa0M7QUFDOUIsUUFBTUMsSUFBSSxHQUFHLE1BQU1aLElBQUksQ0FBQ2EsS0FBTCxHQUFhQyxNQUFiLENBQW9CSCxNQUFwQixDQUFuQjtBQUNBLFNBQU9DLElBQVA7QUFDSDs7QUFFRCxlQUFlTixVQUFmLENBQTBCUyxFQUExQixFQUE4QkosTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUMsSUFBSSxHQUFHLE1BQU1JLE9BQU8sQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBMUIsQ0FEa0MsQ0FFbEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLElBQUksQ0FBQ0ssSUFBTCxLQUFjTixNQUFNLENBQUNNLElBRHJCLEtBRUMsTUFBTUQsT0FBTyxDQUFDO0FBQ1hDLElBQUFBLElBQUksRUFBRU4sTUFBTSxDQUFDTSxJQURGO0FBRVhDLElBQUFBLFVBQVUsRUFBRVAsTUFBTSxDQUFDTztBQUZSLEdBQUQsQ0FGZCxDQURKLEVBT0U7QUFDRWhCLElBQUFBLEtBQUssQ0FBRSxRQUFPUyxNQUFNLENBQUNNLElBQUssaUJBQXJCLENBQUw7QUFDSDs7QUFDRCxRQUFNRSxXQUFXLEdBQUcsTUFBTW5CLElBQUksQ0FBQ2EsS0FBTCxHQUFhTyxpQkFBYixDQUErQkwsRUFBL0IsRUFBbUMsRUFDekQsR0FBR0o7QUFEc0QsR0FBbkMsQ0FBMUI7QUFJQSxTQUFPUSxXQUFQO0FBQ0g7O0FBRUQsZUFBZVosVUFBZixHQUE0QjtBQUN4QixRQUFNYyxLQUFLLEdBQUcsTUFBTXJCLElBQUksQ0FBQ2EsS0FBTCxFQUFwQjtBQUNBLFNBQU9RLEtBQVA7QUFDSDs7QUFFRCxlQUFlYixrQkFBZixDQUFrQ0csTUFBbEMsRUFBMEM7QUFDdEMsUUFBTVUsS0FBSyxHQUFHLE1BQU1yQixJQUFJLENBQUNhLEtBQUwsQ0FBVyxFQUFFLEdBQUdGO0FBQUwsR0FBWCxDQUFwQjtBQUNBLFNBQU9VLEtBQVA7QUFDSDs7QUFFRCxlQUFlWixXQUFmLENBQTJCTSxFQUEzQixFQUErQjtBQUMzQixRQUFNSCxJQUFJLEdBQUcsTUFBTUksT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9PLFlBQVksQ0FBQ1YsSUFBRCxDQUFuQjtBQUNIOztBQUVELGVBQWVGLE9BQWYsQ0FBdUJhLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU12QixJQUFJLENBQUNhLEtBQUwsR0FBYVcsTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDtBQUNBO0FBQ0E7QUFFQTtBQUVBOzs7QUFFQSxlQUFlUCxPQUFmLENBQXVCUyxLQUF2QixFQUE4QjtBQUMxQixRQUFNYixJQUFJLEdBQUcsTUFBTVosSUFBSSxDQUFDYSxLQUFMLEdBQ2RhLEtBRGMsQ0FDUixFQUFFLEdBQUdEO0FBQUwsR0FEUSxFQUVkRSxnQkFGYyxDQUVHLFlBRkgsRUFHZEMsS0FIYyxFQUFuQjtBQUlBLFNBQU9oQixJQUFQO0FBQ0g7O0FBRUQsU0FBU1UsWUFBVCxDQUFzQlYsSUFBdEIsRUFBNEI7QUFDeEIsUUFBTTtBQUFFRyxJQUFBQSxFQUFGO0FBQU1FLElBQUFBLElBQU47QUFBWUMsSUFBQUEsVUFBWjtBQUF3QlcsSUFBQUE7QUFBeEIsTUFBdUNqQixJQUE3QztBQUVBLFNBQU87QUFBRUcsSUFBQUEsRUFBRjtBQUFNRSxJQUFBQSxJQUFOO0FBQVlDLElBQUFBLFVBQVo7QUFBd0JXLElBQUFBO0FBQXhCLEdBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1lbnUgPSByZXF1aXJlKFwiLi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZU1lbnUsXG4gICAgdXBkYXRlTWVudSxcbiAgICBnZXRBbGxNZW51LFxuICAgIGdldEFsbENvbXBhbnlNZW51cyxcbiAgICBnZXRNZW51QnlJZCxcbiAgICBfZGVsZXRlLFxufTtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlTWVudShwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLmluc2VydChwYXJhbXMpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVNZW51KGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgZ2V0TWVudSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgbWVudSBuYW1lIGlzIGR1cGxpY2F0ZWRcbiAgICBpZiAoXG4gICAgICAgIHBhcmFtcy5uYW1lICYmXG4gICAgICAgIG1lbnUubmFtZSAhPT0gcGFyYW1zLm5hbWUgJiZcbiAgICAgICAgKGF3YWl0IGdldE1lbnUoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBjb21wYW55X2lkOiBwYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBNZW51ICR7cGFyYW1zLm5hbWV9IGFscmVhZHkgZXhpc3RzYCk7XG4gICAgfVxuICAgIGNvbnN0IHVwZGF0ZWRtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkbWVudTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsTWVudSgpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoKTtcbiAgICByZXR1cm4gbWVudXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbnlNZW51cyhwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoeyAuLi5wYXJhbXMgfSk7XG4gICAgcmV0dXJuIG1lbnVzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRNZW51QnlJZChpZCkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBnZXRNZW51KHsgaWQgfSk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhtZW51KTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGF3YWl0IE1lbnUucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IG1lbnUucXVlcnkoKS5kZWxldGVCeUlkKGlkKTtcblxuLy8gfVxuXG4vLyA9PT09PT09PT09PSBoZWxwZXJzPT09PT09PT09PT1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TWVudShwYXJhbSkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBNZW51LnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW0gfSlcbiAgICAgICAgLndpdGhHcmFwaEZldGNoZWQoXCJjYXRlZ29yaWVzXCIpXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMobWVudSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGNvbXBhbnlfaWQsIGNhdGVnb3JpZXMgfSA9IG1lbnU7XG5cbiAgICByZXR1cm4geyBpZCwgbmFtZSwgY29tcGFueV9pZCwgY2F0ZWdvcmllcyB9O1xufVxuIl19",
            "originalCode": "const Menu = require(\"../menu/menu.model\");\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n    createMenu,\n    updateMenu,\n    getAllMenu,\n    getAllCompanyMenus,\n    getMenuById,\n    _delete,\n};\n\nasync function createMenu(params) {\n    const menu = await Menu.query().insert(params);\n    return menu;\n}\n\nasync function updateMenu(id, params) {\n    const menu = await getMenu({ id });\n    //check if menu name is duplicated\n    if (\n        params.name &&\n        menu.name !== params.name &&\n        (await getMenu({\n            name: params.name,\n            company_id: params.company_id,\n        }))\n    ) {\n        error(`Menu ${params.name} already exists`);\n    }\n    const updatedmenu = await Menu.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedmenu;\n}\n\nasync function getAllMenu() {\n    const menus = await Menu.query();\n    return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n    const menus = await Menu.query({ ...params });\n    return menus;\n}\n\nasync function getMenuById(id) {\n    const menu = await getMenu({ id });\n    return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n    await Menu.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getMenu(param) {\n    const menu = await Menu.query()\n        .where({ ...param })\n        .withGraphFetched(\"categories\")\n        .first();\n    return menu;\n}\n\nfunction basicDetails(menu) {\n    const { id, name, company_id, categories } = menu;\n\n    return { id, name, company_id, categories };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/09/menuservice_0982deee8fc4f2525220c81116cda394.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2962",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6988,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6985,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "createMenu",
                "ranges": [
                  {
                    "startOffset": 294,
                    "endOffset": 396,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateMenu",
                "ranges": [
                  {
                    "startOffset": 398,
                    "endOffset": 809,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllMenu",
                "ranges": [
                  {
                    "startOffset": 811,
                    "endOffset": 894,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 896,
                    "endOffset": 1008,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1010,
                    "endOffset": 1117,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1119,
                    "endOffset": 1209,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenu",
                "ranges": [
                  {
                    "startOffset": 1345,
                    "endOffset": 1489,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 1491,
                    "endOffset": 1658,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../db\");\n\nconst schema = require(\"./menu.schema.json\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n  static get tableName() {\n    return tableNames.menu;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Company = require(\"../company.model\");\n\n    const Category = require(\"../category/category.model\");\n\n    return {\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Company,\n        join: {\n          from: `${tableName.menu}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      },\n      categories: {\n        relation: Model.HasManyRelation,\n        modelClasss: Category,\n        join: {\n          from: `${tableNames.menu}.id`,\n          to: `${tableNames.category}.menu_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Menu;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwiZGIiLCJzY2hlbWEiLCJ0YWJsZU5hbWVzIiwiTWVudSIsInRhYmxlTmFtZSIsIm1lbnUiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIkNvbXBhbnkiLCJDYXRlZ29yeSIsImNvbXBhbnkiLCJyZWxhdGlvbiIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwibW9kZWxDbGFzc3MiLCJqb2luIiwiZnJvbSIsInRvIiwiY2F0ZWdvcmllcyIsIkhhc01hbnlSZWxhdGlvbiIsImNhdGVnb3J5Iiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLG9CQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUVBLE1BQU1JLElBQU4sU0FBbUJMLEtBQW5CLENBQXlCO0FBQ3JCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxJQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHVCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVUsUUFBUSxHQUFHVixPQUFPLENBQUMsNEJBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIVyxNQUFBQSxPQUFPLEVBQUU7QUFDTEMsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNjLG9CQURYO0FBRUxDLFFBQUFBLFdBQVcsRUFBRUwsT0FGUjtBQUdMTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVYLFNBQVMsQ0FBQ0MsSUFBSyxhQUR0QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDUSxPQUFRO0FBRnhCO0FBSEQsT0FETjtBQVNITyxNQUFBQSxVQUFVLEVBQUU7QUFDUk4sUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNvQixlQURSO0FBRVJMLFFBQUFBLFdBQVcsRUFBRUosUUFGTDtBQUdSSyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUViLFVBQVUsQ0FBQ0csSUFBSyxLQUR2QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDaUIsUUFBUztBQUZ6QjtBQUhFO0FBVFQsS0FBUDtBQWtCSDs7QUFoQ29COztBQW1DekJyQixLQUFLLENBQUNzQixJQUFOLENBQVdwQixFQUFYO0FBRUFxQixNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL21lbnUuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBNZW51IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5tZW51O1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQganNvblNjaGVtYSgpIHtcbiAgICAgICAgcmV0dXJuIHNjaGVtYTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIC8vIEltcG9ydGluZyBtb2RlbHMgaGVyZSBpcyBhIG9uZSB3YXkgdG8gYXZvaWQgcmVxdWlyZSBsb29wcy5cbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS9jYXRlZ29yeS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29tcGFueToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZS5tZW51fS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMuY29tcGFueX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2F0ZWdvcmllczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IENhdGVnb3J5LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5tZW51X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lbnU7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../db\");\nconst schema = require(\"./menu.schema.json\");\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n    static get tableName() {\n        return tableNames.menu;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Company = require(\"../company.model\");\n        const Category = require(\"../category/category.model\");\n\n        return {\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Company,\n                join: {\n                    from: `${tableName.menu}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n            categories: {\n                relation: Model.HasManyRelation,\n                modelClasss: Category,\n                join: {\n                    from: `${tableNames.menu}.id`,\n                    to: `${tableNames.category}.menu_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Menu;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/21/menumodel_2169ce1c45f3dc0c50729f84caa9c38e.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2963",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4674,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4671,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Menu",
                "ranges": [
                  {
                    "startOffset": 277,
                    "endOffset": 277,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 313,
                    "endOffset": 362,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 414,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 425,
                    "endOffset": 1081,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createOrderSchema,\n  updateOrderSchema,\n  companyOrderSchema\n} = require(\"./order.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.use(\"/:order_id/orderItem\", OrderItem); // update an order item customer aka update cart item\n\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\"/:id\", updateOrderSchema, Auth([Role.staff, Role.owner]), updateOrder);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\"/company-orders\", companyOrderSchema, Auth([Role.owner, Role.staff]), getCompanyOrders);\n\nfunction createOrder(req, res, next) {\n  const payload = {\n    customer_id: req.user.id,\n    company_id: req.params.company_id,\n    item: req.body\n  };\n  orderService.createOrder(payload).then(orderItem => res.json({\n    message: `${orderItem.item} has been added to the cart`\n  })).catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n  orderService.updateOrder(req.params.id, req.user, req.body).then(order => res.json(order)).catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n  orderService.getOrderById(id).then(order => order ? res.json(order) : res.sendStatus(404)).catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n  orderService.getOwnOrders(req.user.id).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n  // TODO to use query params\n  params.company_id = req.params.company_id;\n  orderService.getCompanyOrders(params).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNyZWF0ZU9yZGVyU2NoZW1hIiwidXBkYXRlT3JkZXJTY2hlbWEiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJhdXRoIiwiQXV0aCIsIlJvbGUiLCJvcmRlclNlcnZpY2UiLCJPcmRlckl0ZW0iLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInVzZSIsInBvc3QiLCJjdXN0b21lciIsImNyZWF0ZU9yZGVyIiwicGF0Y2giLCJzdGFmZiIsIm93bmVyIiwidXBkYXRlT3JkZXIiLCJnZXQiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicmVxIiwicmVzIiwibmV4dCIsInBheWxvYWQiLCJjdXN0b21lcl9pZCIsInVzZXIiLCJpZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiLCJpdGVtIiwiYm9keSIsInRoZW4iLCJvcmRlckl0ZW0iLCJqc29uIiwibWVzc2FnZSIsImNhdGNoIiwib3JkZXIiLCJzZW5kU3RhdHVzIiwib3JkZXJzIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQ0ZDLEVBQUFBLGlCQURFO0FBRUZDLEVBQUFBLGlCQUZFO0FBR0ZDLEVBQUFBO0FBSEUsSUFJRkgsT0FBTyxDQUFDLG9CQUFELENBSlg7O0FBS0EsTUFBTTtBQUFFSSxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJMLE9BQU8sQ0FBQyw0QkFBRCxDQUE5Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxNQUFNTyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxpQkFBRCxDQUE1Qjs7QUFFQSxNQUFNUSxTQUFTLEdBQUdSLE9BQU8sQ0FBQyw4QkFBRCxDQUF6Qjs7QUFFQSxNQUFNUyxNQUFNLEdBQUdWLE9BQU8sQ0FBQ1csTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNKLFNBQW5DLEUsQ0FFQTs7QUFDQUMsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQlosaUJBQWpCLEVBQW9DSSxJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUF4QyxFQUF5REMsV0FBekQ7QUFDQU4sTUFBTSxDQUFDTyxLQUFQLENBQ0ksTUFESixFQUVJZCxpQkFGSixFQUdJRyxJQUFJLENBQUMsQ0FBQ0MsSUFBSSxDQUFDVyxLQUFOLEVBQWFYLElBQUksQ0FBQ1ksS0FBbEIsQ0FBRCxDQUhSLEVBSUlDLFdBSko7QUFNQVYsTUFBTSxDQUFDVyxHQUFQLENBQVcsTUFBWCxFQUFtQmYsSUFBSSxFQUF2QixFQUEyQmdCLFlBQTNCO0FBQ0FaLE1BQU0sQ0FBQ1csR0FBUCxDQUFXLGdCQUFYLEVBQTZCZixJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUFqQyxFQUFrRFEsWUFBbEQ7QUFDQWIsTUFBTSxDQUFDVyxHQUFQLENBQ0ksaUJBREosRUFFSWpCLGtCQUZKLEVBR0lFLElBQUksQ0FBQyxDQUFDQyxJQUFJLENBQUNZLEtBQU4sRUFBYVosSUFBSSxDQUFDVyxLQUFsQixDQUFELENBSFIsRUFJSU0sZ0JBSko7O0FBT0EsU0FBU1IsV0FBVCxDQUFxQlMsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQztBQUNqQyxRQUFNQyxPQUFPLEdBQUc7QUFDWkMsSUFBQUEsV0FBVyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0MsRUFEVjtBQUVaQyxJQUFBQSxVQUFVLEVBQUVQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRCxVQUZYO0FBR1pFLElBQUFBLElBQUksRUFBRVQsR0FBRyxDQUFDVTtBQUhFLEdBQWhCO0FBS0EzQixFQUFBQSxZQUFZLENBQ1BRLFdBREwsQ0FDaUJZLE9BRGpCLEVBRUtRLElBRkwsQ0FFV0MsU0FBRCxJQUNGWCxHQUFHLENBQUNZLElBQUosQ0FBUztBQUNMQyxJQUFBQSxPQUFPLEVBQUcsR0FBRUYsU0FBUyxDQUFDSCxJQUFLO0FBRHRCLEdBQVQsQ0FIUixFQU9LTSxLQVBMLENBT1diLElBUFg7QUFRSDs7QUFFRCxTQUFTUCxXQUFULENBQXFCSyxHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDO0FBQ2pDbkIsRUFBQUEsWUFBWSxDQUNQWSxXQURMLENBQ2lCSyxHQUFHLENBQUNRLE1BQUosQ0FBV0YsRUFENUIsRUFDZ0NOLEdBQUcsQ0FBQ0ssSUFEcEMsRUFDMENMLEdBQUcsQ0FBQ1UsSUFEOUMsRUFFS0MsSUFGTCxDQUVXSyxLQUFELElBQVdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBRnJCLEVBR0tELEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNMLFlBQVQsQ0FBc0JHLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BjLFlBREwsQ0FDa0JTLEVBRGxCLEVBRUtLLElBRkwsQ0FFV0ssS0FBRCxJQUFZQSxLQUFLLEdBQUdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBQUgsR0FBcUJmLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRmhELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNKLFlBQVQsQ0FBc0JFLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BlLFlBREwsQ0FDa0JFLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxFQUQzQixFQUVLSyxJQUZMLENBRVdPLE1BQUQsSUFBYUEsTUFBTSxDQUFDQyxNQUFQLEdBQWdCLENBQWhCLEdBQW9CRCxNQUFwQixHQUE2QmpCLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRnBELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNILGdCQUFULENBQTBCQyxHQUExQixFQUErQkMsR0FBL0IsRUFBb0NDLElBQXBDLEVBQTBDO0FBQ3RDO0FBRUFNLEVBQUFBLE1BQU0sQ0FBQ0QsVUFBUCxHQUFvQlAsR0FBRyxDQUFDUSxNQUFKLENBQVdELFVBQS9CO0FBQ0F4QixFQUFBQSxZQUFZLENBQ1BnQixnQkFETCxDQUNzQlMsTUFEdEIsRUFFS0csSUFGTCxDQUVXTyxNQUFELElBQWFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUFoQixHQUFvQkQsTUFBcEIsR0FBNkJqQixHQUFHLENBQUNnQixVQUFKLENBQWUsR0FBZixDQUZwRCxFQUdLRixLQUhMLENBR1diLElBSFg7QUFJSDs7QUFDRGtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBDLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qge1xuICAgIGNyZWF0ZU9yZGVyU2NoZW1hLFxuICAgIHVwZGF0ZU9yZGVyU2NoZW1hLFxuICAgIGNvbXBhbnlPcmRlclNjaGVtYSxcbn0gPSByZXF1aXJlKFwiLi9vcmRlci52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi9vcmRlci5zZXJ2aWNlXCIpO1xuXG5jb25zdCBPcmRlckl0ZW0gPSByZXF1aXJlKFwiLi9vcmRlckl0ZW0vb3JkZXJJdGVtLnJvdXRlc1wiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci51c2UoXCIvOm9yZGVyX2lkL29yZGVySXRlbVwiLCBPcmRlckl0ZW0pO1xuXG4vLyB1cGRhdGUgYW4gb3JkZXIgaXRlbSBjdXN0b21lciBha2EgdXBkYXRlIGNhcnQgaXRlbVxucm91dGVyLnBvc3QoXCIvXCIsIGNyZWF0ZU9yZGVyU2NoZW1hLCBBdXRoKFJvbGUuY3VzdG9tZXIpLCBjcmVhdGVPcmRlcik7XG5yb3V0ZXIucGF0Y2goXG4gICAgXCIvOmlkXCIsXG4gICAgdXBkYXRlT3JkZXJTY2hlbWEsXG4gICAgQXV0aChbUm9sZS5zdGFmZiwgUm9sZS5vd25lcl0pLFxuICAgIHVwZGF0ZU9yZGVyXG4pO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRPcmRlckJ5SWQpO1xucm91dGVyLmdldChcIi86aWQvbXktb3JkZXJzXCIsIEF1dGgoUm9sZS5jdXN0b21lciksIGdldE93bk9yZGVycyk7XG5yb3V0ZXIuZ2V0KFxuICAgIFwiL2NvbXBhbnktb3JkZXJzXCIsXG4gICAgY29tcGFueU9yZGVyU2NoZW1hLFxuICAgIEF1dGgoW1JvbGUub3duZXIsIFJvbGUuc3RhZmZdKSxcbiAgICBnZXRDb21wYW55T3JkZXJzXG4pO1xuXG5mdW5jdGlvbiBjcmVhdGVPcmRlcihyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgIGN1c3RvbWVyX2lkOiByZXEudXNlci5pZCxcbiAgICAgICAgY29tcGFueV9pZDogcmVxLnBhcmFtcy5jb21wYW55X2lkLFxuICAgICAgICBpdGVtOiByZXEuYm9keSxcbiAgICB9O1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuY3JlYXRlT3JkZXIocGF5bG9hZClcbiAgICAgICAgLnRoZW4oKG9yZGVySXRlbSkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBgJHtvcmRlckl0ZW0uaXRlbX0gaGFzIGJlZW4gYWRkZWQgdG8gdGhlIGNhcnRgLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVyKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgb3JkZXJTZXJ2aWNlXG4gICAgICAgIC51cGRhdGVPcmRlcihyZXEucGFyYW1zLmlkLCByZXEudXNlciwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChvcmRlcikgPT4gcmVzLmpzb24ob3JkZXIpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE9yZGVyQnlJZChyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3JkZXJCeUlkKGlkKVxuICAgICAgICAudGhlbigob3JkZXIpID0+IChvcmRlciA/IHJlcy5qc29uKG9yZGVyKSA6IHJlcy5zZW5kU3RhdHVzKDQwNCkpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE93bk9yZGVycyhyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3duT3JkZXJzKHJlcS51c2VyLmlkKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiBnZXRDb21wYW55T3JkZXJzKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8gVE9ETyB0byB1c2UgcXVlcnkgcGFyYW1zXG5cbiAgICBwYXJhbXMuY29tcGFueV9pZCA9IHJlcS5wYXJhbXMuY29tcGFueV9pZDtcbiAgICBvcmRlclNlcnZpY2VcbiAgICAgICAgLmdldENvbXBhbnlPcmRlcnMocGFyYW1zKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst {\n    createOrderSchema,\n    updateOrderSchema,\n    companyOrderSchema,\n} = require(\"./order.validators\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.use(\"/:order_id/orderItem\", OrderItem);\n\n// update an order item customer aka update cart item\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\n    \"/:id\",\n    updateOrderSchema,\n    Auth([Role.staff, Role.owner]),\n    updateOrder\n);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\n    \"/company-orders\",\n    companyOrderSchema,\n    Auth([Role.owner, Role.staff]),\n    getCompanyOrders\n);\n\nfunction createOrder(req, res, next) {\n    const payload = {\n        customer_id: req.user.id,\n        company_id: req.params.company_id,\n        item: req.body,\n    };\n    orderService\n        .createOrder(payload)\n        .then((orderItem) =>\n            res.json({\n                message: `${orderItem.item} has been added to the cart`,\n            })\n        )\n        .catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n    orderService\n        .updateOrder(req.params.id, req.user, req.body)\n        .then((order) => res.json(order))\n        .catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n    orderService\n        .getOrderById(id)\n        .then((order) => (order ? res.json(order) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n    orderService\n        .getOwnOrders(req.user.id)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n    // TODO to use query params\n\n    params.company_id = req.params.company_id;\n    orderService\n        .getCompanyOrders(params)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8f/orderroutes_8f4620babd5b20aee9e160dc0d9cf20a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2964",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9222,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 9219,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 978,
                    "endOffset": 1275,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 1277,
                    "endOffset": 1423,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1425,
                    "endOffset": 1572,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1574,
                    "endOffset": 1734,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1736,
                    "endOffset": 1974,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    item: Joi.number().required(),\n    quantity: Joi.number()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    customer_id: Joi.number().empty(),\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVPcmRlclNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJpdGVtIiwibnVtYmVyIiwicmVxdWlyZWQiLCJxdWFudGl0eSIsInVwZGF0ZU9yZGVyU2NoZW1hIiwib3JkZXJfc3RhdHVzIiwic3RyaW5nIiwiZW1wdHkiLCJwdXJjaGFzZV9zdGF0dXMiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJjdXN0b21lcl9pZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxpQkFBUixHQUE0QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSjtBQUZZLEdBQVgsQ0FBZjtBQUlBVCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNXLGlCQUFSLEdBQTRCLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQzVDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJNLElBQUFBLFlBQVksRUFBRWYsR0FBRyxDQUFDZ0IsTUFBSixHQUFhQyxLQUFiLENBQW1CLEVBQW5CLENBRFE7QUFFdEJDLElBQUFBLGVBQWUsRUFBRWxCLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQjtBQUZLLEdBQVgsQ0FBZjtBQUtBZixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVBEOztBQVNBTCxPQUFPLENBQUNnQixrQkFBUixHQUE2QixDQUFDZCxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM3QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCVyxJQUFBQSxXQUFXLEVBQUVwQixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixFQURTO0FBRXRCRixJQUFBQSxZQUFZLEVBQUVmLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQixDQUZRO0FBR3RCQyxJQUFBQSxlQUFlLEVBQUVsQixHQUFHLENBQUNnQixNQUFKLEdBQWFDLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFYLENBQWY7QUFNQWYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FSRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBpdGVtOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy5jb21wYW55T3JkZXJTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgY3VzdG9tZXJfaWQ6IEpvaS5udW1iZXIoKS5lbXB0eSgpLFxuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        item: Joi.number().required(),\n        quantity: Joi.number(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        customer_id: Joi.number().empty(),\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e1/ordervalidators_e12e9bab16ee6f22191cb1085e8fa580.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2965",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3959,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3956,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.createOrderSchema",
                "ranges": [
                  {
                    "startOffset": 221,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateOrderSchema",
                "ranges": [
                  {
                    "startOffset": 411,
                    "endOffset": 594,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.companyOrderSchema",
                "ranges": [
                  {
                    "startOffset": 626,
                    "endOffset": 848,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n  createOrder,\n  updateOrderItem,\n  updateOrder,\n  getOrderById,\n  getOwnOrders,\n  getCompanyOrders\n};\n\nasync function createOrder(params) {\n  const order = await get_or_create(params.customer_id, params.company_id); // insert the item to the order item table\n\n  const orderItem = order.$relatedQuery(\"items\").insert({\n    item: params.item.id,\n    order: order.id\n  });\n  return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n  const order = await getOrder(id); // check item quantity\n\n  if (params.item.quantity <= 0) {\n    // remove from cart\n    await order.$relatedQuery(\"items\").delete().where({\n      item: params.item.id\n    });\n    return;\n  }\n\n  const orderItem = await order.$relatedQuery(\"items\").patch({\n    quantity: params.item.quantity\n  }).where({\n    item: params.item.id\n  }).returning(\"*\");\n  return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n  let order = await getOrder(id).withGraphFetched(\"company\");\n\n  if (order.company.id !== user.company.id) {\n    const error = new Error(\"Unathorized\");\n    throw error;\n  } // aka update order table\n\n\n  order = await Order.query().patchAndFetchById(id, params);\n  return order;\n}\n\nasync function getOrderById(id) {\n  const order = await getOrder(id).withGraphFetched(\"items\");\n  return order;\n}\n\nasync function getOwnOrders(id) {\n  const orders = await Order.query().where({\n    customer_id: id\n  }).orderBy(\"created_at\");\n  return orders;\n}\n\nasync function getCompanyOrders(params) {\n  const orders = await Order.query().where(params).orderBy(\"created_at\");\n  return orders;\n} // =======================helpers==========================\n\n\nasync function get_or_create(id, company_id) {\n  // checks for the existence of a customer order\n  // if it exists add the new items on it\n  // if it does not exist it creates one\n  let order = await Order.query().where({\n    customer_id: id,\n    order_status: \"New\"\n  }).first();\n\n  if (!order) {\n    // create one\n    order = await Order.query().insert({\n      customer_id: id,\n      company_id,\n      order_status: \"New\",\n      purchase_status: \"unpaid\"\n    });\n  }\n\n  return order;\n}\n\nasync function getOrder(id) {\n  const order = await Order.query().findById(id);\n  return order;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnNlcnZpY2UuanMiXSwibmFtZXMiOlsiT3JkZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU9yZGVyIiwidXBkYXRlT3JkZXJJdGVtIiwidXBkYXRlT3JkZXIiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicGFyYW1zIiwib3JkZXIiLCJnZXRfb3JfY3JlYXRlIiwiY3VzdG9tZXJfaWQiLCJjb21wYW55X2lkIiwib3JkZXJJdGVtIiwiJHJlbGF0ZWRRdWVyeSIsImluc2VydCIsIml0ZW0iLCJpZCIsImdldE9yZGVyIiwicXVhbnRpdHkiLCJkZWxldGUiLCJ3aGVyZSIsInBhdGNoIiwicmV0dXJuaW5nIiwidXNlciIsIndpdGhHcmFwaEZldGNoZWQiLCJjb21wYW55IiwiZXJyb3IiLCJFcnJvciIsInF1ZXJ5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJvcmRlcnMiLCJvcmRlckJ5Iiwib3JkZXJfc3RhdHVzIiwiZmlyc3QiLCJwdXJjaGFzZV9zdGF0dXMiLCJmaW5kQnlJZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLFdBRGE7QUFFYkMsRUFBQUEsZUFGYTtBQUdiQyxFQUFBQSxXQUhhO0FBSWJDLEVBQUFBLFlBSmE7QUFLYkMsRUFBQUEsWUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLFdBQWYsQ0FBMkJNLE1BQTNCLEVBQW1DO0FBQy9CLFFBQU1DLEtBQUssR0FBRyxNQUFNQyxhQUFhLENBQUNGLE1BQU0sQ0FBQ0csV0FBUixFQUFxQkgsTUFBTSxDQUFDSSxVQUE1QixDQUFqQyxDQUQrQixDQUcvQjs7QUFDQSxRQUFNQyxTQUFTLEdBQUdKLEtBQUssQ0FDbEJLLGFBRGEsQ0FDQyxPQURELEVBRWJDLE1BRmEsQ0FFTjtBQUFFQyxJQUFBQSxJQUFJLEVBQUVSLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZQyxFQUFwQjtBQUF3QlIsSUFBQUEsS0FBSyxFQUFFQSxLQUFLLENBQUNRO0FBQXJDLEdBRk0sQ0FBbEI7QUFJQSxTQUFPSixTQUFQO0FBQ0g7O0FBRUQsZUFBZVYsZUFBZixDQUErQmMsRUFBL0IsRUFBbUNULE1BQW5DLEVBQTJDO0FBQ3ZDLFFBQU1DLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBNUIsQ0FEdUMsQ0FHdkM7O0FBQ0EsTUFBSVQsTUFBTSxDQUFDUSxJQUFQLENBQVlHLFFBQVosSUFBd0IsQ0FBNUIsRUFBK0I7QUFDM0I7QUFDQSxVQUFNVixLQUFLLENBQ05LLGFBREMsQ0FDYSxPQURiLEVBRURNLE1BRkMsR0FHREMsS0FIQyxDQUdLO0FBQUVMLE1BQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBQXBCLEtBSEwsQ0FBTjtBQUtBO0FBQ0g7O0FBRUQsUUFBTUosU0FBUyxHQUFHLE1BQU1KLEtBQUssQ0FDeEJLLGFBRG1CLENBQ0wsT0FESyxFQUVuQlEsS0FGbUIsQ0FFYjtBQUNISCxJQUFBQSxRQUFRLEVBQUVYLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZRztBQURuQixHQUZhLEVBS25CRSxLQUxtQixDQUtiO0FBQ0hMLElBQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBRGYsR0FMYSxFQVFuQk0sU0FSbUIsQ0FRVCxHQVJTLENBQXhCO0FBVUEsU0FBT1YsU0FBUDtBQUNIOztBQUVELGVBQWVULFdBQWYsQ0FBMkJhLEVBQTNCLEVBQStCTyxJQUEvQixFQUFxQ2hCLE1BQXJDLEVBQTZDO0FBQ3pDLE1BQUlDLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixTQUE5QixDQUFsQjs7QUFFQSxNQUFJaEIsS0FBSyxDQUFDaUIsT0FBTixDQUFjVCxFQUFkLEtBQXFCTyxJQUFJLENBQUNFLE9BQUwsQ0FBYVQsRUFBdEMsRUFBMEM7QUFDdEMsVUFBTVUsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxhQUFWLENBQWQ7QUFDQSxVQUFNRCxLQUFOO0FBQ0gsR0FOd0MsQ0FPekM7OztBQUNBbEIsRUFBQUEsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY0MsaUJBQWQsQ0FBZ0NiLEVBQWhDLEVBQW9DVCxNQUFwQyxDQUFkO0FBRUEsU0FBT0MsS0FBUDtBQUNIOztBQUVELGVBQWVKLFlBQWYsQ0FBNEJZLEVBQTVCLEVBQWdDO0FBQzVCLFFBQU1SLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixPQUE5QixDQUFwQjtBQUNBLFNBQU9oQixLQUFQO0FBQ0g7O0FBRUQsZUFBZUgsWUFBZixDQUE0QlcsRUFBNUIsRUFBZ0M7QUFDNUIsUUFBTWMsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQ2hCUixLQURnQixDQUNWO0FBQUVWLElBQUFBLFdBQVcsRUFBRU07QUFBZixHQURVLEVBRWhCZSxPQUZnQixDQUVSLFlBRlEsQ0FBckI7QUFHQSxTQUFPRCxNQUFQO0FBQ0g7O0FBRUQsZUFBZXhCLGdCQUFmLENBQWdDQyxNQUFoQyxFQUF3QztBQUNwQyxRQUFNdUIsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQWNSLEtBQWQsQ0FBb0JiLE1BQXBCLEVBQTRCd0IsT0FBNUIsQ0FBb0MsWUFBcEMsQ0FBckI7QUFDQSxTQUFPRCxNQUFQO0FBQ0gsQyxDQUNEOzs7QUFDQSxlQUFlckIsYUFBZixDQUE2Qk8sRUFBN0IsRUFBaUNMLFVBQWpDLEVBQTZDO0FBQ3pDO0FBQ0E7QUFDQTtBQUVBLE1BQUlILEtBQUssR0FBRyxNQUFNWCxLQUFLLENBQUMrQixLQUFOLEdBQ2JSLEtBRGEsQ0FDUDtBQUNIVixJQUFBQSxXQUFXLEVBQUVNLEVBRFY7QUFFSGdCLElBQUFBLFlBQVksRUFBRTtBQUZYLEdBRE8sRUFLYkMsS0FMYSxFQUFsQjs7QUFPQSxNQUFJLENBQUN6QixLQUFMLEVBQVk7QUFDUjtBQUNBQSxJQUFBQSxLQUFLLEdBQUcsTUFBTVgsS0FBSyxDQUFDK0IsS0FBTixHQUFjZCxNQUFkLENBQXFCO0FBQy9CSixNQUFBQSxXQUFXLEVBQUVNLEVBRGtCO0FBRS9CTCxNQUFBQSxVQUYrQjtBQUcvQnFCLE1BQUFBLFlBQVksRUFBRSxLQUhpQjtBQUkvQkUsTUFBQUEsZUFBZSxFQUFFO0FBSmMsS0FBckIsQ0FBZDtBQU1IOztBQUVELFNBQU8xQixLQUFQO0FBQ0g7O0FBRUQsZUFBZVMsUUFBZixDQUF3QkQsRUFBeEIsRUFBNEI7QUFDeEIsUUFBTVIsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY08sUUFBZCxDQUF1Qm5CLEVBQXZCLENBQXBCO0FBQ0EsU0FBT1IsS0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgT3JkZXIgPSByZXF1aXJlKFwiLi9vcmRlci5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlT3JkZXIsXG4gICAgdXBkYXRlT3JkZXJJdGVtLFxuICAgIHVwZGF0ZU9yZGVyLFxuICAgIGdldE9yZGVyQnlJZCxcbiAgICBnZXRPd25PcmRlcnMsXG4gICAgZ2V0Q29tcGFueU9yZGVycyxcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9yZGVyKHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0X29yX2NyZWF0ZShwYXJhbXMuY3VzdG9tZXJfaWQsIHBhcmFtcy5jb21wYW55X2lkKTtcblxuICAgIC8vIGluc2VydCB0aGUgaXRlbSB0byB0aGUgb3JkZXIgaXRlbSB0YWJsZVxuICAgIGNvbnN0IG9yZGVySXRlbSA9IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLmluc2VydCh7IGl0ZW06IHBhcmFtcy5pdGVtLmlkLCBvcmRlcjogb3JkZXIuaWQgfSk7XG5cbiAgICByZXR1cm4gb3JkZXJJdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVPcmRlckl0ZW0oaWQsIHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0T3JkZXIoaWQpO1xuXG4gICAgLy8gY2hlY2sgaXRlbSBxdWFudGl0eVxuICAgIGlmIChwYXJhbXMuaXRlbS5xdWFudGl0eSA8PSAwKSB7XG4gICAgICAgIC8vIHJlbW92ZSBmcm9tIGNhcnRcbiAgICAgICAgYXdhaXQgb3JkZXJcbiAgICAgICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgICAgIC5kZWxldGUoKVxuICAgICAgICAgICAgLndoZXJlKHsgaXRlbTogcGFyYW1zLml0ZW0uaWQgfSk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG9yZGVySXRlbSA9IGF3YWl0IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLnBhdGNoKHtcbiAgICAgICAgICAgIHF1YW50aXR5OiBwYXJhbXMuaXRlbS5xdWFudGl0eSxcbiAgICAgICAgfSlcbiAgICAgICAgLndoZXJlKHtcbiAgICAgICAgICAgIGl0ZW06IHBhcmFtcy5pdGVtLmlkLFxuICAgICAgICB9KVxuICAgICAgICAucmV0dXJuaW5nKFwiKlwiKTtcblxuICAgIHJldHVybiBvcmRlckl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZU9yZGVyKGlkLCB1c2VyLCBwYXJhbXMpIHtcbiAgICBsZXQgb3JkZXIgPSBhd2FpdCBnZXRPcmRlcihpZCkud2l0aEdyYXBoRmV0Y2hlZChcImNvbXBhbnlcIik7XG5cbiAgICBpZiAob3JkZXIuY29tcGFueS5pZCAhPT0gdXNlci5jb21wYW55LmlkKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFwiVW5hdGhvcml6ZWRcIik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICAvLyBha2EgdXBkYXRlIG9yZGVyIHRhYmxlXG4gICAgb3JkZXIgPSBhd2FpdCBPcmRlci5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPcmRlckJ5SWQoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IGdldE9yZGVyKGlkKS53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIik7XG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPd25PcmRlcnMoaWQpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IGN1c3RvbWVyX2lkOiBpZCB9KVxuICAgICAgICAub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q29tcGFueU9yZGVycyhwYXJhbXMpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpLndoZXJlKHBhcmFtcykub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cbi8vID09PT09PT09PT09PT09PT09PT09PT09aGVscGVycz09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRfb3JfY3JlYXRlKGlkLCBjb21wYW55X2lkKSB7XG4gICAgLy8gY2hlY2tzIGZvciB0aGUgZXhpc3RlbmNlIG9mIGEgY3VzdG9tZXIgb3JkZXJcbiAgICAvLyBpZiBpdCBleGlzdHMgYWRkIHRoZSBuZXcgaXRlbXMgb24gaXRcbiAgICAvLyBpZiBpdCBkb2VzIG5vdCBleGlzdCBpdCBjcmVhdGVzIG9uZVxuXG4gICAgbGV0IG9yZGVyID0gYXdhaXQgT3JkZXIucXVlcnkoKVxuICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgY3VzdG9tZXJfaWQ6IGlkLFxuICAgICAgICAgICAgb3JkZXJfc3RhdHVzOiBcIk5ld1wiLFxuICAgICAgICB9KVxuICAgICAgICAuZmlyc3QoKTtcblxuICAgIGlmICghb3JkZXIpIHtcbiAgICAgICAgLy8gY3JlYXRlIG9uZVxuICAgICAgICBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuaW5zZXJ0KHtcbiAgICAgICAgICAgIGN1c3RvbWVyX2lkOiBpZCxcbiAgICAgICAgICAgIGNvbXBhbnlfaWQsXG4gICAgICAgICAgICBvcmRlcl9zdGF0dXM6IFwiTmV3XCIsXG4gICAgICAgICAgICBwdXJjaGFzZV9zdGF0dXM6IFwidW5wYWlkXCIsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBvcmRlcjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0T3JkZXIoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuZmluZEJ5SWQoaWQpO1xuICAgIHJldHVybiBvcmRlcjtcbn1cbiJdfQ==",
            "originalCode": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n    createOrder,\n    updateOrderItem,\n    updateOrder,\n    getOrderById,\n    getOwnOrders,\n    getCompanyOrders,\n};\n\nasync function createOrder(params) {\n    const order = await get_or_create(params.customer_id, params.company_id);\n\n    // insert the item to the order item table\n    const orderItem = order\n        .$relatedQuery(\"items\")\n        .insert({ item: params.item.id, order: order.id });\n\n    return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n    const order = await getOrder(id);\n\n    // check item quantity\n    if (params.item.quantity <= 0) {\n        // remove from cart\n        await order\n            .$relatedQuery(\"items\")\n            .delete()\n            .where({ item: params.item.id });\n\n        return;\n    }\n\n    const orderItem = await order\n        .$relatedQuery(\"items\")\n        .patch({\n            quantity: params.item.quantity,\n        })\n        .where({\n            item: params.item.id,\n        })\n        .returning(\"*\");\n\n    return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n    let order = await getOrder(id).withGraphFetched(\"company\");\n\n    if (order.company.id !== user.company.id) {\n        const error = new Error(\"Unathorized\");\n        throw error;\n    }\n    // aka update order table\n    order = await Order.query().patchAndFetchById(id, params);\n\n    return order;\n}\n\nasync function getOrderById(id) {\n    const order = await getOrder(id).withGraphFetched(\"items\");\n    return order;\n}\n\nasync function getOwnOrders(id) {\n    const orders = await Order.query()\n        .where({ customer_id: id })\n        .orderBy(\"created_at\");\n    return orders;\n}\n\nasync function getCompanyOrders(params) {\n    const orders = await Order.query().where(params).orderBy(\"created_at\");\n    return orders;\n}\n// =======================helpers==========================\nasync function get_or_create(id, company_id) {\n    // checks for the existence of a customer order\n    // if it exists add the new items on it\n    // if it does not exist it creates one\n\n    let order = await Order.query()\n        .where({\n            customer_id: id,\n            order_status: \"New\",\n        })\n        .first();\n\n    if (!order) {\n        // create one\n        order = await Order.query().insert({\n            customer_id: id,\n            company_id,\n            order_status: \"New\",\n            purchase_status: \"unpaid\",\n        });\n    }\n\n    return order;\n}\n\nasync function getOrder(id) {\n    const order = await Order.query().findById(id);\n    return order;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2d/orderservice_2dd8ed46d0ebb5dcc0edc8f1fb86b7ac.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2966",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10175,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10172,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 253,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 543,
                    "endOffset": 993,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 995,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1324,
                    "endOffset": 1437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1439,
                    "endOffset": 1584,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1586,
                    "endOffset": 1720,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get_or_create",
                "ranges": [
                  {
                    "startOffset": 1783,
                    "endOffset": 2270,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrder",
                "ranges": [
                  {
                    "startOffset": 2272,
                    "endOffset": 2369,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n  static get tableName() {\n    return tableNames.order;\n  }\n\n  static get relationMappings() {\n    const Company = require(\"../company.model\");\n\n    const User = require(\"../../user/user.model\");\n\n    const OrderItem = require(\"./orderItem/orderItem.model\");\n\n    return {\n      items: {\n        relation: Model.HasManyRelation,\n        modelClass: OrderItem,\n        join: {\n          from: `${tableNames.order}.id`,\n          to: `${tableNames.orderItem}.order_id`\n        }\n      },\n      customer: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.order}.customer_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Company,\n        join: {\n          from: `${tableNames.order}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Order;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJkYiIsIk9yZGVyIiwidGFibGVOYW1lIiwib3JkZXIiLCJyZWxhdGlvbk1hcHBpbmdzIiwiQ29tcGFueSIsIlVzZXIiLCJPcmRlckl0ZW0iLCJpdGVtcyIsInJlbGF0aW9uIiwiSGFzTWFueVJlbGF0aW9uIiwibW9kZWxDbGFzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJvcmRlckl0ZW0iLCJjdXN0b21lciIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwidXNlciIsImNvbXBhbnkiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsS0FBTixTQUFvQkosS0FBcEIsQ0FBMEI7QUFDdEIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLEtBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUMsT0FBTyxHQUFHUCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVEsSUFBSSxHQUFHUixPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsVUFBTVMsU0FBUyxHQUFHVCxPQUFPLENBQUMsNkJBQUQsQ0FBekI7O0FBRUEsV0FBTztBQUNIVSxNQUFBQSxLQUFLLEVBQUU7QUFDSEMsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNhLGVBRGI7QUFFSEMsUUFBQUEsVUFBVSxFQUFFSixTQUZUO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWQsVUFBVSxDQUFDSSxLQUFNLEtBRHhCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZixVQUFVLENBQUNnQixTQUFVO0FBRjFCO0FBSEgsT0FESjtBQVVIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEVjtBQUVOTixRQUFBQSxVQUFVLEVBQUVMLElBRk47QUFHTk0sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sY0FEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ21CLElBQUs7QUFGckI7QUFIQSxPQVZQO0FBa0JIQyxNQUFBQSxPQUFPLEVBQUU7QUFDTFYsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEWDtBQUVMTixRQUFBQSxVQUFVLEVBQUVOLE9BRlA7QUFHTE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sYUFEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ29CLE9BQVE7QUFGeEI7QUFIRDtBQWxCTixLQUFQO0FBMkJIOztBQXJDcUI7O0FBd0MxQnRCLEtBQUssQ0FBQ3VCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLEtBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IHRhYmxlTmFtZXMgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29uc3RhbnRzL3RhYmxlTmFtZXNcIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcblxuY2xhc3MgT3JkZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLm9yZGVyO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uLy4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgT3JkZXJJdGVtID0gcmVxdWlyZShcIi4vb3JkZXJJdGVtL29yZGVySXRlbS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuSGFzTWFueVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IE9yZGVySXRlbSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMub3JkZXJJdGVtfS5vcmRlcl9pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGN1c3RvbWVyOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkJlbG9uZ3NUb09uZVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IFVzZXIsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLm9yZGVyfS5jdXN0b21lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPcmRlcjtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n    static get tableName() {\n        return tableNames.order;\n    }\n\n    static get relationMappings() {\n        const Company = require(\"../company.model\");\n        const User = require(\"../../user/user.model\");\n        const OrderItem = require(\"./orderItem/orderItem.model\");\n\n        return {\n            items: {\n                relation: Model.HasManyRelation,\n                modelClass: OrderItem,\n                join: {\n                    from: `${tableNames.order}.id`,\n                    to: `${tableNames.orderItem}.order_id`,\n                },\n            },\n\n            customer: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.order}.customer_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Company,\n                join: {\n                    from: `${tableNames.order}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Order;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/66/ordermodel_662f5b9ea6475bcabfd0d4f0bf405dda.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2967",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5243,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5240,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Order",
                "ranges": [
                  {
                    "startOffset": 230,
                    "endOffset": 230,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 267,
                    "endOffset": 317,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 328,
                    "endOffset": 1185,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst role = require(\"../../../../utils/role\");\n\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n  orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVySXRlbS5yb3V0ZXMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhdXRoIiwiQXV0aCIsInJvbGUiLCJvcmRlclNlcnZpY2UiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInB1dCIsImN1c3RvbWVyIiwidXBkYXRlT3JkZXJJdGVtIiwicmVxIiwicmVzIiwibmV4dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJGLE9BQU8sQ0FBQywrQkFBRCxDQUE5Qjs7QUFDQSxNQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyx3QkFBRCxDQUFwQjs7QUFDQSxNQUFNSSxZQUFZLEdBQUdKLE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFFQSxNQUFNSyxNQUFNLEdBQUdOLE9BQU8sQ0FBQ08sTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQk4sSUFBSSxDQUFDQyxJQUFJLENBQUNNLFFBQU4sQ0FBcEIsRUFBcUNDLGVBQXJDOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxHQUE5QixFQUFtQ0MsSUFBbkMsRUFBeUM7QUFDckNULEVBQUFBLFlBQVksQ0FBQ00sZUFBYjtBQUNIOztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCByb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi4vb3JkZXIuc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wdXQoXCIvXCIsIEF1dGgocm9sZS5jdXN0b21lciksIHVwZGF0ZU9yZGVySXRlbSk7XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVySXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZS51cGRhdGVPcmRlckl0ZW0oKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst role = require(\"../../../../utils/role\");\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n    orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/orderItemroutes_440b1db2888128c60482407cf8bcef31.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2968",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/orderItem/orderItem.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2184,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2181,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 406,
                    "endOffset": 484,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        }
      ]
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1609772026532,
        "runtime": 2042,
        "slow": false,
        "start": 1609772024490
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/v1/accounts/register-owner"
          ],
          "duration": 72,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/accounts/register-owner should fail to create a user with missing fields",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to create a user with missing fields"
        },
        {
          "ancestorTitles": [
            "POST /api/v1/accounts/register-owner"
          ],
          "duration": 57,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/accounts/register-owner should fail to signup user with existing email",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should fail to signup user with existing email"
        },
        {
          "ancestorTitles": [
            "POST /api/v1/accounts/register-owner"
          ],
          "duration": 168,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/accounts/register-owner should signup a user ",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "should signup a user "
        },
        {
          "ancestorTitles": [
            "POST /api/v1/accounts/login"
          ],
          "duration": 110,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/accounts/login Should login user",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should login user"
        },
        {
          "ancestorTitles": [
            "POST /api/v1/accounts/login"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/accounts/login Should not login user with wrong password",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should not login user with wrong password"
        },
        {
          "ancestorTitles": [
            "POST /api/v1/accounts/login"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/accounts/login Should fail to login for a non existenst user",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should fail to login for a non existenst user"
        },
        {
          "ancestorTitles": [
            "POST fetch accounts"
          ],
          "duration": 141,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST fetch accounts Should return an array of users",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should return an array of users"
        },
        {
          "ancestorTitles": [
            "PUT/GET /api/v1/accounts/:id fetch account by id"
          ],
          "duration": 133,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PUT/GET /api/v1/accounts/:id fetch account by id Should return the account of the user",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should return the account of the user"
        },
        {
          "ancestorTitles": [
            "PUT/GET /api/v1/accounts/:id fetch account by id"
          ],
          "duration": 146,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PUT/GET /api/v1/accounts/:id fetch account by id Should not update the account of the admin",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should not update the account of the admin"
        },
        {
          "ancestorTitles": [
            "PUT/GET /api/v1/accounts/:id fetch account by id"
          ],
          "duration": 148,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PUT/GET /api/v1/accounts/:id fetch account by id Should update the account of the owner",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should update the account of the owner"
        },
        {
          "ancestorTitles": [
            "POST /api/v1/accounts/ create staff "
          ],
          "duration": 241,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/v1/accounts/ create staff  owner should create a new user",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "owner should create a new user"
        }
      ],
      "failureMessage": null,
      "v8Coverage": [
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst morgan = require(\"morgan\");\n\nconst compression = require(\"compression\");\n\nconst helmet = require(\"helmet\");\n\nconst cors = require(\"cors\"); // Swagger stuff\n\n\nrequire(\"rootpath\")();\n\nconst swaggerUi = require(\"swagger-ui-express\");\n\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\n\nconst api = require(\"./api\");\n\nconst app = express();\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\napp.get(\"/\", (req, res) => {\n  res.json({\n    message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\"\n  });\n});\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vcmdhbiIsImNvbXByZXNzaW9uIiwiaGVsbWV0IiwiY29ycyIsInN3YWdnZXJVaSIsInN3YWdnZXJEb2MiLCJjb25maWciLCJtaWRkbGV3YXJlcyIsImFwaSIsImFwcCIsInVzZSIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJtZXNzYWdlIiwic2VydmUiLCJzZXR1cCIsIm5vdEZvdW5kIiwiZXJyb3JIYW5kbGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBM0I7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCLEMsQ0FFQTs7O0FBQ0FBLE9BQU8sQ0FBQyxVQUFELENBQVA7O0FBQ0EsTUFBTUssU0FBUyxHQUFHTCxPQUFPLENBQUMsb0JBQUQsQ0FBekI7O0FBQ0EsTUFBTU0sVUFBVSxHQUFHTixPQUFPLENBQUMsc0JBQUQsQ0FBMUI7O0FBRUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JPLE1BQWxCOztBQUVBLE1BQU1DLFdBQVcsR0FBR1IsT0FBTyxDQUFDLGVBQUQsQ0FBM0I7O0FBQ0EsTUFBTVMsR0FBRyxHQUFHVCxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQSxNQUFNVSxHQUFHLEdBQUdYLE9BQU8sRUFBbkI7QUFFQVcsR0FBRyxDQUFDQyxHQUFKLENBQVFWLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQVMsR0FBRyxDQUFDQyxHQUFKLENBQVFSLE1BQU0sRUFBZDtBQUNBTyxHQUFHLENBQUNDLEdBQUosQ0FBUVAsSUFBSSxFQUFaO0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRVCxXQUFXLEVBQW5CO0FBQ0FRLEdBQUcsQ0FBQ0MsR0FBSixDQUFRWixPQUFPLENBQUNhLElBQVIsRUFBUjtBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxHQUFSLEVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTO0FBQ0xJLElBQUFBLE9BQU8sRUFBRTtBQURKLEdBQVQ7QUFHSCxDQUpEO0FBTUFOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJGLEdBQW5CO0FBQ0FDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUJOLFNBQVMsQ0FBQ1ksS0FBL0IsRUFBc0NaLFNBQVMsQ0FBQ2EsS0FBVixDQUFnQlosVUFBaEIsQ0FBdEM7QUFFQUksR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1csUUFBcEI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1ksWUFBcEI7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoXCJtb3JnYW5cIik7XG5jb25zdCBjb21wcmVzc2lvbiA9IHJlcXVpcmUoXCJjb21wcmVzc2lvblwiKTtcbmNvbnN0IGhlbG1ldCA9IHJlcXVpcmUoXCJoZWxtZXRcIik7XG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XG5cbi8vIFN3YWdnZXIgc3R1ZmZcbnJlcXVpcmUoXCJyb290cGF0aFwiKSgpO1xuY29uc3Qgc3dhZ2dlclVpID0gcmVxdWlyZShcInN3YWdnZXItdWktZXhwcmVzc1wiKTtcbmNvbnN0IHN3YWdnZXJEb2MgPSByZXF1aXJlKFwiLi4vZG9jcy9zd2FnZ2VyLmpzb25cIik7XG5cbnJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKCk7XG5cbmNvbnN0IG1pZGRsZXdhcmVzID0gcmVxdWlyZShcIi4vbWlkZGxld2FyZXNcIik7XG5jb25zdCBhcGkgPSByZXF1aXJlKFwiLi9hcGlcIik7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xuYXBwLnVzZShoZWxtZXQoKSk7XG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGNvbXByZXNzaW9uKCkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbmFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogXCLwn6aE8J+MiOKcqPCfkYvwn4yO8J+MjfCfjI/inKjwn4yI8J+mhFwiLFxuICAgIH0pO1xufSk7XG5cbmFwcC51c2UoXCIvYXBpL3YxXCIsIGFwaSk7XG5hcHAudXNlKFwiL2FwaS1kb2NzXCIsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2MpKTtcblxuYXBwLnVzZShtaWRkbGV3YXJlcy5ub3RGb3VuZCk7XG5hcHAudXNlKG1pZGRsZXdhcmVzLmVycm9ySGFuZGxlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
            "originalCode": "const express = require(\"express\");\nconst morgan = require(\"morgan\");\nconst compression = require(\"compression\");\nconst helmet = require(\"helmet\");\nconst cors = require(\"cors\");\n\n// Swagger stuff\nrequire(\"rootpath\")();\nconst swaggerUi = require(\"swagger-ui-express\");\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\nconst api = require(\"./api\");\n\nconst app = express();\n\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\n\napp.get(\"/\", (req, res) => {\n    res.json({\n        message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\",\n    });\n});\n\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\n\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\n\nmodule.exports = app;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/68/app_6855482f668a469a3eba3734dab1ce4c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2126",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/app.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4132,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4129,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 669,
                    "endOffset": 739,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "function notFound(req, res, next) {\n  res.status(404);\n  const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n  next(error);\n}\n/* eslint-disable no-unused-vars */\n\n\nfunction errorHandler(err, req, res, next) {\n  /* eslint-enable no-unused-vars */\n  const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n  res.status(statusCode);\n  if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n  res.json({\n    message: err.message,\n    stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack\n  });\n}\n\nmodule.exports = {\n  notFound,\n  errorHandler\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm5vdEZvdW5kIiwicmVxIiwicmVzIiwibmV4dCIsInN0YXR1cyIsImVycm9yIiwiRXJyb3IiLCJvcmlnaW5hbFVybCIsImVycm9ySGFuZGxlciIsImVyciIsInN0YXR1c0NvZGUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSIsImpzb24iLCJzdGFjayIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCQyxHQUF2QixFQUE0QkMsSUFBNUIsRUFBa0M7QUFDOUJELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVg7QUFDQSxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsS0FBSixDQUFXLG9CQUFtQkwsR0FBRyxDQUFDTSxXQUFZLEVBQTlDLENBQWQ7QUFDQUosRUFBQUEsSUFBSSxDQUFDRSxLQUFELENBQUo7QUFDSDtBQUVEOzs7QUFDQSxTQUFTRyxZQUFULENBQXNCQyxHQUF0QixFQUEyQlIsR0FBM0IsRUFBZ0NDLEdBQWhDLEVBQXFDQyxJQUFyQyxFQUEyQztBQUN2QztBQUNBLFFBQU1PLFVBQVUsR0FBR1IsR0FBRyxDQUFDUSxVQUFKLEtBQW1CLEdBQW5CLEdBQXlCUixHQUFHLENBQUNRLFVBQTdCLEdBQTBDLEdBQTdEO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXTSxVQUFYO0FBQ0EsTUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixHQUFHLENBQUNPLE9BQWhCO0FBQzNDZCxFQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUztBQUNMRCxJQUFBQSxPQUFPLEVBQUVQLEdBQUcsQ0FBQ08sT0FEUjtBQUVMRSxJQUFBQSxLQUFLLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQXpCLEdBQXdDLElBQXhDLEdBQStDSixHQUFHLENBQUNTO0FBRnJELEdBQVQ7QUFJSDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JwQixFQUFBQSxRQURhO0FBRWJRLEVBQUFBO0FBRmEsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBub3RGb3VuZChyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcy5zdGF0dXMoNDA0KTtcbiAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihg8J+UjSAtIE5vdCBGb3VuZCAtICR7cmVxLm9yaWdpbmFsVXJsfWApO1xuICAgIG5leHQoZXJyb3IpO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuZnVuY3Rpb24gZXJyb3JIYW5kbGVyKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG4gICAgY29uc3Qgc3RhdHVzQ29kZSA9IHJlcy5zdGF0dXNDb2RlICE9PSAyMDAgPyByZXMuc3RhdHVzQ29kZSA6IDUwMDtcbiAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIGNvbnNvbGUubG9nKGVyci5tZXNzYWdlKTtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgICBzdGFjazogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gXCLwn6WeXCIgOiBlcnIuc3RhY2ssXG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5vdEZvdW5kLFxuICAgIGVycm9ySGFuZGxlcixcbn07XG4iXX0=",
            "originalCode": "function notFound(req, res, next) {\n    res.status(404);\n    const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n    next(error);\n}\n\n/* eslint-disable no-unused-vars */\nfunction errorHandler(err, req, res, next) {\n    /* eslint-enable no-unused-vars */\n    const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n    res.status(statusCode);\n    if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n    res.json({\n        message: err.message,\n        stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack,\n    });\n}\n\nmodule.exports = {\n    notFound,\n    errorHandler,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0d/middlewares_0d2bc57a77c05a727da8aec38de48282.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2259",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/middlewares.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3010,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3007,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "notFound",
                "ranges": [
                  {
                    "startOffset": 89,
                    "endOffset": 226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "errorHandler",
                "ranges": [
                  {
                    "startOffset": 265,
                    "endOffset": 626,
                    "count": 5
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\nrouter.get(\"/\", (req, res) => {\n  res.json({\n    message: \"API - 👋🌎🌍🌏\"\n  });\n});\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwianNvbiIsIm1lc3NhZ2UiLCJ1c2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFFQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFDTEMsSUFBQUEsT0FBTyxFQUFFO0FBREosR0FBVDtBQUdILENBSkQ7QUFNQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsV0FBWCxFQUF3QlIsT0FBTyxDQUFDLG9CQUFELENBQS9CO0FBQ0FDLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLFVBQVgsRUFBdUJSLE9BQU8sQ0FBQywwQkFBRCxDQUE5QjtBQUVBUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IFwiQVBJIC0g8J+Ri/CfjI7wn4yN8J+Mj1wiLFxuICAgIH0pO1xufSk7XG5cbnJvdXRlci51c2UoXCIvYWNjb3VudHNcIiwgcmVxdWlyZShcIi4vYXV0aC9hdXRoLnJvdXRlc1wiKSk7XG5yb3V0ZXIudXNlKFwiL2NvbXBhbnlcIiwgcmVxdWlyZShcIi4vY29tcGFueS9jb21wYW55LnJvdXRlc1wiKSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
            "originalCode": "const express = require(\"express\");\n\nconst router = express.Router();\n\nrouter.get(\"/\", (req, res) => {\n    res.json({\n        message: \"API - 👋🌎🌍🌏\",\n    });\n});\n\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/46/index_46150bc44a91011b69db233a13fb0837.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2260",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/index.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1667,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1664,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 175,
                    "endOffset": 241,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst {\n  signinSchema,\n  signupSchema,\n  updateSchema,\n  verifyEmailSchema\n} = require(\"./auth.validators\");\n\nconst authService = require(\"./auth.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\nmodule.exports = router;\n\nfunction login(req, res, next) {\n  const {\n    email,\n    password\n  } = req.body;\n  authService.login({\n    email,\n    password\n  }).then(({\n    user,\n    token\n  }) => {\n    res.json({\n      user,\n      token\n    });\n  }).catch(next);\n}\n\nfunction register(req, res, next) {\n  req.body.role = Role.owner;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n  req.body.role = Role.customer;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n  authService.verifyEmail(req.body).then(() => res.json({\n    message: \"Verification successfull\"\n  })).catch(next);\n}\n\nfunction getAll(req, res, next) {\n  authService.getAll().then(accounts => res.json(accounts)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  // users can get their own account and admin can get any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.getById(req.params.id).then(account => account ? res.json(account) : res.sendStatus(404)).catch(next);\n}\n\nfunction create(req, res, next) {\n  authService.create(req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // users can update their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.update(req.params.id, req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction _delete(req, res, next) {\n  // users can delete their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.delete(req.param.id).then(() => res.json({\n    message: \"Account deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\nconst router = express.Router();\nconst {\n    signinSchema,\n    signupSchema,\n    updateSchema,\n    verifyEmailSchema,\n} = require(\"./auth.validators\");\nconst authService = require(\"./auth.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\n\nmodule.exports = router;\n\nfunction login(req, res, next) {\n    const { email, password } = req.body;\n    authService\n        .login({ email, password })\n        .then(({ user, token }) => {\n            res.json({ user, token });\n        })\n        .catch(next);\n}\n\nfunction register(req, res, next) {\n    req.body.role = Role.owner;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n    req.body.role = Role.customer;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n    authService\n        .verifyEmail(req.body)\n        .then(() => res.json({ message: \"Verification successfull\" }))\n        .catch(next);\n}\n\nfunction getAll(req, res, next) {\n    authService\n        .getAll()\n        .then((accounts) => res.json(accounts))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    // users can get their own account and admin can get any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .getById(req.params.id)\n        .then((account) => (account ? res.json(account) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction create(req, res, next) {\n    authService\n        .create(req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // users can update their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .update(req.params.id, req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction _delete(req, res, next) {\n    // users can delete their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .delete(req.param.id)\n        .then(() =>\n            res.json({\n                message: \"Account deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/75/authroutes_75bf7888c8e4ac0a10e44194cc103f96.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2261",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 15260,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 15257,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 919,
                    "endOffset": 1157,
                    "count": 8
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1058,
                    "endOffset": 1141,
                    "count": 6
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 1159,
                    "endOffset": 1486,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1282,
                    "endOffset": 1470,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "registerCustomer",
                "ranges": [
                  {
                    "startOffset": 1488,
                    "endOffset": 1826,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1828,
                    "endOffset": 1985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 1987,
                    "endOffset": 2095,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 2049,
                    "endOffset": 2079,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2097,
                    "endOffset": 2472,
                    "count": 1
                  },
                  {
                    "startOffset": 2276,
                    "endOffset": 2352,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 2396,
                    "endOffset": 2456,
                    "count": 1
                  },
                  {
                    "startOffset": 2435,
                    "endOffset": 2456,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 2474,
                    "endOffset": 2588,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 2544,
                    "endOffset": 2572,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2590,
                    "endOffset": 2944,
                    "count": 2
                  },
                  {
                    "startOffset": 2771,
                    "endOffset": 2847,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 2900,
                    "endOffset": 2928,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2946,
                    "endOffset": 3350,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n  const schema = Joi.object({\n    firstName: Joi.string().required(),\n    lastName: Joi.string().required(),\n    phoneNumber: Joi.string().min(10).max(15).required(),\n    role: Joi.string().min(5).required(),\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required(),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n  const schema = Joi.object({\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    firstName: Joi.string().empty(\"\"),\n    lastName: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    role: Joi.string().min(5).empty(\"\"),\n    phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n    password: Joi.string().min(8).empty(\"\"),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\")\n  }; //  TODO figure out how admin can update role\n\n  const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n  validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n  const schema = Joi.object({\n    token: Joi.string().required()\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsInNpZ251cFNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJmaXJzdE5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImxhc3ROYW1lIiwicGhvbmVOdW1iZXIiLCJtaW4iLCJtYXgiLCJyb2xlIiwiZW1haWwiLCJwYXNzd29yZCIsImNvbmZpcm1QYXNzd29yZCIsInZhbGlkIiwicmVmIiwic2lnbmluU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSIsIndpdGgiLCJ2ZXJpZnlFbWFpbFNjaGVtYSIsInRva2VuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUNBLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLG9DQUFELENBQS9COztBQUVBRSxPQUFPLENBQUNDLFlBQVIsR0FBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QkMsSUFBQUEsU0FBUyxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYUMsUUFBYixFQURXO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRlk7QUFHdEJFLElBQUFBLFdBQVcsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsRUFBakIsRUFBcUJDLEdBQXJCLENBQXlCLEVBQXpCLEVBQTZCSixRQUE3QixFQUhTO0FBSXRCSyxJQUFBQSxJQUFJLEVBQUVqQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFKZ0I7QUFLdEJNLElBQUFBLEtBQUssRUFBRWxCLEdBQUcsQ0FBQ1csTUFBSixHQUFhTyxLQUFiLEdBQXFCTixRQUFyQixFQUxlO0FBTXRCTyxJQUFBQSxRQUFRLEVBQUVuQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFOWTtBQU90QlEsSUFBQUEsZUFBZSxFQUFFcEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFVLEtBQWIsQ0FBbUJyQixHQUFHLENBQUNzQixHQUFKLENBQVEsVUFBUixDQUFuQixFQUF3Q1YsUUFBeEM7QUFQSyxHQUFYLENBQWY7QUFTQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FYRDs7QUFhQUwsT0FBTyxDQUFDb0IsWUFBUixHQUF1QixDQUFDbEIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QlMsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJOLFFBQXJCLEVBRGU7QUFFdEJPLElBQUFBLFFBQVEsRUFBRW5CLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CSCxRQUFwQjtBQUZZLEdBQVgsQ0FBZjtBQUlBVixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNxQixZQUFSLEdBQXVCLENBQUNuQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNa0IsV0FBVyxHQUFHO0FBQ2hCZixJQUFBQSxTQUFTLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhZSxLQUFiLENBQW1CLEVBQW5CLENBREs7QUFFaEJiLElBQUFBLFFBQVEsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFlLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGTTtBQUdoQlIsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJRLEtBQXJCLENBQTJCLEVBQTNCLENBSFM7QUFJaEJULElBQUFBLElBQUksRUFBRWpCLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CVyxLQUFwQixDQUEwQixFQUExQixDQUpVO0FBS2hCWixJQUFBQSxXQUFXLEVBQUVkLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLEVBQWpCLEVBQXFCQyxHQUFyQixDQUF5QixFQUF6QixFQUE2QlUsS0FBN0IsQ0FBbUMsRUFBbkMsQ0FMRztBQU1oQlAsSUFBQUEsUUFBUSxFQUFFbkIsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsQ0FBakIsRUFBb0JXLEtBQXBCLENBQTBCLEVBQTFCLENBTk07QUFPaEJOLElBQUFBLGVBQWUsRUFBRXBCLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CckIsR0FBRyxDQUFDc0IsR0FBSixDQUFRLFVBQVIsQ0FBbkIsRUFBd0NJLEtBQXhDLENBQThDLEVBQTlDO0FBUEQsR0FBcEIsQ0FEdUMsQ0FXdkM7O0FBQ0EsUUFBTWxCLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdnQixXQUFYLEVBQXdCRSxJQUF4QixDQUE2QixVQUE3QixFQUF5QyxpQkFBekMsQ0FBZjtBQUVBekIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FmRDs7QUFpQkFMLE9BQU8sQ0FBQ3lCLGlCQUFSLEdBQTRCLENBQUN2QixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCb0IsSUFBQUEsS0FBSyxFQUFFN0IsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWI7QUFEZSxHQUFYLENBQWY7QUFHQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FMRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5zaWdudXBTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgZmlyc3ROYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5yZXF1aXJlZCgpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLnJlcXVpcmVkKCksXG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgICAgICBjb25maXJtUGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS52YWxpZChKb2kucmVmKFwicGFzc3dvcmRcIikpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMuc2lnbmluU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgIH0pO1xuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnVwZGF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYVJ1bGVzID0ge1xuICAgICAgICBmaXJzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZW1haWw6IEpvaS5zdHJpbmcoKS5lbWFpbCgpLmVtcHR5KFwiXCIpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLmVtcHR5KFwiXCIpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5lbXB0eShcIlwiKSxcbiAgICAgICAgcGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS5taW4oOCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGNvbmZpcm1QYXNzd29yZDogSm9pLnN0cmluZygpLnZhbGlkKEpvaS5yZWYoXCJwYXNzd29yZFwiKSkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIC8vICBUT0RPIGZpZ3VyZSBvdXQgaG93IGFkbWluIGNhbiB1cGRhdGUgcm9sZVxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpLndpdGgoXCJwYXNzd29yZFwiLCBcImNvbmZpcm1QYXNzd29yZFwiKTtcblxuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnZlcmlmeUVtYWlsU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIHRva2VuOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n    const schema = Joi.object({\n        firstName: Joi.string().required(),\n        lastName: Joi.string().required(),\n        phoneNumber: Joi.string().min(10).max(15).required(),\n        role: Joi.string().min(5).required(),\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n    const schema = Joi.object({\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        firstName: Joi.string().empty(\"\"),\n        lastName: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        role: Joi.string().min(5).empty(\"\"),\n        phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n        password: Joi.string().min(8).empty(\"\"),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\"),\n    };\n\n    //  TODO figure out how admin can update role\n    const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n\n    validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n    const schema = Joi.object({\n        token: Joi.string().required(),\n    });\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/93/authvalidators_93d8fdb0df4bea4d1ddc0a198e2ff769.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2262",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7592,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7589,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.signupSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 651,
                    "count": 4
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.signinSchema",
                "ranges": [
                  {
                    "startOffset": 677,
                    "endOffset": 863,
                    "count": 8
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 889,
                    "endOffset": 1438,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "Object.<anonymous>.exports.verifyEmailSchema",
                "ranges": [
                  {
                    "startOffset": 1469,
                    "endOffset": 1601,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n  const options = {\n    abortEarly: false,\n    // include all errors\n    allowUnknown: true,\n    // ignore unknown props\n    stripUnknown: true // remove unknown props\n\n  };\n  const {\n    error,\n    value\n  } = schema.validate(req.body, options);\n\n  if (error) {\n    next(`Validation error: ${error.details.map(x => x.message).join(\", \")}`);\n  } else {\n    req.body = value;\n    next();\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRlUmVxdWVzdC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidmFsaWRhdGVSZXF1ZXN0IiwicmVxIiwibmV4dCIsInNjaGVtYSIsIm9wdGlvbnMiLCJhYm9ydEVhcmx5IiwiYWxsb3dVbmtub3duIiwic3RyaXBVbmtub3duIiwiZXJyb3IiLCJ2YWx1ZSIsInZhbGlkYXRlIiwiYm9keSIsImRldGFpbHMiLCJtYXAiLCJ4IiwibWVzc2FnZSIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLGVBQWpCOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQ0MsTUFBcEMsRUFBNEM7QUFDeEMsUUFBTUMsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLFVBQVUsRUFBRSxLQURBO0FBQ087QUFDbkJDLElBQUFBLFlBQVksRUFBRSxJQUZGO0FBRVE7QUFDcEJDLElBQUFBLFlBQVksRUFBRSxJQUhGLENBR1E7O0FBSFIsR0FBaEI7QUFNQSxRQUFNO0FBQUVDLElBQUFBLEtBQUY7QUFBU0MsSUFBQUE7QUFBVCxNQUFtQk4sTUFBTSxDQUFDTyxRQUFQLENBQWdCVCxHQUFHLENBQUNVLElBQXBCLEVBQTBCUCxPQUExQixDQUF6Qjs7QUFDQSxNQUFJSSxLQUFKLEVBQVc7QUFDUE4sSUFBQUEsSUFBSSxDQUNDLHFCQUFvQk0sS0FBSyxDQUFDSSxPQUFOLENBQ2hCQyxHQURnQixDQUNYQyxDQUFELElBQU9BLENBQUMsQ0FBQ0MsT0FERyxFQUVoQkMsSUFGZ0IsQ0FFWCxJQUZXLENBRUwsRUFIaEIsQ0FBSjtBQUtILEdBTkQsTUFNTztBQUNIZixJQUFBQSxHQUFHLENBQUNVLElBQUosR0FBV0YsS0FBWDtBQUNBUCxJQUFBQSxJQUFJO0FBQ1A7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gdmFsaWRhdGVSZXF1ZXN0O1xuXG5mdW5jdGlvbiB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpIHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBhYm9ydEVhcmx5OiBmYWxzZSwgLy8gaW5jbHVkZSBhbGwgZXJyb3JzXG4gICAgICAgIGFsbG93VW5rbm93bjogdHJ1ZSwgLy8gaWdub3JlIHVua25vd24gcHJvcHNcbiAgICAgICAgc3RyaXBVbmtub3duOiB0cnVlLCAvLyByZW1vdmUgdW5rbm93biBwcm9wc1xuICAgIH07XG5cbiAgICBjb25zdCB7IGVycm9yLCB2YWx1ZSB9ID0gc2NoZW1hLnZhbGlkYXRlKHJlcS5ib2R5LCBvcHRpb25zKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChcbiAgICAgICAgICAgIGBWYWxpZGF0aW9uIGVycm9yOiAke2Vycm9yLmRldGFpbHNcbiAgICAgICAgICAgICAgICAubWFwKCh4KSA9PiB4Lm1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgLmpvaW4oXCIsIFwiKX1gXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmJvZHkgPSB2YWx1ZTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH1cbn1cbiJdfQ==",
            "originalCode": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n    const options = {\n        abortEarly: false, // include all errors\n        allowUnknown: true, // ignore unknown props\n        stripUnknown: true, // remove unknown props\n    };\n\n    const { error, value } = schema.validate(req.body, options);\n    if (error) {\n        next(\n            `Validation error: ${error.details\n                .map((x) => x.message)\n                .join(\", \")}`\n        );\n    } else {\n        req.body = value;\n        next();\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/45/validateRequest_45057a96b73bd940f5249869883efa4a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2315",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/validateRequest.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2528,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2525,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "validateRequest",
                "ranges": [
                  {
                    "startOffset": 124,
                    "endOffset": 562,
                    "count": 14
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 481,
                    "endOffset": 495,
                    "count": 3
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const User = require(\"../user/user.model\");\n\nconst jwt = require(\"../../utils/jwt\");\n\nconst bcrypt = require(\"bcrypt\");\n\nconst crypto = require(\"crypto\");\n\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n  /**\n   * refreshtoken\n   * revoketoken\n   * forgotPassword\n   * validateResetToken\n   * validateResetToken\n   * resetPassword\n   */\n  login,\n  register,\n  verifyEmail,\n  create,\n  update,\n  getAll,\n  getById,\n  delete: _delete\n};\n\nasync function login({\n  email,\n  password\n}) {\n  const account = await getAccount({\n    email\n  });\n\n  if (!account || // !account.isVerified ||\n  !(await bcrypt.compare(password, account.password))) {\n    const error = new Error(\"Email or password is incorrect\");\n    throw error;\n  }\n\n  const token = await jwt.sign(account.toJSON());\n  return {\n    user: basicDetails(account),\n    token\n  };\n}\n\nasync function register(params, origin) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    // send already registered error in email to prevent account enumeration\n    // await sendAlreadyRegisteredEmail(params.email, origin);\n    const error = new Error('Email \"' + params.email + '\" is already registered');\n    throw error;\n  }\n\n  const account = await insertUser(params); // send email;\n  // await sendVerificationEmail(account, origin);\n\n  const token = await jwt.sign(account);\n  return {\n    user: account,\n    token\n  };\n}\n\nasync function verifyEmail({\n  token\n}) {\n  const account = await getAccount({\n    verificationToken: token\n  });\n  if (!account) throw \"Verification failed\";\n  await account.$query().patch({\n    verified: Date.now(),\n    isVerified: true,\n    verificationToken: null\n  });\n}\n\nasync function create(params) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    throw 'Email \"' + params.email + '\" is already registered';\n  }\n\n  const account = await insertUser(params); // TODO? bind to company here.\n\n  return basicDetails(account);\n}\n\nasync function update(id, params) {\n  const account = await getAccount({\n    id\n  }); // validate if email was changed\n\n  if (params.email && account.email !== params.email && (await getAccount({\n    email: params.email\n  }))) {\n    const error = new Error(`Email ${params.email} is already taken`);\n    throw error;\n  } // hash password if it was entered\n\n\n  if (params.password) {\n    params.password = await hash(params.password);\n  }\n\n  const updatedUser = await User.query().patchAndFetchById(id, { ...params\n  });\n  return basicDetails(updatedUser);\n} // TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\n\n\nasync function getAll() {\n  const accounts = await User.query();\n  return accounts.map(x => basicDetails(x));\n}\n\nasync function getById(id) {\n  const account = await getAccount({\n    id\n  });\n  return basicDetails(account);\n} // TODO MAKE IT ACCEPT AN ARRAY OF ID\n\n\nasync function _delete(id) {\n  await User.query().deleteById(id);\n}\n/**==================== Helpers ====================== */\n\n\nasync function getAccount(param) {\n  const account = await User.query().where({ ...param\n  }).first();\n  return account;\n}\n\nasync function insertUser(params) {\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    role,\n    phoneNumber\n  } = params; // hash password and verification token\n\n  const hashedPassword = await hash(password, 10);\n  const verificationToken = randomTokenString(); // create account\n\n  const account = await User.query().insert({\n    email,\n    firstName,\n    lastName,\n    password: hashedPassword,\n    phoneNumber,\n    role: role,\n    active: true,\n    isVerified: false,\n    verified: new Date().toISOString(),\n    verificationToken\n  });\n  return basicDetails(account);\n}\n\nasync function hash(password) {\n  return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n  return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  } = account;\n  return {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  };\n}\n\nasync function sendVerificationEmail(account, origin) {\n  let message;\n\n  if (origin) {\n    const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n    message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n  } else {\n    message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n  }\n\n  await sendEmail({\n    to: account.email,\n    subject: \"Sign-up verification API - Verify Email\",\n    html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`\n  });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n  let message;\n\n  if (origin) {\n    message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n  } else {\n    message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n  }\n\n  await sendEmail({\n    to: email,\n    subject: \"Sign-up Verification API - Email Already Registered\",\n    html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguc2VydmljZS5qcyJdLCJuYW1lcyI6WyJVc2VyIiwicmVxdWlyZSIsImp3dCIsImJjcnlwdCIsImNyeXB0byIsInNlbmRFbWFpbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJsb2dpbiIsInJlZ2lzdGVyIiwidmVyaWZ5RW1haWwiLCJjcmVhdGUiLCJ1cGRhdGUiLCJnZXRBbGwiLCJnZXRCeUlkIiwiZGVsZXRlIiwiX2RlbGV0ZSIsImVtYWlsIiwicGFzc3dvcmQiLCJhY2NvdW50IiwiZ2V0QWNjb3VudCIsImNvbXBhcmUiLCJlcnJvciIsIkVycm9yIiwidG9rZW4iLCJzaWduIiwidG9KU09OIiwidXNlciIsImJhc2ljRGV0YWlscyIsInBhcmFtcyIsIm9yaWdpbiIsImluc2VydFVzZXIiLCJ2ZXJpZmljYXRpb25Ub2tlbiIsIiRxdWVyeSIsInBhdGNoIiwidmVyaWZpZWQiLCJEYXRlIiwibm93IiwiaXNWZXJpZmllZCIsImlkIiwiaGFzaCIsInVwZGF0ZWRVc2VyIiwicXVlcnkiLCJwYXRjaEFuZEZldGNoQnlJZCIsImFjY291bnRzIiwibWFwIiwieCIsImRlbGV0ZUJ5SWQiLCJwYXJhbSIsIndoZXJlIiwiZmlyc3QiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInJvbGUiLCJwaG9uZU51bWJlciIsImhhc2hlZFBhc3N3b3JkIiwicmFuZG9tVG9rZW5TdHJpbmciLCJpbnNlcnQiLCJhY3RpdmUiLCJ0b0lTT1N0cmluZyIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJjcmVhdGVkIiwidXBkYXRlZCIsInNlbmRWZXJpZmljYXRpb25FbWFpbCIsIm1lc3NhZ2UiLCJ2ZXJpZnlVcmwiLCJ0byIsInN1YmplY3QiLCJodG1sIiwic2VuZEFscmVhZHlSZWdpc3RlcmVkRW1haWwiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQW5COztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2I7Ozs7Ozs7O0FBUUFDLEVBQUFBLEtBVGE7QUFVYkMsRUFBQUEsUUFWYTtBQVdiQyxFQUFBQSxXQVhhO0FBWWJDLEVBQUFBLE1BWmE7QUFhYkMsRUFBQUEsTUFiYTtBQWNiQyxFQUFBQSxNQWRhO0FBZWJDLEVBQUFBLE9BZmE7QUFnQmJDLEVBQUFBLE1BQU0sRUFBRUM7QUFoQkssQ0FBakI7O0FBbUJBLGVBQWVSLEtBQWYsQ0FBcUI7QUFBRVMsRUFBQUEsS0FBRjtBQUFTQyxFQUFBQTtBQUFULENBQXJCLEVBQTBDO0FBQ3RDLFFBQU1DLE9BQU8sR0FBRyxNQUFNQyxVQUFVLENBQUM7QUFBRUgsSUFBQUE7QUFBRixHQUFELENBQWhDOztBQUVBLE1BQ0ksQ0FBQ0UsT0FBRCxJQUNBO0FBQ0EsSUFBRSxNQUFNaEIsTUFBTSxDQUFDa0IsT0FBUCxDQUFlSCxRQUFmLEVBQXlCQyxPQUFPLENBQUNELFFBQWpDLENBQVIsQ0FISixFQUlFO0FBQ0UsVUFBTUksS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxnQ0FBVixDQUFkO0FBQ0EsVUFBTUQsS0FBTjtBQUNIOztBQUVELFFBQU1FLEtBQUssR0FBRyxNQUFNdEIsR0FBRyxDQUFDdUIsSUFBSixDQUFTTixPQUFPLENBQUNPLE1BQVIsRUFBVCxDQUFwQjtBQUVBLFNBQU87QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxZQUFZLENBQUNULE9BQUQsQ0FEZjtBQUVISyxJQUFBQTtBQUZHLEdBQVA7QUFJSDs7QUFFRCxlQUFlZixRQUFmLENBQXdCb0IsTUFBeEIsRUFBZ0NDLE1BQWhDLEVBQXdDO0FBQ3BDO0FBQ0EsTUFBSSxNQUFNVixVQUFVLENBQUM7QUFBRUgsSUFBQUEsS0FBSyxFQUFFWSxNQUFNLENBQUNaO0FBQWhCLEdBQUQsQ0FBcEIsRUFBK0M7QUFDM0M7QUFDQTtBQUNBLFVBQU1LLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQ1YsWUFBWU0sTUFBTSxDQUFDWixLQUFuQixHQUEyQix5QkFEakIsQ0FBZDtBQUlBLFVBQU1LLEtBQU47QUFDSDs7QUFFRCxRQUFNSCxPQUFPLEdBQUcsTUFBTVksVUFBVSxDQUFDRixNQUFELENBQWhDLENBWm9DLENBY3BDO0FBQ0E7O0FBRUEsUUFBTUwsS0FBSyxHQUFHLE1BQU10QixHQUFHLENBQUN1QixJQUFKLENBQVNOLE9BQVQsQ0FBcEI7QUFFQSxTQUFPO0FBQ0hRLElBQUFBLElBQUksRUFBRVIsT0FESDtBQUVISyxJQUFBQTtBQUZHLEdBQVA7QUFJSDs7QUFFRCxlQUFlZCxXQUFmLENBQTJCO0FBQUVjLEVBQUFBO0FBQUYsQ0FBM0IsRUFBc0M7QUFDbEMsUUFBTUwsT0FBTyxHQUFHLE1BQU1DLFVBQVUsQ0FBQztBQUFFWSxJQUFBQSxpQkFBaUIsRUFBRVI7QUFBckIsR0FBRCxDQUFoQztBQUVBLE1BQUksQ0FBQ0wsT0FBTCxFQUFjLE1BQU0scUJBQU47QUFFZCxRQUFNQSxPQUFPLENBQUNjLE1BQVIsR0FBaUJDLEtBQWpCLENBQXVCO0FBQ3pCQyxJQUFBQSxRQUFRLEVBQUVDLElBQUksQ0FBQ0MsR0FBTCxFQURlO0FBRXpCQyxJQUFBQSxVQUFVLEVBQUUsSUFGYTtBQUd6Qk4sSUFBQUEsaUJBQWlCLEVBQUU7QUFITSxHQUF2QixDQUFOO0FBS0g7O0FBRUQsZUFBZXJCLE1BQWYsQ0FBc0JrQixNQUF0QixFQUE4QjtBQUMxQjtBQUNBLE1BQUksTUFBTVQsVUFBVSxDQUFDO0FBQUVILElBQUFBLEtBQUssRUFBRVksTUFBTSxDQUFDWjtBQUFoQixHQUFELENBQXBCLEVBQStDO0FBQzNDLFVBQU0sWUFBWVksTUFBTSxDQUFDWixLQUFuQixHQUEyQix5QkFBakM7QUFDSDs7QUFFRCxRQUFNRSxPQUFPLEdBQUcsTUFBTVksVUFBVSxDQUFDRixNQUFELENBQWhDLENBTjBCLENBUTFCOztBQUVBLFNBQU9ELFlBQVksQ0FBQ1QsT0FBRCxDQUFuQjtBQUNIOztBQUVELGVBQWVQLE1BQWYsQ0FBc0IyQixFQUF0QixFQUEwQlYsTUFBMUIsRUFBa0M7QUFDOUIsUUFBTVYsT0FBTyxHQUFHLE1BQU1DLFVBQVUsQ0FBQztBQUFFbUIsSUFBQUE7QUFBRixHQUFELENBQWhDLENBRDhCLENBRzlCOztBQUNBLE1BQ0lWLE1BQU0sQ0FBQ1osS0FBUCxJQUNBRSxPQUFPLENBQUNGLEtBQVIsS0FBa0JZLE1BQU0sQ0FBQ1osS0FEekIsS0FFQyxNQUFNRyxVQUFVLENBQUM7QUFBRUgsSUFBQUEsS0FBSyxFQUFFWSxNQUFNLENBQUNaO0FBQWhCLEdBQUQsQ0FGakIsQ0FESixFQUlFO0FBQ0UsVUFBTUssS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVyxTQUFRTSxNQUFNLENBQUNaLEtBQU0sbUJBQWhDLENBQWQ7QUFDQSxVQUFNSyxLQUFOO0FBQ0gsR0FYNkIsQ0FhOUI7OztBQUNBLE1BQUlPLE1BQU0sQ0FBQ1gsUUFBWCxFQUFxQjtBQUNqQlcsSUFBQUEsTUFBTSxDQUFDWCxRQUFQLEdBQWtCLE1BQU1zQixJQUFJLENBQUNYLE1BQU0sQ0FBQ1gsUUFBUixDQUE1QjtBQUNIOztBQUVELFFBQU11QixXQUFXLEdBQUcsTUFBTXpDLElBQUksQ0FBQzBDLEtBQUwsR0FBYUMsaUJBQWIsQ0FBK0JKLEVBQS9CLEVBQW1DLEVBQUUsR0FBR1Y7QUFBTCxHQUFuQyxDQUExQjtBQUVBLFNBQU9ELFlBQVksQ0FBQ2EsV0FBRCxDQUFuQjtBQUNILEMsQ0FFRDs7O0FBQ0EsZUFBZTVCLE1BQWYsR0FBd0I7QUFDcEIsUUFBTStCLFFBQVEsR0FBRyxNQUFNNUMsSUFBSSxDQUFDMEMsS0FBTCxFQUF2QjtBQUNBLFNBQU9FLFFBQVEsQ0FBQ0MsR0FBVCxDQUFjQyxDQUFELElBQU9sQixZQUFZLENBQUNrQixDQUFELENBQWhDLENBQVA7QUFDSDs7QUFFRCxlQUFlaEMsT0FBZixDQUF1QnlCLEVBQXZCLEVBQTJCO0FBQ3ZCLFFBQU1wQixPQUFPLEdBQUcsTUFBTUMsVUFBVSxDQUFDO0FBQUVtQixJQUFBQTtBQUFGLEdBQUQsQ0FBaEM7QUFDQSxTQUFPWCxZQUFZLENBQUNULE9BQUQsQ0FBbkI7QUFDSCxDLENBRUQ7OztBQUNBLGVBQWVILE9BQWYsQ0FBdUJ1QixFQUF2QixFQUEyQjtBQUN2QixRQUFNdkMsSUFBSSxDQUFDMEMsS0FBTCxHQUFhSyxVQUFiLENBQXdCUixFQUF4QixDQUFOO0FBQ0g7QUFFRDs7O0FBQ0EsZUFBZW5CLFVBQWYsQ0FBMEI0QixLQUExQixFQUFpQztBQUM3QixRQUFNN0IsT0FBTyxHQUFHLE1BQU1uQixJQUFJLENBQUMwQyxLQUFMLEdBQ2pCTyxLQURpQixDQUNYLEVBQUUsR0FBR0Q7QUFBTCxHQURXLEVBRWpCRSxLQUZpQixFQUF0QjtBQUdBLFNBQU8vQixPQUFQO0FBQ0g7O0FBRUQsZUFBZVksVUFBZixDQUEwQkYsTUFBMUIsRUFBa0M7QUFDOUIsUUFBTTtBQUFFc0IsSUFBQUEsU0FBRjtBQUFhQyxJQUFBQSxRQUFiO0FBQXVCbkMsSUFBQUEsS0FBdkI7QUFBOEJDLElBQUFBLFFBQTlCO0FBQXdDbUMsSUFBQUEsSUFBeEM7QUFBOENDLElBQUFBO0FBQTlDLE1BQThEekIsTUFBcEUsQ0FEOEIsQ0FHOUI7O0FBQ0EsUUFBTTBCLGNBQWMsR0FBRyxNQUFNZixJQUFJLENBQUN0QixRQUFELEVBQVcsRUFBWCxDQUFqQztBQUNBLFFBQU1jLGlCQUFpQixHQUFHd0IsaUJBQWlCLEVBQTNDLENBTDhCLENBTzlCOztBQUNBLFFBQU1yQyxPQUFPLEdBQUcsTUFBTW5CLElBQUksQ0FBQzBDLEtBQUwsR0FBYWUsTUFBYixDQUFvQjtBQUN0Q3hDLElBQUFBLEtBRHNDO0FBRXRDa0MsSUFBQUEsU0FGc0M7QUFHdENDLElBQUFBLFFBSHNDO0FBSXRDbEMsSUFBQUEsUUFBUSxFQUFFcUMsY0FKNEI7QUFLdENELElBQUFBLFdBTHNDO0FBTXRDRCxJQUFBQSxJQUFJLEVBQUVBLElBTmdDO0FBT3RDSyxJQUFBQSxNQUFNLEVBQUUsSUFQOEI7QUFRdENwQixJQUFBQSxVQUFVLEVBQUUsS0FSMEI7QUFTdENILElBQUFBLFFBQVEsRUFBRSxJQUFJQyxJQUFKLEdBQVd1QixXQUFYLEVBVDRCO0FBVXRDM0IsSUFBQUE7QUFWc0MsR0FBcEIsQ0FBdEI7QUFhQSxTQUFPSixZQUFZLENBQUNULE9BQUQsQ0FBbkI7QUFDSDs7QUFFRCxlQUFlcUIsSUFBZixDQUFvQnRCLFFBQXBCLEVBQThCO0FBQzFCLFNBQU8sTUFBTWYsTUFBTSxDQUFDcUMsSUFBUCxDQUFZdEIsUUFBWixFQUFzQixFQUF0QixDQUFiO0FBQ0g7O0FBRUQsU0FBU3NDLGlCQUFULEdBQTZCO0FBQ3pCLFNBQU9wRCxNQUFNLENBQUN3RCxXQUFQLENBQW1CLEVBQW5CLEVBQXVCQyxRQUF2QixDQUFnQyxLQUFoQyxDQUFQO0FBQ0g7O0FBRUQsU0FBU2pDLFlBQVQsQ0FBc0JULE9BQXRCLEVBQStCO0FBQzNCLFFBQU07QUFDRm9CLElBQUFBLEVBREU7QUFFRlksSUFBQUEsU0FGRTtBQUdGQyxJQUFBQSxRQUhFO0FBSUZuQyxJQUFBQSxLQUpFO0FBS0ZvQyxJQUFBQSxJQUxFO0FBTUZTLElBQUFBLE9BTkU7QUFPRkMsSUFBQUEsT0FQRTtBQVFGekIsSUFBQUE7QUFSRSxNQVNGbkIsT0FUSjtBQVVBLFNBQU87QUFDSG9CLElBQUFBLEVBREc7QUFFSFksSUFBQUEsU0FGRztBQUdIQyxJQUFBQSxRQUhHO0FBSUhuQyxJQUFBQSxLQUpHO0FBS0hvQyxJQUFBQSxJQUxHO0FBTUhTLElBQUFBLE9BTkc7QUFPSEMsSUFBQUEsT0FQRztBQVFIekIsSUFBQUE7QUFSRyxHQUFQO0FBVUg7O0FBRUQsZUFBZTBCLHFCQUFmLENBQXFDN0MsT0FBckMsRUFBOENXLE1BQTlDLEVBQXNEO0FBQ2xELE1BQUltQyxPQUFKOztBQUNBLE1BQUluQyxNQUFKLEVBQVk7QUFDUixVQUFNb0MsU0FBUyxHQUFJLEdBQUVwQyxNQUFPLDRCQUEyQlgsT0FBTyxDQUFDYSxpQkFBa0IsRUFBakY7QUFDQWlDLElBQUFBLE9BQU8sR0FBSTtzQkFDR0MsU0FBVSxLQUFJQSxTQUFVO1NBRHRDO0FBR0gsR0FMRCxNQUtPO0FBQ0hELElBQUFBLE9BQU8sR0FBSTs4QkFDVzlDLE9BQU8sQ0FBQ2EsaUJBQWtCLGFBRGhEO0FBRUg7O0FBRUQsUUFBTTNCLFNBQVMsQ0FBQztBQUNaOEQsSUFBQUEsRUFBRSxFQUFFaEQsT0FBTyxDQUFDRixLQURBO0FBRVptRCxJQUFBQSxPQUFPLEVBQUUseUNBRkc7QUFHWkMsSUFBQUEsSUFBSSxFQUFHOztVQUVMSixPQUFRO0FBTEUsR0FBRCxDQUFmO0FBT0g7O0FBRUQsZUFBZUssMEJBQWYsQ0FBMENyRCxLQUExQyxFQUFpRGEsTUFBakQsRUFBeUQ7QUFDckQsTUFBSW1DLE9BQUo7O0FBQ0EsTUFBSW5DLE1BQUosRUFBWTtBQUNSbUMsSUFBQUEsT0FBTyxHQUFJLGdFQUErRG5DLE1BQU8sc0RBQWpGO0FBQ0gsR0FGRCxNQUVPO0FBQ0htQyxJQUFBQSxPQUFPLEdBQUksK0dBQVg7QUFDSDs7QUFFRCxRQUFNNUQsU0FBUyxDQUFDO0FBQ1o4RCxJQUFBQSxFQUFFLEVBQUVsRCxLQURRO0FBRVptRCxJQUFBQSxPQUFPLEVBQUUscURBRkc7QUFHWkMsSUFBQUEsSUFBSSxFQUFHO3VDQUN3QnBELEtBQU07aUJBQzVCZ0QsT0FBUTtBQUxMLEdBQUQsQ0FBZjtBQU9IIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXNlciA9IHJlcXVpcmUoXCIuLi91c2VyL3VzZXIubW9kZWxcIik7XG5jb25zdCBqd3QgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvand0XCIpO1xuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdFwiKTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBzZW5kRW1haWwgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZW1haWxcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIC8qKlxuICAgICAqIHJlZnJlc2h0b2tlblxuICAgICAqIHJldm9rZXRva2VuXG4gICAgICogZm9yZ290UGFzc3dvcmRcbiAgICAgKiB2YWxpZGF0ZVJlc2V0VG9rZW5cbiAgICAgKiB2YWxpZGF0ZVJlc2V0VG9rZW5cbiAgICAgKiByZXNldFBhc3N3b3JkXG4gICAgICovXG4gICAgbG9naW4sXG4gICAgcmVnaXN0ZXIsXG4gICAgdmVyaWZ5RW1haWwsXG4gICAgY3JlYXRlLFxuICAgIHVwZGF0ZSxcbiAgICBnZXRBbGwsXG4gICAgZ2V0QnlJZCxcbiAgICBkZWxldGU6IF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBsb2dpbih7IGVtYWlsLCBwYXNzd29yZCB9KSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IGdldEFjY291bnQoeyBlbWFpbCB9KTtcblxuICAgIGlmIChcbiAgICAgICAgIWFjY291bnQgfHxcbiAgICAgICAgLy8gIWFjY291bnQuaXNWZXJpZmllZCB8fFxuICAgICAgICAhKGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCBhY2NvdW50LnBhc3N3b3JkKSlcbiAgICApIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoXCJFbWFpbCBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3RcIik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgand0LnNpZ24oYWNjb3VudC50b0pTT04oKSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VyOiBiYXNpY0RldGFpbHMoYWNjb3VudCksXG4gICAgICAgIHRva2VuLFxuICAgIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKHBhcmFtcywgb3JpZ2luKSB7XG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoYXdhaXQgZ2V0QWNjb3VudCh7IGVtYWlsOiBwYXJhbXMuZW1haWwgfSkpIHtcbiAgICAgICAgLy8gc2VuZCBhbHJlYWR5IHJlZ2lzdGVyZWQgZXJyb3IgaW4gZW1haWwgdG8gcHJldmVudCBhY2NvdW50IGVudW1lcmF0aW9uXG4gICAgICAgIC8vIGF3YWl0IHNlbmRBbHJlYWR5UmVnaXN0ZXJlZEVtYWlsKHBhcmFtcy5lbWFpbCwgb3JpZ2luKTtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICAgICAnRW1haWwgXCInICsgcGFyYW1zLmVtYWlsICsgJ1wiIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCdcbiAgICAgICAgKTtcblxuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG5cbiAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgaW5zZXJ0VXNlcihwYXJhbXMpO1xuXG4gICAgLy8gc2VuZCBlbWFpbDtcbiAgICAvLyBhd2FpdCBzZW5kVmVyaWZpY2F0aW9uRW1haWwoYWNjb3VudCwgb3JpZ2luKTtcblxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgand0LnNpZ24oYWNjb3VudCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VyOiBhY2NvdW50LFxuICAgICAgICB0b2tlbixcbiAgICB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlFbWFpbCh7IHRva2VuIH0pIHtcbiAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgZ2V0QWNjb3VudCh7IHZlcmlmaWNhdGlvblRva2VuOiB0b2tlbiB9KTtcblxuICAgIGlmICghYWNjb3VudCkgdGhyb3cgXCJWZXJpZmljYXRpb24gZmFpbGVkXCI7XG5cbiAgICBhd2FpdCBhY2NvdW50LiRxdWVyeSgpLnBhdGNoKHtcbiAgICAgICAgdmVyaWZpZWQ6IERhdGUubm93KCksXG4gICAgICAgIGlzVmVyaWZpZWQ6IHRydWUsXG4gICAgICAgIHZlcmlmaWNhdGlvblRva2VuOiBudWxsLFxuICAgIH0pO1xufVxuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGUocGFyYW1zKSB7XG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoYXdhaXQgZ2V0QWNjb3VudCh7IGVtYWlsOiBwYXJhbXMuZW1haWwgfSkpIHtcbiAgICAgICAgdGhyb3cgJ0VtYWlsIFwiJyArIHBhcmFtcy5lbWFpbCArICdcIiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQnO1xuICAgIH1cblxuICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCBpbnNlcnRVc2VyKHBhcmFtcyk7XG5cbiAgICAvLyBUT0RPPyBiaW5kIHRvIGNvbXBhbnkgaGVyZS5cblxuICAgIHJldHVybiBiYXNpY0RldGFpbHMoYWNjb3VudCk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZShpZCwgcGFyYW1zKSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IGdldEFjY291bnQoeyBpZCB9KTtcblxuICAgIC8vIHZhbGlkYXRlIGlmIGVtYWlsIHdhcyBjaGFuZ2VkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMuZW1haWwgJiZcbiAgICAgICAgYWNjb3VudC5lbWFpbCAhPT0gcGFyYW1zLmVtYWlsICYmXG4gICAgICAgIChhd2FpdCBnZXRBY2NvdW50KHsgZW1haWw6IHBhcmFtcy5lbWFpbCB9KSlcbiAgICApIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoYEVtYWlsICR7cGFyYW1zLmVtYWlsfSBpcyBhbHJlYWR5IHRha2VuYCk7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cblxuICAgIC8vIGhhc2ggcGFzc3dvcmQgaWYgaXQgd2FzIGVudGVyZWRcbiAgICBpZiAocGFyYW1zLnBhc3N3b3JkKSB7XG4gICAgICAgIHBhcmFtcy5wYXNzd29yZCA9IGF3YWl0IGhhc2gocGFyYW1zLnBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkVXNlciA9IGF3YWl0IFVzZXIucXVlcnkoKS5wYXRjaEFuZEZldGNoQnlJZChpZCwgeyAuLi5wYXJhbXMgfSk7XG5cbiAgICByZXR1cm4gYmFzaWNEZXRhaWxzKHVwZGF0ZWRVc2VyKTtcbn1cblxuLy8gVE9ETyBNQUtFIFNPIElUIENBTiBRVUVSWSBGT1IgRElGRkVSRU5UIFRZUEVTIE9GIFVTRVJTXG5hc3luYyBmdW5jdGlvbiBnZXRBbGwoKSB7XG4gICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBVc2VyLnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGFjY291bnRzLm1hcCgoeCkgPT4gYmFzaWNEZXRhaWxzKHgpKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QnlJZChpZCkge1xuICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCBnZXRBY2NvdW50KHsgaWQgfSk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhhY2NvdW50KTtcbn1cblxuLy8gVE9ETyBNQUtFIElUIEFDQ0VQVCBBTiBBUlJBWSBPRiBJRFxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShpZCkge1xuICAgIGF3YWl0IFVzZXIucXVlcnkoKS5kZWxldGVCeUlkKGlkKTtcbn1cblxuLyoqPT09PT09PT09PT09PT09PT09PT0gSGVscGVycyA9PT09PT09PT09PT09PT09PT09PT09ICovXG5hc3luYyBmdW5jdGlvbiBnZXRBY2NvdW50KHBhcmFtKSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IFVzZXIucXVlcnkoKVxuICAgICAgICAud2hlcmUoeyAuLi5wYXJhbSB9KVxuICAgICAgICAuZmlyc3QoKTtcbiAgICByZXR1cm4gYWNjb3VudDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gaW5zZXJ0VXNlcihwYXJhbXMpIHtcbiAgICBjb25zdCB7IGZpcnN0TmFtZSwgbGFzdE5hbWUsIGVtYWlsLCBwYXNzd29yZCwgcm9sZSwgcGhvbmVOdW1iZXIgfSA9IHBhcmFtcztcblxuICAgIC8vIGhhc2ggcGFzc3dvcmQgYW5kIHZlcmlmaWNhdGlvbiB0b2tlblxuICAgIGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgaGFzaChwYXNzd29yZCwgMTApO1xuICAgIGNvbnN0IHZlcmlmaWNhdGlvblRva2VuID0gcmFuZG9tVG9rZW5TdHJpbmcoKTtcblxuICAgIC8vIGNyZWF0ZSBhY2NvdW50XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IFVzZXIucXVlcnkoKS5pbnNlcnQoe1xuICAgICAgICBlbWFpbCxcbiAgICAgICAgZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZSxcbiAgICAgICAgcGFzc3dvcmQ6IGhhc2hlZFBhc3N3b3JkLFxuICAgICAgICBwaG9uZU51bWJlcixcbiAgICAgICAgcm9sZTogcm9sZSxcbiAgICAgICAgYWN0aXZlOiB0cnVlLFxuICAgICAgICBpc1ZlcmlmaWVkOiBmYWxzZSxcbiAgICAgICAgdmVyaWZpZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgdmVyaWZpY2F0aW9uVG9rZW4sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gYmFzaWNEZXRhaWxzKGFjY291bnQpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBoYXNoKHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCAxMCk7XG59XG5cbmZ1bmN0aW9uIHJhbmRvbVRva2VuU3RyaW5nKCkge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoNDApLnRvU3RyaW5nKFwiaGV4XCIpO1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMoYWNjb3VudCkge1xuICAgIGNvbnN0IHtcbiAgICAgICAgaWQsXG4gICAgICAgIGZpcnN0TmFtZSxcbiAgICAgICAgbGFzdE5hbWUsXG4gICAgICAgIGVtYWlsLFxuICAgICAgICByb2xlLFxuICAgICAgICBjcmVhdGVkLFxuICAgICAgICB1cGRhdGVkLFxuICAgICAgICBpc1ZlcmlmaWVkLFxuICAgIH0gPSBhY2NvdW50O1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICBmaXJzdE5hbWUsXG4gICAgICAgIGxhc3ROYW1lLFxuICAgICAgICBlbWFpbCxcbiAgICAgICAgcm9sZSxcbiAgICAgICAgY3JlYXRlZCxcbiAgICAgICAgdXBkYXRlZCxcbiAgICAgICAgaXNWZXJpZmllZCxcbiAgICB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiBzZW5kVmVyaWZpY2F0aW9uRW1haWwoYWNjb3VudCwgb3JpZ2luKSB7XG4gICAgbGV0IG1lc3NhZ2U7XG4gICAgaWYgKG9yaWdpbikge1xuICAgICAgICBjb25zdCB2ZXJpZnlVcmwgPSBgJHtvcmlnaW59L2F1dGgvdmVyaWZ5LWVtYWlsP3Rva2VuPSR7YWNjb3VudC52ZXJpZmljYXRpb25Ub2tlbn1gO1xuICAgICAgICBtZXNzYWdlID0gYDxwPiBQbGVhc2UgY2xpY2sgdGhlIGJlbG93IGxpbmsgdG8gdmVyaWZ5IHlvdXIgZW1haWwgYWRkcmVzczo8L3A+XG4gICAgICAgIDxwPjxhIGhyZWY9XCIke3ZlcmlmeVVybH1cIj4ke3ZlcmlmeVVybH08L2E+PC9wPlxuICAgICAgICBgO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG1lc3NhZ2UgPSBgPHA+UGxlYXNlIHVzZSB0aGUgYmVsb3cgdG9rZW4gdG8gdmVyaWZ5IHlvdXIgZW1haWwgYWRkcmVzcyB3aXRoIHRoZSA8Y29kZT4vYXV0aC92ZXJpZnktZW1haWw8L2NvZGU+IGFwaSByb3V0ZTo8L3A+XG4gICAgICAgICAgICAgICAgICAgPHA+PGNvZGU+JHthY2NvdW50LnZlcmlmaWNhdGlvblRva2VufTwvY29kZT48L3A+YDtcbiAgICB9XG5cbiAgICBhd2FpdCBzZW5kRW1haWwoe1xuICAgICAgICB0bzogYWNjb3VudC5lbWFpbCxcbiAgICAgICAgc3ViamVjdDogXCJTaWduLXVwIHZlcmlmaWNhdGlvbiBBUEkgLSBWZXJpZnkgRW1haWxcIixcbiAgICAgICAgaHRtbDogYDxoND5WZXJpZnkgRW1haWw8L2g0PlxuICAgICAgICA8cD5UaGFua3MgZm9yIHJlZ2lzdGVyaW5nITwvcD5cbiAgICAgICAgJHttZXNzYWdlfWAsXG4gICAgfSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHNlbmRBbHJlYWR5UmVnaXN0ZXJlZEVtYWlsKGVtYWlsLCBvcmlnaW4pIHtcbiAgICBsZXQgbWVzc2FnZTtcbiAgICBpZiAob3JpZ2luKSB7XG4gICAgICAgIG1lc3NhZ2UgPSBgPHA+SWYgeW91IGRvbid0IGtub3cgeW91ciBwYXNzd29yZCBwbGVhc2UgdmlzaXQgdGhlIDxhIGhyZWY9XCIke29yaWdpbn0vYXV0aC9mb3Jnb3QtcGFzc3dvcmRcIj5mb3Jnb3QgcGFzc3dvcmQ8L2E+IHBhZ2UuPC9wPmA7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbWVzc2FnZSA9IGA8cD5JZiB5b3UgZG9uJ3Qga25vdyB5b3VyIHBhc3N3b3JkIHlvdSBjYW4gcmVzZXQgaXQgdmlhIHRoZSA8Y29kZT4vYXV0aC9mb3Jnb3QtcGFzc3dvcmQ8L2NvZGU+IGFwaSByb3V0ZS48L3A+YDtcbiAgICB9XG5cbiAgICBhd2FpdCBzZW5kRW1haWwoe1xuICAgICAgICB0bzogZW1haWwsXG4gICAgICAgIHN1YmplY3Q6IFwiU2lnbi11cCBWZXJpZmljYXRpb24gQVBJIC0gRW1haWwgQWxyZWFkeSBSZWdpc3RlcmVkXCIsXG4gICAgICAgIGh0bWw6IGA8aDQ+RW1haWwgQWxyZWFkeSBSZWdpc3RlcmVkPC9oND5cbiAgICAgICAgICAgICAgIDxwPllvdXIgZW1haWwgPHN0cm9uZz4ke2VtYWlsfTwvc3Ryb25nPiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQuPC9wPlxuICAgICAgICAgICAgICAgJHttZXNzYWdlfWAsXG4gICAgfSk7XG59XG4iXX0=",
            "originalCode": "const User = require(\"../user/user.model\");\nconst jwt = require(\"../../utils/jwt\");\nconst bcrypt = require(\"bcrypt\");\nconst crypto = require(\"crypto\");\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n    /**\n     * refreshtoken\n     * revoketoken\n     * forgotPassword\n     * validateResetToken\n     * validateResetToken\n     * resetPassword\n     */\n    login,\n    register,\n    verifyEmail,\n    create,\n    update,\n    getAll,\n    getById,\n    delete: _delete,\n};\n\nasync function login({ email, password }) {\n    const account = await getAccount({ email });\n\n    if (\n        !account ||\n        // !account.isVerified ||\n        !(await bcrypt.compare(password, account.password))\n    ) {\n        const error = new Error(\"Email or password is incorrect\");\n        throw error;\n    }\n\n    const token = await jwt.sign(account.toJSON());\n\n    return {\n        user: basicDetails(account),\n        token,\n    };\n}\n\nasync function register(params, origin) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        // send already registered error in email to prevent account enumeration\n        // await sendAlreadyRegisteredEmail(params.email, origin);\n        const error = new Error(\n            'Email \"' + params.email + '\" is already registered'\n        );\n\n        throw error;\n    }\n\n    const account = await insertUser(params);\n\n    // send email;\n    // await sendVerificationEmail(account, origin);\n\n    const token = await jwt.sign(account);\n\n    return {\n        user: account,\n        token,\n    };\n}\n\nasync function verifyEmail({ token }) {\n    const account = await getAccount({ verificationToken: token });\n\n    if (!account) throw \"Verification failed\";\n\n    await account.$query().patch({\n        verified: Date.now(),\n        isVerified: true,\n        verificationToken: null,\n    });\n}\n\nasync function create(params) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        throw 'Email \"' + params.email + '\" is already registered';\n    }\n\n    const account = await insertUser(params);\n\n    // TODO? bind to company here.\n\n    return basicDetails(account);\n}\n\nasync function update(id, params) {\n    const account = await getAccount({ id });\n\n    // validate if email was changed\n    if (\n        params.email &&\n        account.email !== params.email &&\n        (await getAccount({ email: params.email }))\n    ) {\n        const error = new Error(`Email ${params.email} is already taken`);\n        throw error;\n    }\n\n    // hash password if it was entered\n    if (params.password) {\n        params.password = await hash(params.password);\n    }\n\n    const updatedUser = await User.query().patchAndFetchById(id, { ...params });\n\n    return basicDetails(updatedUser);\n}\n\n// TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\nasync function getAll() {\n    const accounts = await User.query();\n    return accounts.map((x) => basicDetails(x));\n}\n\nasync function getById(id) {\n    const account = await getAccount({ id });\n    return basicDetails(account);\n}\n\n// TODO MAKE IT ACCEPT AN ARRAY OF ID\nasync function _delete(id) {\n    await User.query().deleteById(id);\n}\n\n/**==================== Helpers ====================== */\nasync function getAccount(param) {\n    const account = await User.query()\n        .where({ ...param })\n        .first();\n    return account;\n}\n\nasync function insertUser(params) {\n    const { firstName, lastName, email, password, role, phoneNumber } = params;\n\n    // hash password and verification token\n    const hashedPassword = await hash(password, 10);\n    const verificationToken = randomTokenString();\n\n    // create account\n    const account = await User.query().insert({\n        email,\n        firstName,\n        lastName,\n        password: hashedPassword,\n        phoneNumber,\n        role: role,\n        active: true,\n        isVerified: false,\n        verified: new Date().toISOString(),\n        verificationToken,\n    });\n\n    return basicDetails(account);\n}\n\nasync function hash(password) {\n    return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n    return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n    const {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    } = account;\n    return {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    };\n}\n\nasync function sendVerificationEmail(account, origin) {\n    let message;\n    if (origin) {\n        const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n        message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n    } else {\n        message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n    }\n\n    await sendEmail({\n        to: account.email,\n        subject: \"Sign-up verification API - Verify Email\",\n        html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`,\n    });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n    let message;\n    if (origin) {\n        message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n    } else {\n        message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n    }\n\n    await sendEmail({\n        to: email,\n        subject: \"Sign-up Verification API - Email Already Registered\",\n        html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`,\n    });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/15/authservice_15139629ee8738726404e916e3a02258.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2316",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 22003,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 22000,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 546,
                    "endOffset": 944,
                    "count": 28
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 946,
                    "endOffset": 1502,
                    "count": 6
                  },
                  {
                    "startOffset": 1055,
                    "endOffset": 1057,
                    "count": 2
                  },
                  {
                    "startOffset": 1057,
                    "endOffset": 1500,
                    "count": 1
                  },
                  {
                    "startOffset": 1500,
                    "endOffset": 1501,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1504,
                    "endOffset": 1779,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1781,
                    "endOffset": 2062,
                    "count": 3
                  },
                  {
                    "startOffset": 1880,
                    "endOffset": 1882,
                    "count": 1
                  },
                  {
                    "startOffset": 1882,
                    "endOffset": 1951,
                    "count": 0
                  },
                  {
                    "startOffset": 1951,
                    "endOffset": 2060,
                    "count": 1
                  },
                  {
                    "startOffset": 2060,
                    "endOffset": 2061,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2064,
                    "endOffset": 2621,
                    "count": 6
                  },
                  {
                    "startOffset": 2149,
                    "endOffset": 2203,
                    "count": 2
                  },
                  {
                    "startOffset": 2203,
                    "endOffset": 2236,
                    "count": 1
                  },
                  {
                    "startOffset": 2237,
                    "endOffset": 2289,
                    "count": 1
                  },
                  {
                    "startOffset": 2291,
                    "endOffset": 2445,
                    "count": 1
                  },
                  {
                    "startOffset": 2445,
                    "endOffset": 2501,
                    "count": 0
                  },
                  {
                    "startOffset": 2501,
                    "endOffset": 2619,
                    "count": 1
                  },
                  {
                    "startOffset": 2619,
                    "endOffset": 2620,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 2682,
                    "endOffset": 2793,
                    "count": 2
                  },
                  {
                    "startOffset": 2746,
                    "endOffset": 2791,
                    "count": 1
                  },
                  {
                    "startOffset": 2791,
                    "endOffset": 2792,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 2769,
                    "endOffset": 2789,
                    "count": 4
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2795,
                    "endOffset": 2907,
                    "count": 2
                  },
                  {
                    "startOffset": 2873,
                    "endOffset": 2905,
                    "count": 1
                  },
                  {
                    "startOffset": 2905,
                    "endOffset": 2906,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2948,
                    "endOffset": 3015,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAccount",
                "ranges": [
                  {
                    "startOffset": 3076,
                    "endOffset": 3198,
                    "count": 30
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "insertUser",
                "ranges": [
                  {
                    "startOffset": 3200,
                    "endOffset": 3791,
                    "count": 6
                  },
                  {
                    "startOffset": 3431,
                    "endOffset": 3789,
                    "count": 2
                  },
                  {
                    "startOffset": 3789,
                    "endOffset": 3790,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "hash",
                "ranges": [
                  {
                    "startOffset": 3793,
                    "endOffset": 3868,
                    "count": 4
                  },
                  {
                    "startOffset": 3866,
                    "endOffset": 3867,
                    "count": 0
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "randomTokenString",
                "ranges": [
                  {
                    "startOffset": 3870,
                    "endOffset": 3951,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 3953,
                    "endOffset": 4226,
                    "count": 15
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendVerificationEmail",
                "ranges": [
                  {
                    "startOffset": 4228,
                    "endOffset": 4965,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendAlreadyRegisteredEmail",
                "ranges": [
                  {
                    "startOffset": 4967,
                    "endOffset": 5605,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst db = require(\"../../db\");\n\nclass User extends Model {\n  static get tableName() {\n    return tableNames.user;\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiVXNlciIsInRhYmxlTmFtZSIsInVzZXIiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLDRCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsSUFBTixTQUFtQkosS0FBbkIsQ0FBeUI7QUFDckIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLElBQWxCO0FBQ0g7O0FBSG9COztBQU16Qk4sS0FBSyxDQUFDTyxJQUFOLENBQVdKLEVBQVg7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vZGJcIik7XG5cbmNsYXNzIFVzZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLnVzZXI7XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyO1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst db = require(\"../../db\");\n\nclass User extends Model {\n    static get tableName() {\n        return tableNames.user;\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = User;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/65/usermodel_65a16864dea2cc43f1cea59fb9ce1a95.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2317",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/user/user.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1454,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1451,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "User",
                "ranges": [
                  {
                    "startOffset": 224,
                    "endOffset": 224,
                    "count": 25
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 260,
                    "endOffset": 309,
                    "count": 80
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  user: \"user\",\n  address: \"address\",\n  company: \"company\",\n  accounts: \"accounts\",\n  category: \"category\",\n  menu: \"menu\",\n  item: \"item\",\n  order: \"order\",\n  orderItem: \"orderItem\",\n  payments: \"payments\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlTmFtZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInVzZXIiLCJhZGRyZXNzIiwiY29tcGFueSIsImFjY291bnRzIiwiY2F0ZWdvcnkiLCJtZW51IiwiaXRlbSIsIm9yZGVyIiwib3JkZXJJdGVtIiwicGF5bWVudHMiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLE1BRE87QUFFYkMsRUFBQUEsT0FBTyxFQUFFLFNBRkk7QUFHYkMsRUFBQUEsT0FBTyxFQUFFLFNBSEk7QUFJYkMsRUFBQUEsUUFBUSxFQUFFLFVBSkc7QUFLYkMsRUFBQUEsUUFBUSxFQUFFLFVBTEc7QUFNYkMsRUFBQUEsSUFBSSxFQUFFLE1BTk87QUFPYkMsRUFBQUEsSUFBSSxFQUFFLE1BUE87QUFRYkMsRUFBQUEsS0FBSyxFQUFFLE9BUk07QUFTYkMsRUFBQUEsU0FBUyxFQUFFLFdBVEU7QUFVYkMsRUFBQUEsUUFBUSxFQUFFO0FBVkcsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICB1c2VyOiBcInVzZXJcIixcbiAgICBhZGRyZXNzOiBcImFkZHJlc3NcIixcbiAgICBjb21wYW55OiBcImNvbXBhbnlcIixcbiAgICBhY2NvdW50czogXCJhY2NvdW50c1wiLFxuICAgIGNhdGVnb3J5OiBcImNhdGVnb3J5XCIsXG4gICAgbWVudTogXCJtZW51XCIsXG4gICAgaXRlbTogXCJpdGVtXCIsXG4gICAgb3JkZXI6IFwib3JkZXJcIixcbiAgICBvcmRlckl0ZW06IFwib3JkZXJJdGVtXCIsXG4gICAgcGF5bWVudHM6IFwicGF5bWVudHNcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    user: \"user\",\n    address: \"address\",\n    company: \"company\",\n    accounts: \"accounts\",\n    category: \"category\",\n    menu: \"menu\",\n    item: \"item\",\n    order: \"order\",\n    orderItem: \"orderItem\",\n    payments: \"payments\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/d1/tableNames_d158fb35bde4ba2feb47fa73fcd1c0db.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2530",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/constants/tableNames.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1435,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1432,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Knex = require(\"knex\");\n\nconst {\n  Model\n} = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\n\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\nconst db = Knex(connectionConfig);\nModel.knex(db);\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIktuZXgiLCJyZXF1aXJlIiwiTW9kZWwiLCJrbmV4RmlsZSIsImVudmlyb25tZW50IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiY29ubmVjdGlvbkNvbmZpZyIsImRiIiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQVlELE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1FLFFBQVEsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBeEI7O0FBQ0EsTUFBTUcsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixhQUE1QztBQUNBLE1BQU1DLGdCQUFnQixHQUFHTCxRQUFRLENBQUNDLFdBQUQsQ0FBakM7QUFFQSxNQUFNSyxFQUFFLEdBQUdULElBQUksQ0FBQ1EsZ0JBQUQsQ0FBZjtBQUVBTixLQUFLLENBQUNRLElBQU4sQ0FBV0QsRUFBWDtBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJILEVBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgS25leCA9IHJlcXVpcmUoXCJrbmV4XCIpO1xuY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcblxuY29uc3Qga25leEZpbGUgPSByZXF1aXJlKFwiLi4va25leGZpbGVcIik7XG5jb25zdCBlbnZpcm9ubWVudCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8IFwiZGV2ZWxvcG1lbnRcIjtcbmNvbnN0IGNvbm5lY3Rpb25Db25maWcgPSBrbmV4RmlsZVtlbnZpcm9ubWVudF07XG5cbmNvbnN0IGRiID0gS25leChjb25uZWN0aW9uQ29uZmlnKTtcblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG4iXX0=",
            "originalCode": "const Knex = require(\"knex\");\nconst { Model } = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\n\nconst db = Knex(connectionConfig);\n\nModel.knex(db);\n\nmodule.exports = db;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/06/db_061f2ffe7a9d03a98dba0f960ecba1d1.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2531",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/db.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1629,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1626,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n  test: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB_TEST,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  development: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  production: {\n    client: \"pg\",\n    connection: process.env.DATABASE_URL,\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhmaWxlLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIiwidGVzdCIsImNsaWVudCIsImNvbm5lY3Rpb24iLCJkYXRhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJQT1NUR1JFU19EQl9URVNUIiwidXNlciIsIlBPU1RHUkVTX1VTRVIiLCJwYXNzd29yZCIsIlBPU1RHUkVTX1BBU1NXT1JEIiwibWlncmF0aW9ucyIsImRpcmVjdG9yeSIsIl9fZGlybmFtZSIsInNlZWRzIiwiZGV2ZWxvcG1lbnQiLCJQT1NUR1JFU19EQiIsInByb2R1Y3Rpb24iLCJEQVRBQkFTRV9VUkwiLCJwb29sIiwibWluIiwibWF4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxNQUFNLEVBQUUsSUFETjtBQUVGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxnQkFGZDtBQUdSQyxNQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxhQUhWO0FBSVJDLE1BQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLO0FBSmQsS0FGVjtBQVFGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUkMsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEZixLQVJWO0FBWUZDLElBQUFBLEtBQUssRUFBRTtBQUNIRixNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURwQjtBQVpMLEdBRE87QUFrQmJFLEVBQUFBLFdBQVcsRUFBRTtBQUNUZCxJQUFBQSxNQUFNLEVBQUUsSUFEQztBQUVUQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVyxXQUZkO0FBR1JULE1BQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGFBSFY7QUFJUkMsTUFBQUEsUUFBUSxFQUFFTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUs7QUFKZCxLQUZIO0FBUVRDLElBQUFBLFVBQVUsRUFBRTtBQUNSQyxNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURmLEtBUkg7QUFZVEMsSUFBQUEsS0FBSyxFQUFFO0FBQ0hGLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRHBCO0FBWkUsR0FsQkE7QUFtQ2JJLEVBQUFBLFVBQVUsRUFBRTtBQUNSaEIsSUFBQUEsTUFBTSxFQUFFLElBREE7QUFFUkMsSUFBQUEsVUFBVSxFQUFFRSxPQUFPLENBQUNDLEdBQVIsQ0FBWWEsWUFGaEI7QUFHUkMsSUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLE1BQUFBLEdBQUcsRUFBRSxDQURIO0FBRUZDLE1BQUFBLEdBQUcsRUFBRTtBQUZILEtBSEU7QUFPUlYsSUFBQUEsVUFBVSxFQUFFO0FBQ1JDLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRGYsS0FQSjtBQVdSQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEYsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEcEI7QUFYQztBQW5DQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVwZGF0ZSB3aXRoIHlvdXIgY29uZmlnIHNldHRpbmdzLlxucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdGVzdDoge1xuICAgICAgICBjbGllbnQ6IFwicGdcIixcbiAgICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICAgICAgLy8gaG9zdDogXCIxMjcuMC4wLjFcIixcbiAgICAgICAgICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5QT1NUR1JFU19EQl9URVNULFxuICAgICAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfVVNFUixcbiAgICAgICAgICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5QT1NUR1JFU19QQVNTV09SRCxcbiAgICAgICAgfSxcbiAgICAgICAgbWlncmF0aW9uczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9taWdyYXRpb25zXCIsXG4gICAgICAgIH0sXG5cbiAgICAgICAgc2VlZHM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvc2VlZHNcIixcbiAgICAgICAgfSxcbiAgICB9LFxuXG4gICAgZGV2ZWxvcG1lbnQ6IHtcbiAgICAgICAgY2xpZW50OiBcInBnXCIsXG4gICAgICAgIGNvbm5lY3Rpb246IHtcbiAgICAgICAgICAgIC8vIGhvc3Q6IFwiMTI3LjAuMC4xXCIsXG4gICAgICAgICAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfREIsXG4gICAgICAgICAgICB1c2VyOiBwcm9jZXNzLmVudi5QT1NUR1JFU19VU0VSLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBPU1RHUkVTX1BBU1NXT1JELFxuICAgICAgICB9LFxuICAgICAgICBtaWdyYXRpb25zOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL21pZ3JhdGlvbnNcIixcbiAgICAgICAgfSxcblxuICAgICAgICBzZWVkczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9zZWVkc1wiLFxuICAgICAgICB9LFxuICAgIH0sXG5cbiAgICBwcm9kdWN0aW9uOiB7XG4gICAgICAgIGNsaWVudDogXCJwZ1wiLFxuICAgICAgICBjb25uZWN0aW9uOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsXG4gICAgICAgIHBvb2w6IHtcbiAgICAgICAgICAgIG1pbjogMixcbiAgICAgICAgICAgIG1heDogMTAsXG4gICAgICAgIH0sXG4gICAgICAgIG1pZ3JhdGlvbnM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvbWlncmF0aW9uc1wiLFxuICAgICAgICB9LFxuXG4gICAgICAgIHNlZWRzOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL3NlZWRzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4iXX0=",
            "originalCode": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n    test: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB_TEST,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    development: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    production: {\n        client: \"pg\",\n        connection: process.env.DATABASE_URL,\n        pool: {\n            min: 2,\n            max: 10,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e2/knexfile_e268b34e213dcf9ff4bbc9c1fff3199f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2763",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/knexfile.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4994,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4991,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n  return new Promise((resolve, reject) => {\n    jwt.sign(payload, process.env.JWT_SECRET, {\n      expiresIn: \"3h\"\n    }, (error, token) => {\n      if (error) return reject(error);\n      return resolve(token);\n    });\n  });\n}\n\nmodule.exports = {\n  sign\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwic2lnbiIsInBheWxvYWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiZXhwaXJlc0luIiwiZXJyb3IiLCJ0b2tlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUEsU0FBU0MsSUFBVCxDQUFjQyxPQUFkLEVBQXVCO0FBQ25CLFNBQU8sSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUNwQ04sSUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQ0lDLE9BREosRUFFSUksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBRmhCLEVBR0k7QUFDSUMsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FISixFQU1JLENBQUNDLEtBQUQsRUFBUUMsS0FBUixLQUFrQjtBQUNkLFVBQUlELEtBQUosRUFBVyxPQUFPTCxNQUFNLENBQUNLLEtBQUQsQ0FBYjtBQUNYLGFBQU9OLE9BQU8sQ0FBQ08sS0FBRCxDQUFkO0FBQ0gsS0FUTDtBQVdILEdBWk0sQ0FBUDtBQWFIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlosRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XG5cbmZ1bmN0aW9uIHNpZ24ocGF5bG9hZCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGp3dC5zaWduKFxuICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZXhwaXJlc0luOiBcIjNoXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgKGVycm9yLCB0b2tlbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUodG9rZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBzaWduLFxufTtcbiJdfQ==",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n    return new Promise((resolve, reject) => {\n        jwt.sign(\n            payload,\n            process.env.JWT_SECRET,\n            {\n                expiresIn: \"3h\",\n            },\n            (error, token) => {\n                if (error) return reject(error);\n                return resolve(token);\n            }\n        );\n    });\n}\n\nmodule.exports = {\n    sign,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/a2/jwt_a2ecd03f3666d6bdf618e5bb010e6f13.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2815",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/jwt.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1961,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sign",
                "ranges": [
                  {
                    "startOffset": 127,
                    "endOffset": 376,
                    "count": 7
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 173,
                    "endOffset": 372,
                    "count": 7
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 273,
                    "endOffset": 366,
                    "count": 7
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const nodemailer = require(\"nodemailer\");\n\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({\n  to,\n  subject,\n  html,\n  from = config[\"emailFrom\"]\n}) {\n  const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n  await transporter.sendMail({\n    from,\n    to,\n    subject,\n    html\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbIm5vZGVtYWlsZXIiLCJyZXF1aXJlIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlbmRFbWFpbCIsInRvIiwic3ViamVjdCIsImh0bWwiLCJmcm9tIiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJzZW5kTWFpbCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxTQUFqQjs7QUFFQSxlQUFlQSxTQUFmLENBQXlCO0FBQUVDLEVBQUFBLEVBQUY7QUFBTUMsRUFBQUEsT0FBTjtBQUFlQyxFQUFBQSxJQUFmO0FBQXFCQyxFQUFBQSxJQUFJLEdBQUdQLE1BQU0sQ0FBQyxXQUFEO0FBQWxDLENBQXpCLEVBQTRFO0FBQ3hFLFFBQU1RLFdBQVcsR0FBR1YsVUFBVSxDQUFDVyxlQUFYLENBQTJCVCxNQUFNLENBQUMsYUFBRCxDQUFqQyxDQUFwQjtBQUNBLFFBQU1RLFdBQVcsQ0FBQ0UsUUFBWixDQUFxQjtBQUFFSCxJQUFBQSxJQUFGO0FBQVFILElBQUFBLEVBQVI7QUFBWUMsSUFBQUEsT0FBWjtBQUFxQkMsSUFBQUE7QUFBckIsR0FBckIsQ0FBTjtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZW1haWxlciA9IHJlcXVpcmUoXCJub2RlbWFpbGVyXCIpO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZShcIi4uL2NvbmZpZy5qc29uXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNlbmRFbWFpbDtcblxuYXN5bmMgZnVuY3Rpb24gc2VuZEVtYWlsKHsgdG8sIHN1YmplY3QsIGh0bWwsIGZyb20gPSBjb25maWdbXCJlbWFpbEZyb21cIl0gfSkge1xuICAgIGNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoY29uZmlnW1wic210cE9wdGlvbnNcIl0pO1xuICAgIGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHsgZnJvbSwgdG8sIHN1YmplY3QsIGh0bWwgfSk7XG59XG4iXX0=",
            "originalCode": "const nodemailer = require(\"nodemailer\");\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({ to, subject, html, from = config[\"emailFrom\"] }) {\n    const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n    await transporter.sendMail({ from, to, subject, html });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/email_4444491566e111edc26f59e95bae5b33.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2906",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/email.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1859,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1856,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendEmail",
                "ranges": [
                  {
                    "startOffset": 204,
                    "endOffset": 441,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nconst User = require(\"../api/user/user.model\");\n\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n  auth,\n  isOwner\n};\n\nfunction auth(roles = []) {\n  if (typeof roles === \"string\") {\n    roles = [roles];\n  }\n\n  return async (req, res, next) => {\n    let token;\n\n    if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer \")) {\n      token = req.headers.authorization.split(\"Bearer \")[1];\n    } else {\n      return res.status(403).json({\n        message: \"Token not found, access denied\"\n      });\n    } // verify token and account\n\n\n    try {\n      const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n      const user = await User.query().where({\n        id: decodedToken.id\n      }).first();\n\n      if (!user || roles.length && !roles.includes(decodedToken.role)) {\n        // account does not exist or role not authorized\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      } // authentication and authorization successful\n\n\n      req.user = decodedToken;\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nfunction isOwner() {\n  return async (req, res, next) => {\n    try {\n      const bool = await Company.query().where({\n        owner_id: req.user.id,\n        company_id: req.params.company_id\n      }).first();\n\n      if (!bool) {\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      }\n\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJDb21wYW55IiwibW9kdWxlIiwiZXhwb3J0cyIsImF1dGgiLCJpc093bmVyIiwicm9sZXMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInN0YXJ0c1dpdGgiLCJzcGxpdCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZGVjb2RlZFRva2VuIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJ1c2VyIiwicXVlcnkiLCJ3aGVyZSIsImlkIiwiZmlyc3QiLCJsZW5ndGgiLCJpbmNsdWRlcyIsInJvbGUiLCJlcnJvciIsImJvb2wiLCJvd25lcl9pZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsOEJBQUQsQ0FBdkI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQURhO0FBRWJDLEVBQUFBO0FBRmEsQ0FBakI7O0FBS0EsU0FBU0QsSUFBVCxDQUFjRSxLQUFLLEdBQUcsRUFBdEIsRUFBMEI7QUFDdEIsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzNCQSxJQUFBQSxLQUFLLEdBQUcsQ0FBQ0EsS0FBRCxDQUFSO0FBQ0g7O0FBRUQsU0FBTyxPQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUlDLEtBQUo7O0FBQ0EsUUFDSUgsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosSUFDQUwsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLFVBQTFCLENBQXFDLFNBQXJDLENBRkosRUFHRTtBQUNFSCxNQUFBQSxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxhQUFaLENBQTBCRSxLQUExQixDQUFnQyxTQUFoQyxFQUEyQyxDQUEzQyxDQUFSO0FBQ0gsS0FMRCxNQUtPO0FBQ0gsYUFBT04sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLFFBQUFBLE9BQU8sRUFBRTtBQURlLE9BQXJCLENBQVA7QUFHSCxLQVg0QixDQWE3Qjs7O0FBQ0EsUUFBSTtBQUNBLFlBQU1DLFlBQVksR0FBR3BCLEdBQUcsQ0FBQ3FCLE1BQUosQ0FBV1QsS0FBWCxFQUFrQlUsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLENBQXJCO0FBRUEsWUFBTUMsSUFBSSxHQUFHLE1BQU12QixJQUFJLENBQUN3QixLQUFMLEdBQ2RDLEtBRGMsQ0FDUjtBQUFFQyxRQUFBQSxFQUFFLEVBQUVSLFlBQVksQ0FBQ1E7QUFBbkIsT0FEUSxFQUVkQyxLQUZjLEVBQW5COztBQUlBLFVBQUksQ0FBQ0osSUFBRCxJQUFVakIsS0FBSyxDQUFDc0IsTUFBTixJQUFnQixDQUFDdEIsS0FBSyxDQUFDdUIsUUFBTixDQUFlWCxZQUFZLENBQUNZLElBQTVCLENBQS9CLEVBQW1FO0FBQy9EO0FBQ0EsZUFBT3RCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSCxPQVZELENBWUE7OztBQUNBVixNQUFBQSxHQUFHLENBQUNnQixJQUFKLEdBQVdMLFlBQVg7QUFDQVQsTUFBQUEsSUFBSTtBQUNQLEtBZkQsQ0FlRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaENEO0FBaUNIOztBQUVELFNBQVMxQixPQUFULEdBQW1CO0FBQ2YsU0FBTyxPQUFPRSxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUk7QUFDQSxZQUFNdUIsSUFBSSxHQUFHLE1BQU0vQixPQUFPLENBQUN1QixLQUFSLEdBQ2RDLEtBRGMsQ0FDUjtBQUNIUSxRQUFBQSxRQUFRLEVBQUUxQixHQUFHLENBQUNnQixJQUFKLENBQVNHLEVBRGhCO0FBRUhRLFFBQUFBLFVBQVUsRUFBRTNCLEdBQUcsQ0FBQzRCLE1BQUosQ0FBV0Q7QUFGcEIsT0FEUSxFQUtkUCxLQUxjLEVBQW5COztBQU9BLFVBQUksQ0FBQ0ssSUFBTCxFQUFXO0FBQ1AsZUFBT3hCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSDs7QUFDRFIsTUFBQUEsSUFBSTtBQUNQLEtBWkQsQ0FZRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaEJEO0FBaUJIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKFwiLi4vYXBpL3VzZXIvdXNlci5tb2RlbFwiKTtcbmNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vYXBpL2NvbXBhbnkvY29tcGFueS5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYXV0aCxcbiAgICBpc093bmVyLFxufTtcblxuZnVuY3Rpb24gYXV0aChyb2xlcyA9IFtdKSB7XG4gICAgaWYgKHR5cGVvZiByb2xlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByb2xlcyA9IFtyb2xlc107XG4gICAgfVxuXG4gICAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICBsZXQgdG9rZW47XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24gJiZcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3RhcnRzV2l0aChcIkJlYXJlciBcIilcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCJCZWFyZXIgXCIpWzFdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlRva2VuIG5vdCBmb3VuZCwgYWNjZXNzIGRlbmllZFwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB2ZXJpZnkgdG9rZW4gYW5kIGFjY291bnRcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xuXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5xdWVyeSgpXG4gICAgICAgICAgICAgICAgLndoZXJlKHsgaWQ6IGRlY29kZWRUb2tlbi5pZCB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIXVzZXIgfHwgKHJvbGVzLmxlbmd0aCAmJiAhcm9sZXMuaW5jbHVkZXMoZGVjb2RlZFRva2VuLnJvbGUpKSkge1xuICAgICAgICAgICAgICAgIC8vIGFjY291bnQgZG9lcyBub3QgZXhpc3Qgb3Igcm9sZSBub3QgYXV0aG9yaXplZFxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdXRob3JpemVkXCIgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGF1dGhlbnRpY2F0aW9uIGFuZCBhdXRob3JpemF0aW9uIHN1Y2Nlc3NmdWxcbiAgICAgICAgICAgIHJlcS51c2VyID0gZGVjb2RlZFRva2VuO1xuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBpc093bmVyKCkge1xuICAgIHJldHVybiBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGJvb2wgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KClcbiAgICAgICAgICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgICAgICAgICBvd25lcl9pZDogcmVxLnVzZXIuaWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIWJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuIl19",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\nconst User = require(\"../api/user/user.model\");\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n    auth,\n    isOwner,\n};\n\nfunction auth(roles = []) {\n    if (typeof roles === \"string\") {\n        roles = [roles];\n    }\n\n    return async (req, res, next) => {\n        let token;\n        if (\n            req.headers.authorization &&\n            req.headers.authorization.startsWith(\"Bearer \")\n        ) {\n            token = req.headers.authorization.split(\"Bearer \")[1];\n        } else {\n            return res.status(403).json({\n                message: \"Token not found, access denied\",\n            });\n        }\n\n        // verify token and account\n        try {\n            const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n\n            const user = await User.query()\n                .where({ id: decodedToken.id })\n                .first();\n\n            if (!user || (roles.length && !roles.includes(decodedToken.role))) {\n                // account does not exist or role not authorized\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            // authentication and authorization successful\n            req.user = decodedToken;\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n\nfunction isOwner() {\n    return async (req, res, next) => {\n        try {\n            const bool = await Company.query()\n                .where({\n                    owner_id: req.user.id,\n                    company_id: req.params.company_id,\n                })\n                .first();\n\n            if (!bool) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c1/auth_c11b599cb8ed1c90504edcca0550628f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2940",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/auth.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7297,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7294,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "auth",
                "ranges": [
                  {
                    "startOffset": 275,
                    "endOffset": 1253,
                    "count": 28
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 1250,
                    "count": 10
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 1255,
                    "endOffset": 1643,
                    "count": 3
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1285,
                    "endOffset": 1640,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n  static get tableName() {\n    return tableNames.company;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const User = require(\"../user/user.model\");\n\n    const Account = require(\"./accounts/accounts.model\");\n\n    const Menu = require(\"./menu/menu.model\");\n\n    return {\n      owner: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.company}.owner_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      accounts: {\n        relation: Model.HasManyRelation,\n        modelClass: Account,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.accounts}.company_id`\n        }\n      },\n      menus: {\n        relation: Model.HasManyRelation,\n        modelClass: Menu,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.menu}.company_id`\n        }\n      }\n    };\n  }\n\n}\n\nmodule.exports = Company;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsInNjaGVtYSIsIkNvbXBhbnkiLCJ0YWJsZU5hbWUiLCJjb21wYW55IiwianNvblNjaGVtYSIsInJlbGF0aW9uTWFwcGluZ3MiLCJVc2VyIiwiQWNjb3VudCIsIk1lbnUiLCJvd25lciIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsInVzZXIiLCJhY2NvdW50cyIsIkhhc01hbnlSZWxhdGlvbiIsIm1lbnVzIiwibWVudSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyw0QkFBRCxDQUExQjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxNQUFNRyxPQUFOLFNBQXNCSixLQUF0QixDQUE0QjtBQUN4QixhQUFXSyxTQUFYLEdBQXVCO0FBQ25CLFdBQU9ILFVBQVUsQ0FBQ0ksT0FBbEI7QUFDSDs7QUFFRCxhQUFXQyxVQUFYLEdBQXdCO0FBQ3BCLFdBQU9KLE1BQVA7QUFDSDs7QUFFRCxhQUFXSyxnQkFBWCxHQUE4QjtBQUMxQjtBQUNBLFVBQU1DLElBQUksR0FBR1IsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLFVBQU1TLE9BQU8sR0FBR1QsT0FBTyxDQUFDLDJCQUFELENBQXZCOztBQUNBLFVBQU1VLElBQUksR0FBR1YsT0FBTyxDQUFDLG1CQUFELENBQXBCOztBQUVBLFdBQU87QUFDSFcsTUFBQUEsS0FBSyxFQUFFO0FBQ0hDLFFBQUFBLFFBQVEsRUFBRWIsS0FBSyxDQUFDYyxvQkFEYjtBQUVIQyxRQUFBQSxVQUFVLEVBQUVOLElBRlQ7QUFHSE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZixVQUFVLENBQUNJLE9BQVEsV0FEMUI7QUFFRlksVUFBQUEsRUFBRSxFQUFHLEdBQUVoQixVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEgsT0FESjtBQVNIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURWO0FBRU5OLFFBQUFBLFVBQVUsRUFBRUwsT0FGTjtBQUdOTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ2tCLFFBQVM7QUFGekI7QUFIQSxPQVRQO0FBaUJIRSxNQUFBQSxLQUFLLEVBQUU7QUFDSFQsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURiO0FBRUhOLFFBQUFBLFVBQVUsRUFBRUosSUFGVDtBQUdISyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ3FCLElBQUs7QUFGckI7QUFISDtBQWpCSixLQUFQO0FBMEJIOztBQXpDdUI7O0FBNEM1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckIsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2NvbXBhbnkuc2NoZW1hLmpzb25cIik7XG5cbmNsYXNzIENvbXBhbnkgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLmNvbXBhbnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgQWNjb3VudCA9IHJlcXVpcmUoXCIuL2FjY291bnRzL2FjY291bnRzLm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvd25lcjoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBVc2VyLFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5vd25lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFjY291bnRzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBBY2NvdW50LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmFjY291bnRzfS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1lbnVzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBNZW51LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLm1lbnV9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wYW55O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n    static get tableName() {\n        return tableNames.company;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const User = require(\"../user/user.model\");\n        const Account = require(\"./accounts/accounts.model\");\n        const Menu = require(\"./menu/menu.model\");\n\n        return {\n            owner: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.company}.owner_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            accounts: {\n                relation: Model.HasManyRelation,\n                modelClass: Account,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.accounts}.company_id`,\n                },\n            },\n            menus: {\n                relation: Model.HasManyRelation,\n                modelClass: Menu,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.menu}.company_id`,\n                },\n            },\n        };\n    }\n}\n\nmodule.exports = Company;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8b/companymodel_8b713279ce3af8b604431fcbf24964b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2941",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5514,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5511,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Company",
                "ranges": [
                  {
                    "startOffset": 241,
                    "endOffset": 241,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 280,
                    "endOffset": 332,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 343,
                    "endOffset": 384,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 395,
                    "endOffset": 1298,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  admin: \"admin\",\n  owner: \"owner\",\n  customer: \"customer\",\n  staff: \"staff\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFkbWluIiwib3duZXIiLCJjdXN0b21lciIsInN0YWZmIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLEtBQUssRUFBRSxPQURNO0FBRWJDLEVBQUFBLEtBQUssRUFBRSxPQUZNO0FBR2JDLEVBQUFBLFFBQVEsRUFBRSxVQUhHO0FBSWJDLEVBQUFBLEtBQUssRUFBRTtBQUpNLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYWRtaW46IFwiYWRtaW5cIixcbiAgICBvd25lcjogXCJvd25lclwiLFxuICAgIGN1c3RvbWVyOiBcImN1c3RvbWVyXCIsXG4gICAgc3RhZmY6IFwic3RhZmZcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    admin: \"admin\",\n    owner: \"owner\",\n    customer: \"customer\",\n    staff: \"staff\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c3/role_c386996d0c7428ed82a7fa0a3ec37236.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2942",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/role.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 789,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 786,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./company.validators\");\n\nconst companyService = require(\"./company.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nconst {\n  scopedItems\n} = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\n\nconst Menu = require(\"./menu/menu.routes\");\n\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/1/accounts\n\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.owner_id = req.user.id;\n  companyService.create(req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n  companyService.getAllCompanies().then(companies => {\n    res.json(scopedItems(req.user, companies));\n  }).catch(next);\n}\n\nfunction getMyCompanies(req, res, next) {\n  companyService.getMyCompanies(req.user.id).then(companies => companies ? res.json(companies) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyById(req, res, next) {\n  // owner can get his company and the admin can get any company\n  companyService.getCompanyById(req.params.id).then(company => {\n    if (company.owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    res.json(company);\n  }).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company\n  companyService.updateCompany({\n    id: req.params.id,\n    owner_id: req.user.id\n  }, req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n  // only owner delete can delete their company\n  companyService._delete({\n    id: parseInt(req.params.id),\n    owner_id: req.user.id\n  }).then(() => {\n    res.json({\n      id: parseInt(req.params.id)\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./company.validators\");\nconst companyService = require(\"./company.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\nconst { scopedItems } = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\nconst Menu = require(\"./menu/menu.routes\");\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/1/accounts\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.owner_id = req.user.id;\n    companyService\n        .create(req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n    companyService\n        .getAllCompanies()\n        .then((companies) => {\n            res.json(scopedItems(req.user, companies));\n        })\n        .catch(next);\n}\nfunction getMyCompanies(req, res, next) {\n    companyService\n        .getMyCompanies(req.user.id)\n        .then((companies) =>\n            companies ? res.json(companies) : res.sendStatus(404)\n        )\n        .catch(next);\n}\nfunction getCompanyById(req, res, next) {\n    // owner can get his company and the admin can get any company\n    companyService\n        .getCompanyById(req.params.id)\n        .then((company) => {\n            if (\n                company.owner_id !== req.user.id &&\n                req.user.role !== Role.admin\n            ) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            res.json(company);\n        })\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company\n    companyService\n        .updateCompany({ id: req.params.id, owner_id: req.user.id }, req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n    // only owner delete can delete their company\n    companyService\n        ._delete({ id: parseInt(req.params.id), owner_id: req.user.id })\n        .then(() => {\n            res.json({ id: parseInt(req.params.id) });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2a/companyroutes_2accae81b914ebc49b8ad824faf130cd.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2943",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 11663,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 11660,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1186,
                    "endOffset": 1338,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1340,
                    "endOffset": 1505,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1507,
                    "endOffset": 1681,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1683,
                    "endOffset": 2058,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2060,
                    "endOffset": 2281,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteCompany",
                "ranges": [
                  {
                    "startOffset": 2283,
                    "endOffset": 2553,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    logo_url: Joi.string(),\n    website_url: Joi.string(),\n    email: Joi.string().email().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    owner: Joi.number().empty(\"\"),\n    logo_url: Joi.string().empty(\"\"),\n    website_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJkZXNjcmlwdGlvbiIsImxvZ29fdXJsIiwid2Vic2l0ZV91cmwiLCJlbWFpbCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiLCJvd25lciIsIm51bWJlciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyxvQ0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsUUFBUSxFQUFFZCxHQUFHLENBQUNXLE1BQUosRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosRUFKUztBQUt0QkssSUFBQUEsS0FBSyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFLLEtBQWIsR0FBcUJKLFFBQXJCO0FBTGUsR0FBWCxDQUFmO0FBT0FWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQ7O0FBV0FMLE9BQU8sQ0FBQ2MsWUFBUixHQUF1QixDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNVyxXQUFXLEdBQUc7QUFDaEJSLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQk4sSUFBQUEsV0FBVyxFQUFFYixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQixDQUZHO0FBR2hCSCxJQUFBQSxLQUFLLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYUssS0FBYixHQUFxQkcsS0FBckIsQ0FBMkIsRUFBM0IsQ0FIUztBQUloQkMsSUFBQUEsS0FBSyxFQUFFcEIsR0FBRyxDQUFDcUIsTUFBSixHQUFhRixLQUFiLENBQW1CLEVBQW5CLENBSlM7QUFLaEJMLElBQUFBLFFBQVEsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FMTTtBQU1oQkosSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQjtBQU5HLEdBQXBCO0FBU0EsUUFBTVgsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV1MsV0FBWCxDQUFmO0FBRUFoQixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQWJEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBsb2dvX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICB3ZWJzaXRlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIG93bmVyOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGxvZ29fdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIHdlYnNpdGVfdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        logo_url: Joi.string(),\n        website_url: Joi.string(),\n        email: Joi.string().email().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        owner: Joi.number().empty(\"\"),\n        logo_url: Joi.string().empty(\"\"),\n        website_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/3c/companyvalidators_3ce01f397e22205413767a4933ebdfd8.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2944",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4153,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4150,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 489,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 515,
                    "endOffset": 878,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Company = require(\"../company/company.model\");\n\nconst error = require(\"../../utils/error\");\n\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n  create,\n  updateCompany,\n  getAllCompanies,\n  getMyCompanies,\n  getCompanyById,\n  _delete\n};\n\nasync function create(params) {\n  // validate if company name exists\n  if (await getCompany({\n    name: params.name\n  })) {\n    error('Name \"' + params.name + '\" is already registered');\n  }\n\n  const company = await Company.query().insert(params);\n  return company;\n}\n\nasync function updateCompany(queryParams, params) {\n  const company = await getCompany({ ...queryParams\n  });\n\n  if (!company) {\n    error(\"Unauthorized\");\n  } // validate if name was changed\n\n\n  if (params.name && company.name !== params.name && (await getCompany({\n    name: params.name\n  }))) {\n    error(`Name ${params.name} is already taken`);\n  }\n\n  const updatedCompany = await Company.query().patchAndFetchById(queryParams.id, { ...params\n  });\n  return updatedCompany;\n}\n\nasync function getAllCompanies() {\n  const companies = await Company.query();\n  return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n  const companies = await Company.query().where({\n    owner_id: ownerId\n  });\n  return companies;\n}\n\nasync function getCompanyById(id) {\n  const company = await getCompany({\n    id\n  });\n  return company;\n}\n\nasync function _delete(queryParams) {\n  const tobeDeleted = await getCompany(queryParams);\n\n  if (tobeDeleted) {\n    return await Company.query().delete().where({ ...queryParams\n    });\n  }\n\n  return error(\"Forbidden\");\n} // async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCompany(param) {\n  const company = await Company.query().where({ ...param\n  }).first();\n  return company;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJDb21wYW55IiwicmVxdWlyZSIsImVycm9yIiwiY3JlYXRlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlIiwidXBkYXRlQ29tcGFueSIsImdldEFsbENvbXBhbmllcyIsImdldE15Q29tcGFuaWVzIiwiZ2V0Q29tcGFueUJ5SWQiLCJfZGVsZXRlIiwicGFyYW1zIiwiZ2V0Q29tcGFueSIsIm5hbWUiLCJjb21wYW55IiwicXVlcnkiLCJpbnNlcnQiLCJxdWVyeVBhcmFtcyIsInVwZGF0ZWRDb21wYW55IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJpZCIsImNvbXBhbmllcyIsIm93bmVySWQiLCJ3aGVyZSIsIm93bmVyX2lkIiwidG9iZURlbGV0ZWQiLCJkZWxldGUiLCJwYXJhbSIsImZpcnN0Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQywwQkFBRCxDQUF2Qjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUFyQjs7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsTUFEYTtBQUViQyxFQUFBQSxhQUZhO0FBR2JDLEVBQUFBLGVBSGE7QUFJYkMsRUFBQUEsY0FKYTtBQUtiQyxFQUFBQSxjQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsTUFBZixDQUFzQk0sTUFBdEIsRUFBOEI7QUFDMUI7QUFDQSxNQUFJLE1BQU1DLFVBQVUsQ0FBQztBQUFFQyxJQUFBQSxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0U7QUFBZixHQUFELENBQXBCLEVBQTZDO0FBQ3pDWixJQUFBQSxLQUFLLENBQUMsV0FBV1UsTUFBTSxDQUFDRSxJQUFsQixHQUF5Qix5QkFBMUIsQ0FBTDtBQUNIOztBQUVELFFBQU1DLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQWdCQyxNQUFoQixDQUF1QkwsTUFBdkIsQ0FBdEI7QUFDQSxTQUFPRyxPQUFQO0FBQ0g7O0FBRUQsZUFBZVIsYUFBZixDQUE2QlcsV0FBN0IsRUFBMENOLE1BQTFDLEVBQWtEO0FBQzlDLFFBQU1HLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUMsRUFBRSxHQUFHSztBQUFMLEdBQUQsQ0FBaEM7O0FBRUEsTUFBSSxDQUFDSCxPQUFMLEVBQWM7QUFDVmIsSUFBQUEsS0FBSyxDQUFDLGNBQUQsQ0FBTDtBQUNILEdBTDZDLENBTzlDOzs7QUFDQSxNQUNJVSxNQUFNLENBQUNFLElBQVAsSUFDQUMsT0FBTyxDQUFDRCxJQUFSLEtBQWlCRixNQUFNLENBQUNFLElBRHhCLEtBRUMsTUFBTUQsVUFBVSxDQUFDO0FBQUVDLElBQUFBLElBQUksRUFBRUYsTUFBTSxDQUFDRTtBQUFmLEdBQUQsQ0FGakIsQ0FESixFQUlFO0FBQ0VaLElBQUFBLEtBQUssQ0FBRSxRQUFPVSxNQUFNLENBQUNFLElBQUssbUJBQXJCLENBQUw7QUFDSDs7QUFFRCxRQUFNSyxjQUFjLEdBQUcsTUFBTW5CLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JJLGlCQUFoQixDQUN6QkYsV0FBVyxDQUFDRyxFQURhLEVBRXpCLEVBQ0ksR0FBR1Q7QUFEUCxHQUZ5QixDQUE3QjtBQU9BLFNBQU9PLGNBQVA7QUFDSDs7QUFFRCxlQUFlWCxlQUFmLEdBQWlDO0FBQzdCLFFBQU1jLFNBQVMsR0FBRyxNQUFNdEIsT0FBTyxDQUFDZ0IsS0FBUixFQUF4QjtBQUNBLFNBQU9NLFNBQVA7QUFDSDs7QUFFRCxlQUFlYixjQUFmLENBQThCYyxPQUE5QixFQUF1QztBQUNuQyxRQUFNRCxTQUFTLEdBQUcsTUFBTXRCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JRLEtBQWhCLENBQXNCO0FBQzFDQyxJQUFBQSxRQUFRLEVBQUVGO0FBRGdDLEdBQXRCLENBQXhCO0FBR0EsU0FBT0QsU0FBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsQ0FBOEJXLEVBQTlCLEVBQWtDO0FBQzlCLFFBQU1OLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUM7QUFBRVEsSUFBQUE7QUFBRixHQUFELENBQWhDO0FBQ0EsU0FBT04sT0FBUDtBQUNIOztBQUVELGVBQWVKLE9BQWYsQ0FBdUJPLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU1RLFdBQVcsR0FBRyxNQUFNYixVQUFVLENBQUNLLFdBQUQsQ0FBcEM7O0FBRUEsTUFBSVEsV0FBSixFQUFpQjtBQUNiLFdBQU8sTUFBTTFCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FDUlcsTUFEUSxHQUVSSCxLQUZRLENBRUYsRUFBRSxHQUFHTjtBQUFMLEtBRkUsQ0FBYjtBQUdIOztBQUVELFNBQU9oQixLQUFLLENBQUMsV0FBRCxDQUFaO0FBQ0gsQyxDQUVEO0FBQ0E7QUFDQTtBQUVBO0FBRUE7OztBQUVBLGVBQWVXLFVBQWYsQ0FBMEJlLEtBQTFCLEVBQWlDO0FBQzdCLFFBQU1iLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQ2pCUSxLQURpQixDQUNYLEVBQUUsR0FBR0k7QUFBTCxHQURXLEVBRWpCQyxLQUZpQixFQUF0QjtBQUdBLFNBQU9kLE9BQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vY29tcGFueS9jb21wYW55Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5jb25zdCBjcmVhdGVFcnJvciA9IHJlcXVpcmUoXCJodHRwLWVycm9yc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlLFxuICAgIHVwZGF0ZUNvbXBhbnksXG4gICAgZ2V0QWxsQ29tcGFuaWVzLFxuICAgIGdldE15Q29tcGFuaWVzLFxuICAgIGdldENvbXBhbnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGUocGFyYW1zKSB7XG4gICAgLy8gdmFsaWRhdGUgaWYgY29tcGFueSBuYW1lIGV4aXN0c1xuICAgIGlmIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpIHtcbiAgICAgICAgZXJyb3IoJ05hbWUgXCInICsgcGFyYW1zLm5hbWUgKyAnXCIgaXMgYWxyZWFkeSByZWdpc3RlcmVkJyk7XG4gICAgfVxuXG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5pbnNlcnQocGFyYW1zKTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlQ29tcGFueShxdWVyeVBhcmFtcywgcGFyYW1zKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyAuLi5xdWVyeVBhcmFtcyB9KTtcblxuICAgIGlmICghY29tcGFueSkge1xuICAgICAgICBlcnJvcihcIlVuYXV0aG9yaXplZFwiKTtcbiAgICB9XG5cbiAgICAvLyB2YWxpZGF0ZSBpZiBuYW1lIHdhcyBjaGFuZ2VkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjb21wYW55Lm5hbWUgIT09IHBhcmFtcy5uYW1lICYmXG4gICAgICAgIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBOYW1lICR7cGFyYW1zLm5hbWV9IGlzIGFscmVhZHkgdGFrZW5gKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkQ29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5wYXRjaEFuZEZldGNoQnlJZChcbiAgICAgICAgcXVlcnlQYXJhbXMuaWQsXG4gICAgICAgIHtcbiAgICAgICAgICAgIC4uLnBhcmFtcyxcbiAgICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gdXBkYXRlZENvbXBhbnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbmllcygpIHtcbiAgICBjb25zdCBjb21wYW5pZXMgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNvbXBhbmllcztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TXlDb21wYW5pZXMob3duZXJJZCkge1xuICAgIGNvbnN0IGNvbXBhbmllcyA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS53aGVyZSh7XG4gICAgICAgIG93bmVyX2lkOiBvd25lcklkLFxuICAgIH0pO1xuICAgIHJldHVybiBjb21wYW5pZXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnlCeUlkKGlkKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyBpZCB9KTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGNvbnN0IHRvYmVEZWxldGVkID0gYXdhaXQgZ2V0Q29tcGFueShxdWVyeVBhcmFtcyk7XG5cbiAgICBpZiAodG9iZURlbGV0ZWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IENvbXBhbnkucXVlcnkoKVxuICAgICAgICAgICAgLmRlbGV0ZSgpXG4gICAgICAgICAgICAud2hlcmUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXJyb3IoXCJGb3JiaWRkZW5cIik7XG59XG5cbi8vIGFzeW5jIGZ1bmN0aW9uIF9zb2Z0RGVsZXRlKGlkKSB7XG4vL21hcmsgYXMgaW5hY3RpdmVcbi8vICBhd2FpdCBDb21wYW55LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnkocGFyYW0pIHtcbiAgICBjb25zdCBjb21wYW55ID0gYXdhaXQgQ29tcGFueS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBjb21wYW55O1xufVxuIl19",
            "originalCode": "const Company = require(\"../company/company.model\");\nconst error = require(\"../../utils/error\");\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n    create,\n    updateCompany,\n    getAllCompanies,\n    getMyCompanies,\n    getCompanyById,\n    _delete,\n};\n\nasync function create(params) {\n    // validate if company name exists\n    if (await getCompany({ name: params.name })) {\n        error('Name \"' + params.name + '\" is already registered');\n    }\n\n    const company = await Company.query().insert(params);\n    return company;\n}\n\nasync function updateCompany(queryParams, params) {\n    const company = await getCompany({ ...queryParams });\n\n    if (!company) {\n        error(\"Unauthorized\");\n    }\n\n    // validate if name was changed\n    if (\n        params.name &&\n        company.name !== params.name &&\n        (await getCompany({ name: params.name }))\n    ) {\n        error(`Name ${params.name} is already taken`);\n    }\n\n    const updatedCompany = await Company.query().patchAndFetchById(\n        queryParams.id,\n        {\n            ...params,\n        }\n    );\n\n    return updatedCompany;\n}\n\nasync function getAllCompanies() {\n    const companies = await Company.query();\n    return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n    const companies = await Company.query().where({\n        owner_id: ownerId,\n    });\n    return companies;\n}\n\nasync function getCompanyById(id) {\n    const company = await getCompany({ id });\n    return company;\n}\n\nasync function _delete(queryParams) {\n    const tobeDeleted = await getCompany(queryParams);\n\n    if (tobeDeleted) {\n        return await Company.query()\n            .delete()\n            .where({ ...queryParams });\n    }\n\n    return error(\"Forbidden\");\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCompany(param) {\n    const company = await Company.query()\n        .where({ ...param })\n        .first();\n    return company;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/10/companyservice_103976749abb46712c9f5147304425bb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2945",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7967,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 615,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateCompany",
                "ranges": [
                  {
                    "startOffset": 617,
                    "endOffset": 1096,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1098,
                    "endOffset": 1197,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1199,
                    "endOffset": 1339,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1341,
                    "endOffset": 1446,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1448,
                    "endOffset": 1669,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompany",
                "ranges": [
                  {
                    "startOffset": 1808,
                    "endOffset": 1933,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = message => {\n  const error = new Error(message);\n  throw error;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9yLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQkMsT0FBRCxJQUFhO0FBQzFCLFFBQU1DLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQVVGLE9BQVYsQ0FBZDtBQUNBLFFBQU1DLEtBQU47QUFDSCxDQUhEIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAobWVzc2FnZSkgPT4ge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIHRocm93IGVycm9yO1xufTtcbiJdfQ==",
            "originalCode": "module.exports = (message) => {\n    const error = new Error(message);\n    throw error;\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/fa/error_fa67f28dedb39797d87045fcac49c533.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2946",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/error.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 690,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 687,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.module.exports",
                "ranges": [
                  {
                    "startOffset": 106,
                    "endOffset": 171,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n  if (user.role == role.admin) return items;\n  return items.filter(item => item.owner_id == user.id);\n}\n\nmodule.exports = {\n  scopedItems\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcm1pc3Npb25zLmpzIl0sIm5hbWVzIjpbInJvbGUiLCJyZXF1aXJlIiwic2NvcGVkSXRlbXMiLCJ1c2VyIiwiaXRlbXMiLCJhZG1pbiIsImZpbHRlciIsIml0ZW0iLCJvd25lcl9pZCIsImlkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxTQUFTQyxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsS0FBM0IsRUFBa0M7QUFDOUIsTUFBSUQsSUFBSSxDQUFDSCxJQUFMLElBQWFBLElBQUksQ0FBQ0ssS0FBdEIsRUFBNkIsT0FBT0QsS0FBUDtBQUM3QixTQUFPQSxLQUFLLENBQUNFLE1BQU4sQ0FBY0MsSUFBRCxJQUFVQSxJQUFJLENBQUNDLFFBQUwsSUFBaUJMLElBQUksQ0FBQ00sRUFBN0MsQ0FBUDtBQUNIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlQsRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvbGUgPSByZXF1aXJlKFwiLi9yb2xlXCIpO1xuXG5mdW5jdGlvbiBzY29wZWRJdGVtcyh1c2VyLCBpdGVtcykge1xuICAgIGlmICh1c2VyLnJvbGUgPT0gcm9sZS5hZG1pbikgcmV0dXJuIGl0ZW1zO1xuICAgIHJldHVybiBpdGVtcy5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0ub3duZXJfaWQgPT0gdXNlci5pZCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHNjb3BlZEl0ZW1zLFxufTtcbiJdfQ==",
            "originalCode": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n    if (user.role == role.admin) return items;\n    return items.filter((item) => item.owner_id == user.id);\n}\n\nmodule.exports = {\n    scopedItems,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/08/permissions_089e905c4105820f9841c9d528f11f86.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2949",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/permissions.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1344,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1341,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "scopedItems",
                "ranges": [
                  {
                    "startOffset": 122,
                    "endOffset": 261,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Account = require(\"./accounts.model\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n  mergeParams: true\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n  try {\n    const {\n      owner_id\n    } = req.body;\n\n    if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unathorized\"\n      });\n    }\n\n    const accounts = await Account.query().where({\n      company_id: req.params.company_id,\n      owner_id\n    });\n\n    if (!accounts) {\n      res.status(404);\n    }\n\n    res.json(accounts);\n  } catch (error) {\n    next(error);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJBY2NvdW50IiwicmVxdWlyZSIsIlJvbGUiLCJhdXRoIiwiQXV0aCIsInJvdXRlciIsIlJvdXRlciIsIm1lcmdlUGFyYW1zIiwiZ2V0IiwiYWRtaW4iLCJvd25lciIsImdldEFjY291bnRzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJvd25lcl9pZCIsImJvZHkiLCJ1c2VyIiwiaWQiLCJyb2xlIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJhY2NvdW50cyIsInF1ZXJ5Iiwid2hlcmUiLCJjb21wYW55X2lkIiwicGFyYW1zIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUUsRUFBQUEsSUFBSSxFQUFFQztBQUFSLElBQWlCSCxPQUFPLENBQUMsNEJBQUQsQ0FBOUI7O0FBRUEsTUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CSyxNQUFuQixDQUEwQjtBQUNyQ0MsRUFBQUEsV0FBVyxFQUFFO0FBRHdCLENBQTFCLENBQWY7O0FBSUFGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JKLElBQUksQ0FBQyxDQUFDRixJQUFJLENBQUNPLEtBQU4sRUFBYVAsSUFBSSxDQUFDUSxLQUFsQixDQUFELENBQXBCLEVBQWdEQyxXQUFoRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCOztBQUVBLGVBQWVNLFdBQWYsQ0FBMkJHLEdBQTNCLEVBQWdDQyxHQUFoQyxFQUFxQ0MsSUFBckMsRUFBMkM7QUFDdkMsTUFBSTtBQUNBLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFlSCxHQUFHLENBQUNJLElBQXpCOztBQUVBLFFBQUlELFFBQVEsS0FBS0gsR0FBRyxDQUFDSyxJQUFKLENBQVNDLEVBQXRCLElBQTRCTixHQUFHLENBQUNLLElBQUosQ0FBU0UsSUFBVCxLQUFrQm5CLElBQUksQ0FBQ08sS0FBdkQsRUFBOEQ7QUFDMUQsYUFBT00sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUMsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBckIsQ0FBUDtBQUNIOztBQUVELFVBQU1DLFFBQVEsR0FBRyxNQUFNekIsT0FBTyxDQUFDMEIsS0FBUixHQUFnQkMsS0FBaEIsQ0FBc0I7QUFDekNDLE1BQUFBLFVBQVUsRUFBRWQsR0FBRyxDQUFDZSxNQUFKLENBQVdELFVBRGtCO0FBRXpDWCxNQUFBQTtBQUZ5QyxLQUF0QixDQUF2Qjs7QUFLQSxRQUFJLENBQUNRLFFBQUwsRUFBZTtBQUNYVixNQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYO0FBQ0g7O0FBRURQLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRSxRQUFUO0FBQ0gsR0FqQkQsQ0FpQkUsT0FBT0ssS0FBUCxFQUFjO0FBQ1pkLElBQUFBLElBQUksQ0FBQ2MsS0FBRCxDQUFKO0FBQ0g7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFjY291bnQgPSByZXF1aXJlKFwiLi9hY2NvdW50cy5tb2RlbFwiKTtcbmNvbnN0IFJvbGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvcm9sZVwiKTtcbmNvbnN0IHsgYXV0aDogQXV0aCB9ID0gcmVxdWlyZShcIi4uLy4uLy4uL19taWRkbGV3YXJlcy9hdXRoXCIpO1xuXG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKFwiZXhwcmVzc1wiKS5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5nZXQoXCIvXCIsIEF1dGgoW1JvbGUuYWRtaW4sIFJvbGUub3duZXJdKSwgZ2V0QWNjb3VudHMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWNjb3VudHMocmVxLCByZXMsIG5leHQpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB7IG93bmVyX2lkIH0gPSByZXEuYm9keTtcblxuICAgICAgICBpZiAob3duZXJfaWQgIT09IHJlcS51c2VyLmlkICYmIHJlcS51c2VyLnJvbGUgIT09IFJvbGUuYWRtaW4pIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdGhvcml6ZWRcIiB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgQWNjb3VudC5xdWVyeSgpLndoZXJlKHtcbiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgIG93bmVyX2lkLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIWFjY291bnRzKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXMuanNvbihhY2NvdW50cyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChlcnJvcik7XG4gICAgfVxufVxuIl19",
            "originalCode": "const Account = require(\"./accounts.model\");\nconst Role = require(\"../../../utils/role\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n    mergeParams: true,\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\n\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n    try {\n        const { owner_id } = req.body;\n\n        if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n            return res.status(401).json({ message: \"Unathorized\" });\n        }\n\n        const accounts = await Account.query().where({\n            company_id: req.params.company_id,\n            owner_id,\n        });\n\n        if (!accounts) {\n            res.status(404);\n        }\n\n        res.json(accounts);\n    } catch (error) {\n        next(error);\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/9b/accountsroutes_9b5521c435078c2c6c307235bad04141.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2950",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4064,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4061,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAccounts",
                "ranges": [
                  {
                    "startOffset": 402,
                    "endOffset": 886,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n  static get tableName() {\n    return tableNames.accounts;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n}\n\nmodule.exports = Account;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJzY2hlbWEiLCJBY2NvdW50IiwidGFibGVOYW1lIiwiYWNjb3VudHMiLCJqc29uU2NoZW1hIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUVBLE1BQU1HLE9BQU4sU0FBc0JKLEtBQXRCLENBQTRCO0FBQ3hCLGFBQVdLLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0gsVUFBVSxDQUFDSSxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0osTUFBUDtBQUNIOztBQVB1Qjs7QUFVNUJLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2FjY291bnRzLnNjaGVtYS5qc29uXCIpO1xuXG5jbGFzcyBBY2NvdW50IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5hY2NvdW50cztcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IGpzb25TY2hlbWEoKSB7XG4gICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFjY291bnQ7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n    static get tableName() {\n        return tableNames.accounts;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n}\n\nmodule.exports = Account;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/01/accountsmodel_01a1ad309c7db6ca01e6d4ebe4774684.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2951",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1669,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1666,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Account",
                "ranges": [
                  {
                    "startOffset": 245,
                    "endOffset": 245,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 284,
                    "endOffset": 337,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 389,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./menu.validator\");\n\nconst Company = require(\"../company.model\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\n\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/company_id/menu_id/category\n\nrouter.use(\"/:menu_id/category\", Category);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.company_id = req.params.company_id;\n  menuService.createMenu(req.body).then(menu => res.json(menu)).catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  menuService.getAllCompanyMenus({\n    company_id\n  }).then(menus => menus ? res.json(menus) : res.sendStatus(404)).catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n  menuService.getMenuById(req.params.id).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService.updateMenu(req.params.id, req.body);\n  }).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n  // only owner delete can delete their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./menu.validator\");\nconst Company = require(\"../company.model\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/company_id/menu_id/category\nrouter.use(\"/:menu_id/category\", Category);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.company_id = req.params.company_id;\n    menuService\n        .createMenu(req.body)\n        .then((menu) => res.json(menu))\n        .catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n    const { company_id } = req.params;\n\n    menuService\n        .getAllCompanyMenus({ company_id })\n        .then((menus) => (menus ? res.json(menus) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n    menuService\n        .getMenuById(req.params.id)\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService.updateMenu(req.params.id, req.body);\n        })\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n    // only owner delete can delete their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/13/menuroutes_138af69f63d31c1d809ea7f466e071eb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2952",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10631,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10628,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 932,
                    "endOffset": 1091,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 1093,
                    "endOffset": 1312,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1314,
                    "endOffset": 1466,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1468,
                    "endOffset": 1843,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteMenu",
                "ranges": [
                  {
                    "startOffset": 1845,
                    "endOffset": 2285,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    cover_url: Joi.string()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    cover_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUudmFsaWRhdG9yLmpzIl0sIm5hbWVzIjpbIkpvaSIsInJlcXVpcmUiLCJ2YWxpZGF0ZVJlcXVlc3QiLCJleHBvcnRzIiwiY3JlYXRlU2NoZW1hIiwicmVxIiwicmVzIiwibmV4dCIsInNjaGVtYSIsIm9iamVjdCIsIm5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImRlc2NyaXB0aW9uIiwiY292ZXJfdXJsIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsU0FBUyxFQUFFZCxHQUFHLENBQUNXLE1BQUo7QUFIVyxHQUFYLENBQWY7QUFLQVQsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FQRDs7QUFTQUwsT0FBTyxDQUFDWSxZQUFSLEdBQXVCLENBQUNWLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1TLFdBQVcsR0FBRztBQUNoQk4sSUFBQUEsSUFBSSxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixDQUFtQixFQUFuQixDQURVO0FBRWhCSixJQUFBQSxXQUFXLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhTSxLQUFiLENBQW1CLEVBQW5CLENBRkc7QUFHaEJILElBQUFBLFNBQVMsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFwQjtBQU1BLFFBQU1ULE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdPLFdBQVgsQ0FBZjtBQUVBZCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVZEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICB9O1xuXG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdChzY2hlbWFSdWxlcyk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        cover_url: Joi.string(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        cover_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0b/menuvalidator_0bff2254f7ebb231be87a9bba47a9cd7.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2953",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.validator.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3165,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 216,
                    "endOffset": 418,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 444,
                    "endOffset": 689,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./category.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../utils/role\");\n\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\n\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company_id/menu_id/category/category_id/item\n\nrouter.use(\"/:category_id/item\", Item);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  // check if owner of company\n  const payload = req.body;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.createcategory(payload);\n  }).then(category => res.json(category)).catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  categoryService.getAllCompanyCategorys({\n    company_id\n  }).then(categories => categories ? res.json(categories) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n  categoryService.getCategoryById(req.params.id).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company category\n  const payload = req.body;\n  payload.menu_id = req.params.menu_id;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.updateCategory(req.params.id, payload);\n  }).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n  // only owner delete can delete their company category\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n} // =========================================\n\n\nasync function isOwner(owner_id, company_id) {\n  const bool = await Company.query().where({\n    owner_id,\n    id: company_id\n  }).first();\n  return bool;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./category.validators\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst Role = require(\"../../../../utils/role\");\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company_id/menu_id/category/category_id/item\nrouter.use(\"/:category_id/item\", Item);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    // check if owner of company\n    const payload = req.body;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.createcategory(payload);\n        })\n        .then((category) => res.json(category))\n        .catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n    const { company_id } = req.params;\n\n    categoryService\n        .getAllCompanyCategorys({ company_id })\n        .then((categories) =>\n            categories ? res.json(categories) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n    categoryService\n        .getCategoryById(req.params.id)\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company category\n    const payload = req.body;\n    payload.menu_id = req.params.menu_id;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.updateCategory(req.params.id, payload);\n        })\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n    // only owner delete can delete their company category\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n\n// =========================================\nasync function isOwner(owner_id, company_id) {\n    const bool = await Company.query()\n        .where({ owner_id, id: company_id })\n        .first();\n\n    return bool;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/f9/categoryroutes_f95c539ef7b2381e749f49618b0199b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2954",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 12907,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 12904,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 962,
                    "endOffset": 1328,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 1330,
                    "endOffset": 1576,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1578,
                    "endOffset": 1754,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1756,
                    "endOffset": 2229,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteCategory",
                "ranges": [
                  {
                    "startOffset": 2231,
                    "endOffset": 2690,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 2738,
                    "endOffset": 2893,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    menu_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    menu_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVTY2hlbWEiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2NoZW1hIiwib2JqZWN0IiwibmFtZSIsInN0cmluZyIsInJlcXVpcmVkIiwibWVudV9pZCIsIm51bWJlciIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsMENBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxPQUFPLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBRmEsR0FBWCxDQUFmO0FBSUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBTkQ7O0FBUUFMLE9BQU8sQ0FBQ1ksWUFBUixHQUF1QixDQUFDVixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNUyxXQUFXLEdBQUc7QUFDaEJOLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQkosSUFBQUEsT0FBTyxFQUFFYixHQUFHLENBQUNjLE1BQUosR0FBYUcsS0FBYixDQUFtQixFQUFuQjtBQUZPLEdBQXBCO0FBS0EsUUFBTVQsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV08sV0FBWCxDQUFmO0FBRUFkLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBKb2kgPSByZXF1aXJlKFwiam9pXCIpO1xuY29uc3QgdmFsaWRhdGVSZXF1ZXN0ID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL19taWRkbGV3YXJlcy92YWxpZGF0ZVJlcXVlc3RcIik7XG5cbmV4cG9ydHMuY3JlYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        menu_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        menu_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/1b/categoryvalidators_1b6fa12bad6d90716c229117a118363b.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2955",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2827,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2824,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 219,
                    "endOffset": 388,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 414,
                    "endOffset": 616,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./item.validators\");\n\nconst {\n  auth: Auth,\n  isOwner\n} = require(\"../../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../../utils/role\");\n\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  itemService.createItem(req.body).then(item => res.status(201).json(item)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  itemService.getItemById(req.params.id).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction updateItem(req, res, next) {\n  itemService.updateItem(req.params.id, req.body).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n  itemService.deleteItem({\n    id: req.params.id\n  }).then(() => res.json({\n    message: \"Item deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ucm91dGVzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY3JlYXRlU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwiYXV0aCIsIkF1dGgiLCJpc093bmVyIiwiUm9sZSIsIml0ZW1TZXJ2aWNlIiwicm91dGVyIiwiUm91dGVyIiwibWVyZ2VQYXJhbXMiLCJwb3N0Iiwib3duZXIiLCJjcmVhdGUiLCJnZXQiLCJnZXRCeUlkIiwicGF0Y2giLCJ1cGRhdGVJdGVtIiwiZGVsZXRlIiwiZGVsZXRlSXRlbSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY3JlYXRlSXRlbSIsImJvZHkiLCJ0aGVuIiwiaXRlbSIsInN0YXR1cyIsImpzb24iLCJjYXRjaCIsImdldEl0ZW1CeUlkIiwicGFyYW1zIiwiaWQiLCJzZW5kU3RhdHVzIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBO0FBQWhCLElBQWlDRixPQUFPLENBQUMsbUJBQUQsQ0FBOUM7O0FBQ0EsTUFBTTtBQUFFRyxFQUFBQSxJQUFJLEVBQUVDLElBQVI7QUFBY0MsRUFBQUE7QUFBZCxJQUEwQkwsT0FBTyxDQUFDLGtDQUFELENBQXZDOztBQUNBLE1BQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLDJCQUFELENBQXBCOztBQUNBLE1BQU1PLFdBQVcsR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQTNCOztBQUVBLE1BQU1RLE1BQU0sR0FBR1QsT0FBTyxDQUFDVSxNQUFSLENBQWU7QUFDMUJDLEVBQUFBLFdBQVcsRUFBRTtBQURhLENBQWYsQ0FBZjtBQUlBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCUCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBckIsRUFBcUNQLE9BQU8sRUFBNUMsRUFBZ0RKLFlBQWhELEVBQThEWSxNQUE5RDtBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxNQUFYLEVBQW1CVixJQUFJLEVBQXZCLEVBQTJCVyxPQUEzQjtBQUNBUCxNQUFNLENBQUNRLEtBQVAsQ0FBYSxNQUFiLEVBQXFCWixJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBekIsRUFBeUNQLE9BQU8sRUFBaEQsRUFBb0RILFlBQXBELEVBQWtFZSxVQUFsRTtBQUNBVCxNQUFNLENBQUNVLE1BQVAsQ0FBYyxNQUFkLEVBQXNCZCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBMUIsRUFBMENQLE9BQU8sRUFBakQsRUFBcURjLFVBQXJEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakI7O0FBRUEsU0FBU0ssTUFBVCxDQUFnQlMsR0FBaEIsRUFBcUJDLEdBQXJCLEVBQTBCQyxJQUExQixFQUFnQztBQUM1QmpCLEVBQUFBLFdBQVcsQ0FDTmtCLFVBREwsQ0FDZ0JILEdBQUcsQ0FBQ0ksSUFEcEIsRUFFS0MsSUFGTCxDQUVXQyxJQUFELElBQVVMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixJQUFyQixDQUZwQixFQUdLRyxLQUhMLENBR1dQLElBSFg7QUFJSDs7QUFFRCxTQUFTVCxPQUFULENBQWlCTyxHQUFqQixFQUFzQkMsR0FBdEIsRUFBMkJDLElBQTNCLEVBQWlDO0FBQzdCakIsRUFBQUEsV0FBVyxDQUNOeUIsV0FETCxDQUNpQlYsR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDVCLEVBRUtQLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU1AsVUFBVCxDQUFvQkssR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlUsVUFETCxDQUNnQkssR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDNCLEVBQytCWixHQUFHLENBQUNJLElBRG5DLEVBRUtDLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU0wsVUFBVCxDQUFvQkcsR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlksVUFETCxDQUNnQjtBQUFFZSxJQUFBQSxFQUFFLEVBQUVaLEdBQUcsQ0FBQ1csTUFBSixDQUFXQztBQUFqQixHQURoQixFQUVLUCxJQUZMLENBRVUsTUFDRkosR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDTE0sSUFBQUEsT0FBTyxFQUFFLDJCQURKO0FBRUxGLElBQUFBLEVBQUUsRUFBRVosR0FBRyxDQUFDVyxNQUFKLENBQVdDO0FBRlYsR0FBVCxDQUhSLEVBUUtILEtBUkwsQ0FRV1AsSUFSWDtBQVNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBjcmVhdGVTY2hlbWEsIHVwZGF0ZVNjaGVtYSB9ID0gcmVxdWlyZShcIi4vaXRlbS52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoLCBpc093bmVyIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBpdGVtU2VydmljZSA9IHJlcXVpcmUoXCIuL2l0ZW0uc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wb3N0KFwiL1wiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgY3JlYXRlU2NoZW1hLCBjcmVhdGUpO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRCeUlkKTtcbnJvdXRlci5wYXRjaChcIi86aWRcIiwgQXV0aChbUm9sZS5vd25lcl0pLCBpc093bmVyKCksIHVwZGF0ZVNjaGVtYSwgdXBkYXRlSXRlbSk7XG5yb3V0ZXIuZGVsZXRlKFwiLzppZFwiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgZGVsZXRlSXRlbSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuXG5mdW5jdGlvbiBjcmVhdGUocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuY3JlYXRlSXRlbShyZXEuYm9keSlcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKGl0ZW0pKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldEJ5SWQocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuZ2V0SXRlbUJ5SWQocmVxLnBhcmFtcy5pZClcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IChpdGVtID8gcmVzLmpzb24oaXRlbSkgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVJdGVtKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgaXRlbVNlcnZpY2VcbiAgICAgICAgLnVwZGF0ZUl0ZW0ocmVxLnBhcmFtcy5pZCwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChpdGVtKSA9PiAoaXRlbSA/IHJlcy5qc29uKGl0ZW0pIDogcmVzLnNlbmRTdGF0dXMoNDA0KSkpXG4gICAgICAgIC5jYXRjaChuZXh0KTtcbn1cblxuZnVuY3Rpb24gZGVsZXRlSXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIGl0ZW1TZXJ2aWNlXG4gICAgICAgIC5kZWxldGVJdGVtKHsgaWQ6IHJlcS5wYXJhbXMuaWQgfSlcbiAgICAgICAgLnRoZW4oKCkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkl0ZW0gZGVsZXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgICAgICBpZDogcmVxLnBhcmFtcy5pZCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuIl19",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./item.validators\");\nconst { auth: Auth, isOwner } = require(\"../../../../../_middlewares/auth\");\nconst Role = require(\"../../../../../utils/role\");\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    itemService\n        .createItem(req.body)\n        .then((item) => res.status(201).json(item))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    itemService\n        .getItemById(req.params.id)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction updateItem(req, res, next) {\n    itemService\n        .updateItem(req.params.id, req.body)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n    itemService\n        .deleteItem({ id: req.params.id })\n        .then(() =>\n            res.json({\n                message: \"Item deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/de/itemroutes_de9b46cc999b0a12213b699c8d15bd22.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2956",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6599,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6596,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 717,
                    "endOffset": 841,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 843,
                    "endOffset": 991,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 993,
                    "endOffset": 1153,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 1155,
                    "endOffset": 1353,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    price: Joi.number().required(),\n    quantity: Joi.number().required(),\n    description: Joi.string().required(),\n    image_url: Joi.string(),\n    category_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    price: Joi.number().empty(\"\"),\n    quantity: Joi.number().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    image_url: Joi.string(),\n    category_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0udmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJwcmljZSIsIm51bWJlciIsInF1YW50aXR5IiwiZGVzY3JpcHRpb24iLCJpbWFnZV91cmwiLCJjYXRlZ29yeV9pZCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsNkNBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxLQUFLLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiLEVBRmU7QUFHdEJHLElBQUFBLFFBQVEsRUFBRWYsR0FBRyxDQUFDYyxNQUFKLEdBQWFGLFFBQWIsRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFKUztBQUt0QkssSUFBQUEsU0FBUyxFQUFFakIsR0FBRyxDQUFDVyxNQUFKLEVBTFc7QUFNdEJPLElBQUFBLFdBQVcsRUFBRWxCLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBTlMsR0FBWCxDQUFmO0FBUUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVkQ7O0FBWUFMLE9BQU8sQ0FBQ2dCLFlBQVIsR0FBdUIsQ0FBQ2QsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTWEsV0FBVyxHQUFHO0FBQ2hCVixJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CLEVBQW5CLENBRFU7QUFFaEJSLElBQUFBLEtBQUssRUFBRWIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGUztBQUdoQk4sSUFBQUEsUUFBUSxFQUFFZixHQUFHLENBQUNjLE1BQUosR0FBYU8sS0FBYixDQUFtQixFQUFuQixDQUhNO0FBSWhCTCxJQUFBQSxXQUFXLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYVUsS0FBYixDQUFtQixFQUFuQixDQUpHO0FBS2hCSixJQUFBQSxTQUFTLEVBQUVqQixHQUFHLENBQUNXLE1BQUosRUFMSztBQU1oQk8sSUFBQUEsV0FBVyxFQUFFbEIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkI7QUFORyxHQUFwQjtBQVNBLFFBQU1iLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdXLFdBQVgsQ0FBZjtBQUVBbEIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FiRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIHByaWNlOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5yZXF1aXJlZCgpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIGltYWdlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBjYXRlZ29yeV9pZDogSm9pLm51bWJlcigpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMudXBkYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hUnVsZXMgPSB7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHJpY2U6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgaW1hZ2VfdXJsOiBKb2kuc3RyaW5nKCksXG4gICAgICAgIGNhdGVnb3J5X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        price: Joi.number().required(),\n        quantity: Joi.number().required(),\n        description: Joi.string().required(),\n        image_url: Joi.string(),\n        category_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        price: Joi.number().empty(\"\"),\n        quantity: Joi.number().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        image_url: Joi.string(),\n        category_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/b3/itemvalidators_b3b5560b6fc02d936e24d53b4a41cdcb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2957",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4275,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4272,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 222,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 567,
                    "endOffset": 916,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Item = require(\"./item.model\");\n\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n  createItem,\n  getItemById,\n  updateItem,\n  deleteItem\n};\n\nasync function createItem(params) {\n  const item = await Item.query().insert(params);\n  return basicDetails(item);\n}\n\nasync function getItemById(id) {\n  const item = await getItem({\n    id\n  });\n  return item;\n}\n\nasync function updateItem(id, params) {\n  const updateItem = await Item.query().patchAndFetchById(id, params);\n  return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n  await Item.query().delete({ ...queryParams\n  });\n} // =================== helpers ============================\n\n\nasync function getItem(params) {\n  const item = await Item.query().where({ ...params\n  }).first();\n  return item;\n}\n\nfunction basicDetails(item) {\n  const {\n    id,\n    name,\n    description\n  } = item;\n  return {\n    id,\n    name,\n    description\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0uc2VydmljZS5qcyJdLCJuYW1lcyI6WyJJdGVtIiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZUl0ZW0iLCJnZXRJdGVtQnlJZCIsInVwZGF0ZUl0ZW0iLCJkZWxldGVJdGVtIiwicGFyYW1zIiwiaXRlbSIsInF1ZXJ5IiwiaW5zZXJ0IiwiYmFzaWNEZXRhaWxzIiwiaWQiLCJnZXRJdGVtIiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsIndoZXJlIiwiZmlyc3QiLCJuYW1lIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFdBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQTtBQUphLENBQWpCOztBQU9BLGVBQWVILFVBQWYsQ0FBMEJJLE1BQTFCLEVBQWtDO0FBQzlCLFFBQU1DLElBQUksR0FBRyxNQUFNVixJQUFJLENBQUNXLEtBQUwsR0FBYUMsTUFBYixDQUFvQkgsTUFBcEIsQ0FBbkI7QUFDQSxTQUFPSSxZQUFZLENBQUNILElBQUQsQ0FBbkI7QUFDSDs7QUFFRCxlQUFlSixXQUFmLENBQTJCUSxFQUEzQixFQUErQjtBQUMzQixRQUFNSixJQUFJLEdBQUcsTUFBTUssT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9KLElBQVA7QUFDSDs7QUFFRCxlQUFlSCxVQUFmLENBQTBCTyxFQUExQixFQUE4QkwsTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUYsVUFBVSxHQUFHLE1BQU1QLElBQUksQ0FBQ1csS0FBTCxHQUFhSyxpQkFBYixDQUErQkYsRUFBL0IsRUFBbUNMLE1BQW5DLENBQXpCO0FBRUEsU0FBT0YsVUFBUDtBQUNIOztBQUVELGVBQWVDLFVBQWYsQ0FBMEJTLFdBQTFCLEVBQXVDO0FBQ25DLFFBQU1qQixJQUFJLENBQUNXLEtBQUwsR0FBYU8sTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDs7O0FBQ0EsZUFBZUYsT0FBZixDQUF1Qk4sTUFBdkIsRUFBK0I7QUFDM0IsUUFBTUMsSUFBSSxHQUFHLE1BQU1WLElBQUksQ0FBQ1csS0FBTCxHQUNkUSxLQURjLENBQ1IsRUFBRSxHQUFHVjtBQUFMLEdBRFEsRUFFZFcsS0FGYyxFQUFuQjtBQUdBLFNBQU9WLElBQVA7QUFDSDs7QUFFRCxTQUFTRyxZQUFULENBQXNCSCxJQUF0QixFQUE0QjtBQUN4QixRQUFNO0FBQUVJLElBQUFBLEVBQUY7QUFBTU8sSUFBQUEsSUFBTjtBQUFZQyxJQUFBQTtBQUFaLE1BQTRCWixJQUFsQztBQUNBLFNBQU87QUFBRUksSUFBQUEsRUFBRjtBQUFNTyxJQUFBQSxJQUFOO0FBQVlDLElBQUFBO0FBQVosR0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSXRlbSA9IHJlcXVpcmUoXCIuL2l0ZW0ubW9kZWxcIik7XG5jb25zdCBlcnJvciA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi91dGlscy9lcnJvclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlSXRlbSxcbiAgICBnZXRJdGVtQnlJZCxcbiAgICB1cGRhdGVJdGVtLFxuICAgIGRlbGV0ZUl0ZW0sXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhpdGVtKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0SXRlbUJ5SWQoaWQpIHtcbiAgICBjb25zdCBpdGVtID0gYXdhaXQgZ2V0SXRlbSh7IGlkIH0pO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVJdGVtKGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCB1cGRhdGVJdGVtID0gYXdhaXQgSXRlbS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIHVwZGF0ZUl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUl0ZW0ocXVlcnlQYXJhbXMpIHtcbiAgICBhd2FpdCBJdGVtLnF1ZXJ5KCkuZGVsZXRlKHsgLi4ucXVlcnlQYXJhbXMgfSk7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT0gaGVscGVycyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW1zIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMoaXRlbSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGRlc2NyaXB0aW9uIH0gPSBpdGVtO1xuICAgIHJldHVybiB7IGlkLCBuYW1lLCBkZXNjcmlwdGlvbiB9O1xufVxuIl19",
            "originalCode": "const Item = require(\"./item.model\");\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n    createItem,\n    getItemById,\n    updateItem,\n    deleteItem,\n};\n\nasync function createItem(params) {\n    const item = await Item.query().insert(params);\n    return basicDetails(item);\n}\n\nasync function getItemById(id) {\n    const item = await getItem({ id });\n    return item;\n}\n\nasync function updateItem(id, params) {\n    const updateItem = await Item.query().patchAndFetchById(id, params);\n\n    return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n    await Item.query().delete({ ...queryParams });\n}\n\n// =================== helpers ============================\nasync function getItem(params) {\n    const item = await Item.query()\n        .where({ ...params })\n        .first();\n    return item;\n}\n\nfunction basicDetails(item) {\n    const { id, name, description } = item;\n    return { id, name, description };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/37/itemservice_37723bc6ce9a1333746fd65833e30b1c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2958",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4281,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4278,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createItem",
                "ranges": [
                  {
                    "startOffset": 261,
                    "endOffset": 377,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItemById",
                "ranges": [
                  {
                    "startOffset": 379,
                    "endOffset": 472,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 474,
                    "endOffset": 607,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 609,
                    "endOffset": 702,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItem",
                "ranges": [
                  {
                    "startOffset": 765,
                    "endOffset": 880,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 882,
                    "endOffset": 1019,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../../../constants/tableNames\");\n\nconst db = require(\"../../../../../db\");\n\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n  static get tableName() {\n    return tableNames.item;\n  }\n\n  static get relationMappings() {\n    const Category = require(\"../../category/category.model\");\n\n    return {\n      category: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Category,\n        join: {\n          from: `${tableNames.item}.category_id`,\n          to: `${tableNames.category}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Item;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiQ2F0ZWdvcnkiLCJJdGVtIiwidGFibGVOYW1lIiwiaXRlbSIsInJlbGF0aW9uTWFwcGluZ3MiLCJjYXRlZ29yeSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsImtuZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBWUMsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMscUNBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBbEI7O0FBQ0EsTUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBRUEsTUFBTUksSUFBTixTQUFtQkwsS0FBbkIsQ0FBeUI7QUFDckIsYUFBV00sU0FBWCxHQUF1QjtBQUNuQixXQUFPSixVQUFVLENBQUNLLElBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUosUUFBUSxHQUFHSCxPQUFPLENBQUMsK0JBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIUSxNQUFBQSxRQUFRLEVBQUU7QUFDTkMsUUFBQUEsUUFBUSxFQUFFVixLQUFLLENBQUNXLG9CQURWO0FBRU5DLFFBQUFBLFVBQVUsRUFBRVIsUUFGTjtBQUdOUyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVaLFVBQVUsQ0FBQ0ssSUFBSyxjQUR2QjtBQUVGUSxVQUFBQSxFQUFFLEVBQUcsR0FBRWIsVUFBVSxDQUFDTyxRQUFTO0FBRnpCO0FBSEE7QUFEUCxLQUFQO0FBVUg7O0FBbEJvQjs7QUFxQnpCVCxLQUFLLENBQUNnQixJQUFOLENBQVdiLEVBQVg7QUFFQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vZGJcIik7XG5jb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS5tb2RlbFwiKTtcblxuY2xhc3MgSXRlbSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuaXRlbTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIGNvbnN0IENhdGVnb3J5ID0gcmVxdWlyZShcIi4uLy4uL2NhdGVnb3J5L2NhdGVnb3J5Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjYXRlZ29yeToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBDYXRlZ29yeSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMuaXRlbX0uY2F0ZWdvcnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jYXRlZ29yeX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gSXRlbTtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../../../constants/tableNames\");\nconst db = require(\"../../../../../db\");\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n    static get tableName() {\n        return tableNames.item;\n    }\n\n    static get relationMappings() {\n        const Category = require(\"../../category/category.model\");\n\n        return {\n            category: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Category,\n                join: {\n                    from: `${tableNames.item}.category_id`,\n                    to: `${tableNames.category}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Item;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/bd/itemmodel_bde36e534327c1a1231475da3047e2a2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2959",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3171,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Item",
                "ranges": [
                  {
                    "startOffset": 290,
                    "endOffset": 290,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 326,
                    "endOffset": 375,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 386,
                    "endOffset": 718,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../../db\");\n\nconst schema = require(\"./category.schema.json\");\n\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n  static get tableName() {\n    return tableNames.category;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Menu = require(\"../menu.model\");\n\n    const Item = require(\"../menu/item/item.model\");\n\n    return {\n      menu: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Menu,\n        join: {\n          from: `${tableName.category}.menu_id`,\n          to: `${tableNames.menu}.id`\n        }\n      },\n      items: {\n        relation: Model.HasManyRelation,\n        modelClasss: Item,\n        join: {\n          from: `${tableNames.category}.id`,\n          to: `${tableNames.item}.category_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Category;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5Lm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsImRiIiwic2NoZW1hIiwidGFibGVOYW1lcyIsIkNhdGVnb3J5IiwidGFibGVOYW1lIiwiY2F0ZWdvcnkiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIk1lbnUiLCJJdGVtIiwibWVudSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJpdGVtcyIsIkhhc01hbnlSZWxhdGlvbiIsIml0ZW0iLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLGtDQUFELENBQTFCOztBQUVBLE1BQU1JLFFBQU4sU0FBdUJMLEtBQXZCLENBQTZCO0FBQ3pCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsSUFBSSxHQUFHVCxPQUFPLENBQUMsZUFBRCxDQUFwQjs7QUFDQSxVQUFNVSxJQUFJLEdBQUdWLE9BQU8sQ0FBQyx5QkFBRCxDQUFwQjs7QUFFQSxXQUFPO0FBQ0hXLE1BQUFBLElBQUksRUFBRTtBQUNGQyxRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ2Msb0JBRGQ7QUFFRkMsUUFBQUEsV0FBVyxFQUFFTCxJQUZYO0FBR0ZNLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRVgsU0FBUyxDQUFDQyxRQUFTLFVBRDFCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNRLElBQUs7QUFGckI7QUFISixPQURIO0FBU0hPLE1BQUFBLEtBQUssRUFBRTtBQUNITixRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ29CLGVBRGI7QUFFSEwsUUFBQUEsV0FBVyxFQUFFSixJQUZWO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWIsVUFBVSxDQUFDRyxRQUFTLEtBRDNCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEg7QUFUSixLQUFQO0FBa0JIOztBQWhDd0I7O0FBbUM3QnJCLEtBQUssQ0FBQ3NCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLFFBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IGRiID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2RiXCIpO1xuY29uc3Qgc2NoZW1hID0gcmVxdWlyZShcIi4vY2F0ZWdvcnkuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBDYXRlZ29yeSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuY2F0ZWdvcnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4uL21lbnUubW9kZWxcIik7XG4gICAgICAgIGNvbnN0IEl0ZW0gPSByZXF1aXJlKFwiLi4vbWVudS9pdGVtL2l0ZW0ubW9kZWxcIik7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1lbnU6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IE1lbnUsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWUuY2F0ZWdvcnl9Lm1lbnVfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpdGVtczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IEl0ZW0sXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLml0ZW19LmNhdGVnb3J5X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhdGVnb3J5O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../../db\");\nconst schema = require(\"./category.schema.json\");\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n    static get tableName() {\n        return tableNames.category;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Menu = require(\"../menu.model\");\n        const Item = require(\"../menu/item/item.model\");\n\n        return {\n            menu: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Menu,\n                join: {\n                    from: `${tableName.category}.menu_id`,\n                    to: `${tableNames.menu}.id`,\n                },\n            },\n            items: {\n                relation: Model.HasManyRelation,\n                modelClasss: Item,\n                join: {\n                    from: `${tableNames.category}.id`,\n                    to: `${tableNames.item}.category_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Category;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0e/categorymodel_0ef83f3e2352e4f7122c2a335cba1fb2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2960",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4654,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4651,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Category",
                "ranges": [
                  {
                    "startOffset": 287,
                    "endOffset": 287,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 327,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 391,
                    "endOffset": 432,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 443,
                    "endOffset": 1073,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Category = require(\"./category.model\");\n\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n  createCategory,\n  updateCategory,\n  getAllCategory,\n  getAllCompanyCategorys,\n  getCategoryById,\n  _delete\n};\n\nasync function createCategory(params) {\n  const category = await Category.query().insert(params);\n  return category;\n}\n\nasync function updateCategory(id, params) {\n  const category = await getCategory({\n    id\n  }); //check if category name is duplicated\n\n  if (params.name && category.name !== params.name && (await getCategory({\n    name: params.name,\n    menu_id: params.menu_id\n  }))) {\n    error(`Category ${params.name} already exists`);\n  }\n\n  const updatedcategory = await Category.query().patchAndFetchById(id, { ...params\n  });\n  return updatedcategory;\n}\n\nasync function getAllCategory() {\n  const categorys = await Category.query();\n  return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n  const categorys = await Category.query({ ...params\n  });\n  return categorys;\n}\n\nasync function getCategoryById(id) {\n  const category = await getCategory({\n    id\n  });\n  return category;\n}\n\nasync function _delete(queryParams) {\n  await Category.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCategory(param) {\n  const category = await Category.query().where({ ...param\n  }).withGraphFetched(\"items\").first();\n  return category;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnNlcnZpY2UuanMiXSwibmFtZXMiOlsiQ2F0ZWdvcnkiLCJyZXF1aXJlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlQ2F0ZWdvcnkiLCJ1cGRhdGVDYXRlZ29yeSIsImdldEFsbENhdGVnb3J5IiwiZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyIsImdldENhdGVnb3J5QnlJZCIsIl9kZWxldGUiLCJwYXJhbXMiLCJjYXRlZ29yeSIsInF1ZXJ5IiwiaW5zZXJ0IiwiaWQiLCJnZXRDYXRlZ29yeSIsIm5hbWUiLCJtZW51X2lkIiwidXBkYXRlZGNhdGVnb3J5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJjYXRlZ29yeXMiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsInBhcmFtIiwid2hlcmUiLCJ3aXRoR3JhcGhGZXRjaGVkIiwiZmlyc3QiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXhCOztBQUNBLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLHlCQUFELENBQXJCOztBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsY0FEYTtBQUViQyxFQUFBQSxjQUZhO0FBR2JDLEVBQUFBLGNBSGE7QUFJYkMsRUFBQUEsc0JBSmE7QUFLYkMsRUFBQUEsZUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLGNBQWYsQ0FBOEJNLE1BQTlCLEVBQXNDO0FBQ2xDLFFBQU1DLFFBQVEsR0FBRyxNQUFNWixRQUFRLENBQUNhLEtBQVQsR0FBaUJDLE1BQWpCLENBQXdCSCxNQUF4QixDQUF2QjtBQUNBLFNBQU9DLFFBQVA7QUFDSDs7QUFFRCxlQUFlTixjQUFmLENBQThCUyxFQUE5QixFQUFrQ0osTUFBbEMsRUFBMEM7QUFDdEMsUUFBTUMsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEMsQ0FEc0MsQ0FFdEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLFFBQVEsQ0FBQ0ssSUFBVCxLQUFrQk4sTUFBTSxDQUFDTSxJQUR6QixLQUVDLE1BQU1ELFdBQVcsQ0FBQztBQUNmQyxJQUFBQSxJQUFJLEVBQUVOLE1BQU0sQ0FBQ00sSUFERTtBQUVmQyxJQUFBQSxPQUFPLEVBQUVQLE1BQU0sQ0FBQ087QUFGRCxHQUFELENBRmxCLENBREosRUFPRTtBQUNFaEIsSUFBQUEsS0FBSyxDQUFFLFlBQVdTLE1BQU0sQ0FBQ00sSUFBSyxpQkFBekIsQ0FBTDtBQUNIOztBQUNELFFBQU1FLGVBQWUsR0FBRyxNQUFNbkIsUUFBUSxDQUFDYSxLQUFULEdBQWlCTyxpQkFBakIsQ0FBbUNMLEVBQW5DLEVBQXVDLEVBQ2pFLEdBQUdKO0FBRDhELEdBQXZDLENBQTlCO0FBSUEsU0FBT1EsZUFBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsR0FBZ0M7QUFDNUIsUUFBTWMsU0FBUyxHQUFHLE1BQU1yQixRQUFRLENBQUNhLEtBQVQsRUFBeEI7QUFDQSxTQUFPUSxTQUFQO0FBQ0g7O0FBRUQsZUFBZWIsc0JBQWYsQ0FBc0NHLE1BQXRDLEVBQThDO0FBQzFDLFFBQU1VLFNBQVMsR0FBRyxNQUFNckIsUUFBUSxDQUFDYSxLQUFULENBQWUsRUFBRSxHQUFHRjtBQUFMLEdBQWYsQ0FBeEI7QUFDQSxTQUFPVSxTQUFQO0FBQ0g7O0FBRUQsZUFBZVosZUFBZixDQUErQk0sRUFBL0IsRUFBbUM7QUFDL0IsUUFBTUgsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEM7QUFDQSxTQUFPSCxRQUFQO0FBQ0g7O0FBRUQsZUFBZUYsT0FBZixDQUF1QlksV0FBdkIsRUFBb0M7QUFDaEMsUUFBTXRCLFFBQVEsQ0FBQ2EsS0FBVCxHQUFpQlUsTUFBakIsQ0FBd0IsRUFBRSxHQUFHRDtBQUFMLEdBQXhCLENBQU47QUFDSCxDLENBRUQ7QUFDQTtBQUNBO0FBRUE7QUFFQTs7O0FBRUEsZUFBZU4sV0FBZixDQUEyQlEsS0FBM0IsRUFBa0M7QUFDOUIsUUFBTVosUUFBUSxHQUFHLE1BQU1aLFFBQVEsQ0FBQ2EsS0FBVCxHQUNsQlksS0FEa0IsQ0FDWixFQUFFLEdBQUdEO0FBQUwsR0FEWSxFQUVsQkUsZ0JBRmtCLENBRUQsT0FGQyxFQUdsQkMsS0FIa0IsRUFBdkI7QUFLQSxTQUFPZixRQUFQO0FBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuL2NhdGVnb3J5Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZUNhdGVnb3J5LFxuICAgIHVwZGF0ZUNhdGVnb3J5LFxuICAgIGdldEFsbENhdGVnb3J5LFxuICAgIGdldEFsbENvbXBhbnlDYXRlZ29yeXMsXG4gICAgZ2V0Q2F0ZWdvcnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVDYXRlZ29yeShwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVDYXRlZ29yeShpZCwgcGFyYW1zKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBnZXRDYXRlZ29yeSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgY2F0ZWdvcnkgbmFtZSBpcyBkdXBsaWNhdGVkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjYXRlZ29yeS5uYW1lICE9PSBwYXJhbXMubmFtZSAmJlxuICAgICAgICAoYXdhaXQgZ2V0Q2F0ZWdvcnkoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBtZW51X2lkOiBwYXJhbXMubWVudV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBDYXRlZ29yeSAke3BhcmFtcy5uYW1lfSBhbHJlYWR5IGV4aXN0c2ApO1xuICAgIH1cbiAgICBjb25zdCB1cGRhdGVkY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkY2F0ZWdvcnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENhdGVnb3J5KCkge1xuICAgIGNvbnN0IGNhdGVnb3J5cyA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNhdGVnb3J5cztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyhwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeXMgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSh7IC4uLnBhcmFtcyB9KTtcbiAgICByZXR1cm4gY2F0ZWdvcnlzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRDYXRlZ29yeUJ5SWQoaWQpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IGdldENhdGVnb3J5KHsgaWQgfSk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiBfZGVsZXRlKHF1ZXJ5UGFyYW1zKSB7XG4gICAgYXdhaXQgQ2F0ZWdvcnkucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IGNhdGVnb3J5LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENhdGVnb3J5KHBhcmFtKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIilcbiAgICAgICAgLmZpcnN0KCk7XG5cbiAgICByZXR1cm4gY2F0ZWdvcnk7XG59XG4iXX0=",
            "originalCode": "const Category = require(\"./category.model\");\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n    createCategory,\n    updateCategory,\n    getAllCategory,\n    getAllCompanyCategorys,\n    getCategoryById,\n    _delete,\n};\n\nasync function createCategory(params) {\n    const category = await Category.query().insert(params);\n    return category;\n}\n\nasync function updateCategory(id, params) {\n    const category = await getCategory({ id });\n    //check if category name is duplicated\n    if (\n        params.name &&\n        category.name !== params.name &&\n        (await getCategory({\n            name: params.name,\n            menu_id: params.menu_id,\n        }))\n    ) {\n        error(`Category ${params.name} already exists`);\n    }\n    const updatedcategory = await Category.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedcategory;\n}\n\nasync function getAllCategory() {\n    const categorys = await Category.query();\n    return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n    const categorys = await Category.query({ ...params });\n    return categorys;\n}\n\nasync function getCategoryById(id) {\n    const category = await getCategory({ id });\n    return category;\n}\n\nasync function _delete(queryParams) {\n    await Category.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCategory(param) {\n    const category = await Category.query()\n        .where({ ...param })\n        .withGraphFetched(\"items\")\n        .first();\n\n    return category;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/af/categoryservice_af4a088c54a063175cdbab3d375f5ef2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2961",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6647,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6644,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createCategory",
                "ranges": [
                  {
                    "startOffset": 319,
                    "endOffset": 437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateCategory",
                "ranges": [
                  {
                    "startOffset": 439,
                    "endOffset": 884,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCategory",
                "ranges": [
                  {
                    "startOffset": 886,
                    "endOffset": 985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 987,
                    "endOffset": 1115,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1117,
                    "endOffset": 1226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1228,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategory",
                "ranges": [
                  {
                    "startOffset": 1462,
                    "endOffset": 1617,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Menu = require(\"../menu/menu.model\");\n\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n  createMenu,\n  updateMenu,\n  getAllMenu,\n  getAllCompanyMenus,\n  getMenuById,\n  _delete\n};\n\nasync function createMenu(params) {\n  const menu = await Menu.query().insert(params);\n  return menu;\n}\n\nasync function updateMenu(id, params) {\n  const menu = await getMenu({\n    id\n  }); //check if menu name is duplicated\n\n  if (params.name && menu.name !== params.name && (await getMenu({\n    name: params.name,\n    company_id: params.company_id\n  }))) {\n    error(`Menu ${params.name} already exists`);\n  }\n\n  const updatedmenu = await Menu.query().patchAndFetchById(id, { ...params\n  });\n  return updatedmenu;\n}\n\nasync function getAllMenu() {\n  const menus = await Menu.query();\n  return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n  const menus = await Menu.query({ ...params\n  });\n  return menus;\n}\n\nasync function getMenuById(id) {\n  const menu = await getMenu({\n    id\n  });\n  return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n  await Menu.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getMenu(param) {\n  const menu = await Menu.query().where({ ...param\n  }).withGraphFetched(\"categories\").first();\n  return menu;\n}\n\nfunction basicDetails(menu) {\n  const {\n    id,\n    name,\n    company_id,\n    categories\n  } = menu;\n  return {\n    id,\n    name,\n    company_id,\n    categories\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZW51IiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU1lbnUiLCJ1cGRhdGVNZW51IiwiZ2V0QWxsTWVudSIsImdldEFsbENvbXBhbnlNZW51cyIsImdldE1lbnVCeUlkIiwiX2RlbGV0ZSIsInBhcmFtcyIsIm1lbnUiLCJxdWVyeSIsImluc2VydCIsImlkIiwiZ2V0TWVudSIsIm5hbWUiLCJjb21wYW55X2lkIiwidXBkYXRlZG1lbnUiLCJwYXRjaEFuZEZldGNoQnlJZCIsIm1lbnVzIiwiYmFzaWNEZXRhaWxzIiwicXVlcnlQYXJhbXMiLCJkZWxldGUiLCJwYXJhbSIsIndoZXJlIiwid2l0aEdyYXBoRmV0Y2hlZCIsImZpcnN0IiwiY2F0ZWdvcmllcyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsc0JBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFVBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQSxrQkFKYTtBQUtiQyxFQUFBQSxXQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsVUFBZixDQUEwQk0sTUFBMUIsRUFBa0M7QUFDOUIsUUFBTUMsSUFBSSxHQUFHLE1BQU1aLElBQUksQ0FBQ2EsS0FBTCxHQUFhQyxNQUFiLENBQW9CSCxNQUFwQixDQUFuQjtBQUNBLFNBQU9DLElBQVA7QUFDSDs7QUFFRCxlQUFlTixVQUFmLENBQTBCUyxFQUExQixFQUE4QkosTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUMsSUFBSSxHQUFHLE1BQU1JLE9BQU8sQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBMUIsQ0FEa0MsQ0FFbEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLElBQUksQ0FBQ0ssSUFBTCxLQUFjTixNQUFNLENBQUNNLElBRHJCLEtBRUMsTUFBTUQsT0FBTyxDQUFDO0FBQ1hDLElBQUFBLElBQUksRUFBRU4sTUFBTSxDQUFDTSxJQURGO0FBRVhDLElBQUFBLFVBQVUsRUFBRVAsTUFBTSxDQUFDTztBQUZSLEdBQUQsQ0FGZCxDQURKLEVBT0U7QUFDRWhCLElBQUFBLEtBQUssQ0FBRSxRQUFPUyxNQUFNLENBQUNNLElBQUssaUJBQXJCLENBQUw7QUFDSDs7QUFDRCxRQUFNRSxXQUFXLEdBQUcsTUFBTW5CLElBQUksQ0FBQ2EsS0FBTCxHQUFhTyxpQkFBYixDQUErQkwsRUFBL0IsRUFBbUMsRUFDekQsR0FBR0o7QUFEc0QsR0FBbkMsQ0FBMUI7QUFJQSxTQUFPUSxXQUFQO0FBQ0g7O0FBRUQsZUFBZVosVUFBZixHQUE0QjtBQUN4QixRQUFNYyxLQUFLLEdBQUcsTUFBTXJCLElBQUksQ0FBQ2EsS0FBTCxFQUFwQjtBQUNBLFNBQU9RLEtBQVA7QUFDSDs7QUFFRCxlQUFlYixrQkFBZixDQUFrQ0csTUFBbEMsRUFBMEM7QUFDdEMsUUFBTVUsS0FBSyxHQUFHLE1BQU1yQixJQUFJLENBQUNhLEtBQUwsQ0FBVyxFQUFFLEdBQUdGO0FBQUwsR0FBWCxDQUFwQjtBQUNBLFNBQU9VLEtBQVA7QUFDSDs7QUFFRCxlQUFlWixXQUFmLENBQTJCTSxFQUEzQixFQUErQjtBQUMzQixRQUFNSCxJQUFJLEdBQUcsTUFBTUksT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9PLFlBQVksQ0FBQ1YsSUFBRCxDQUFuQjtBQUNIOztBQUVELGVBQWVGLE9BQWYsQ0FBdUJhLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU12QixJQUFJLENBQUNhLEtBQUwsR0FBYVcsTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDtBQUNBO0FBQ0E7QUFFQTtBQUVBOzs7QUFFQSxlQUFlUCxPQUFmLENBQXVCUyxLQUF2QixFQUE4QjtBQUMxQixRQUFNYixJQUFJLEdBQUcsTUFBTVosSUFBSSxDQUFDYSxLQUFMLEdBQ2RhLEtBRGMsQ0FDUixFQUFFLEdBQUdEO0FBQUwsR0FEUSxFQUVkRSxnQkFGYyxDQUVHLFlBRkgsRUFHZEMsS0FIYyxFQUFuQjtBQUlBLFNBQU9oQixJQUFQO0FBQ0g7O0FBRUQsU0FBU1UsWUFBVCxDQUFzQlYsSUFBdEIsRUFBNEI7QUFDeEIsUUFBTTtBQUFFRyxJQUFBQSxFQUFGO0FBQU1FLElBQUFBLElBQU47QUFBWUMsSUFBQUEsVUFBWjtBQUF3QlcsSUFBQUE7QUFBeEIsTUFBdUNqQixJQUE3QztBQUVBLFNBQU87QUFBRUcsSUFBQUEsRUFBRjtBQUFNRSxJQUFBQSxJQUFOO0FBQVlDLElBQUFBLFVBQVo7QUFBd0JXLElBQUFBO0FBQXhCLEdBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1lbnUgPSByZXF1aXJlKFwiLi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZU1lbnUsXG4gICAgdXBkYXRlTWVudSxcbiAgICBnZXRBbGxNZW51LFxuICAgIGdldEFsbENvbXBhbnlNZW51cyxcbiAgICBnZXRNZW51QnlJZCxcbiAgICBfZGVsZXRlLFxufTtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlTWVudShwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLmluc2VydChwYXJhbXMpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVNZW51KGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgZ2V0TWVudSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgbWVudSBuYW1lIGlzIGR1cGxpY2F0ZWRcbiAgICBpZiAoXG4gICAgICAgIHBhcmFtcy5uYW1lICYmXG4gICAgICAgIG1lbnUubmFtZSAhPT0gcGFyYW1zLm5hbWUgJiZcbiAgICAgICAgKGF3YWl0IGdldE1lbnUoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBjb21wYW55X2lkOiBwYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBNZW51ICR7cGFyYW1zLm5hbWV9IGFscmVhZHkgZXhpc3RzYCk7XG4gICAgfVxuICAgIGNvbnN0IHVwZGF0ZWRtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkbWVudTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsTWVudSgpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoKTtcbiAgICByZXR1cm4gbWVudXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbnlNZW51cyhwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoeyAuLi5wYXJhbXMgfSk7XG4gICAgcmV0dXJuIG1lbnVzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRNZW51QnlJZChpZCkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBnZXRNZW51KHsgaWQgfSk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhtZW51KTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGF3YWl0IE1lbnUucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IG1lbnUucXVlcnkoKS5kZWxldGVCeUlkKGlkKTtcblxuLy8gfVxuXG4vLyA9PT09PT09PT09PSBoZWxwZXJzPT09PT09PT09PT1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TWVudShwYXJhbSkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBNZW51LnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW0gfSlcbiAgICAgICAgLndpdGhHcmFwaEZldGNoZWQoXCJjYXRlZ29yaWVzXCIpXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMobWVudSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGNvbXBhbnlfaWQsIGNhdGVnb3JpZXMgfSA9IG1lbnU7XG5cbiAgICByZXR1cm4geyBpZCwgbmFtZSwgY29tcGFueV9pZCwgY2F0ZWdvcmllcyB9O1xufVxuIl19",
            "originalCode": "const Menu = require(\"../menu/menu.model\");\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n    createMenu,\n    updateMenu,\n    getAllMenu,\n    getAllCompanyMenus,\n    getMenuById,\n    _delete,\n};\n\nasync function createMenu(params) {\n    const menu = await Menu.query().insert(params);\n    return menu;\n}\n\nasync function updateMenu(id, params) {\n    const menu = await getMenu({ id });\n    //check if menu name is duplicated\n    if (\n        params.name &&\n        menu.name !== params.name &&\n        (await getMenu({\n            name: params.name,\n            company_id: params.company_id,\n        }))\n    ) {\n        error(`Menu ${params.name} already exists`);\n    }\n    const updatedmenu = await Menu.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedmenu;\n}\n\nasync function getAllMenu() {\n    const menus = await Menu.query();\n    return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n    const menus = await Menu.query({ ...params });\n    return menus;\n}\n\nasync function getMenuById(id) {\n    const menu = await getMenu({ id });\n    return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n    await Menu.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getMenu(param) {\n    const menu = await Menu.query()\n        .where({ ...param })\n        .withGraphFetched(\"categories\")\n        .first();\n    return menu;\n}\n\nfunction basicDetails(menu) {\n    const { id, name, company_id, categories } = menu;\n\n    return { id, name, company_id, categories };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/09/menuservice_0982deee8fc4f2525220c81116cda394.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2962",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6988,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6985,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createMenu",
                "ranges": [
                  {
                    "startOffset": 294,
                    "endOffset": 396,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateMenu",
                "ranges": [
                  {
                    "startOffset": 398,
                    "endOffset": 809,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllMenu",
                "ranges": [
                  {
                    "startOffset": 811,
                    "endOffset": 894,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 896,
                    "endOffset": 1008,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1010,
                    "endOffset": 1117,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1119,
                    "endOffset": 1209,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenu",
                "ranges": [
                  {
                    "startOffset": 1345,
                    "endOffset": 1489,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 1491,
                    "endOffset": 1658,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../db\");\n\nconst schema = require(\"./menu.schema.json\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n  static get tableName() {\n    return tableNames.menu;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Company = require(\"../company.model\");\n\n    const Category = require(\"../category/category.model\");\n\n    return {\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Company,\n        join: {\n          from: `${tableName.menu}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      },\n      categories: {\n        relation: Model.HasManyRelation,\n        modelClasss: Category,\n        join: {\n          from: `${tableNames.menu}.id`,\n          to: `${tableNames.category}.menu_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Menu;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwiZGIiLCJzY2hlbWEiLCJ0YWJsZU5hbWVzIiwiTWVudSIsInRhYmxlTmFtZSIsIm1lbnUiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIkNvbXBhbnkiLCJDYXRlZ29yeSIsImNvbXBhbnkiLCJyZWxhdGlvbiIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwibW9kZWxDbGFzc3MiLCJqb2luIiwiZnJvbSIsInRvIiwiY2F0ZWdvcmllcyIsIkhhc01hbnlSZWxhdGlvbiIsImNhdGVnb3J5Iiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLG9CQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUVBLE1BQU1JLElBQU4sU0FBbUJMLEtBQW5CLENBQXlCO0FBQ3JCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxJQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHVCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVUsUUFBUSxHQUFHVixPQUFPLENBQUMsNEJBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIVyxNQUFBQSxPQUFPLEVBQUU7QUFDTEMsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNjLG9CQURYO0FBRUxDLFFBQUFBLFdBQVcsRUFBRUwsT0FGUjtBQUdMTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVYLFNBQVMsQ0FBQ0MsSUFBSyxhQUR0QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDUSxPQUFRO0FBRnhCO0FBSEQsT0FETjtBQVNITyxNQUFBQSxVQUFVLEVBQUU7QUFDUk4sUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNvQixlQURSO0FBRVJMLFFBQUFBLFdBQVcsRUFBRUosUUFGTDtBQUdSSyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUViLFVBQVUsQ0FBQ0csSUFBSyxLQUR2QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDaUIsUUFBUztBQUZ6QjtBQUhFO0FBVFQsS0FBUDtBQWtCSDs7QUFoQ29COztBQW1DekJyQixLQUFLLENBQUNzQixJQUFOLENBQVdwQixFQUFYO0FBRUFxQixNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL21lbnUuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBNZW51IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5tZW51O1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQganNvblNjaGVtYSgpIHtcbiAgICAgICAgcmV0dXJuIHNjaGVtYTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIC8vIEltcG9ydGluZyBtb2RlbHMgaGVyZSBpcyBhIG9uZSB3YXkgdG8gYXZvaWQgcmVxdWlyZSBsb29wcy5cbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS9jYXRlZ29yeS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29tcGFueToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZS5tZW51fS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMuY29tcGFueX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2F0ZWdvcmllczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IENhdGVnb3J5LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5tZW51X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lbnU7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../db\");\nconst schema = require(\"./menu.schema.json\");\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n    static get tableName() {\n        return tableNames.menu;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Company = require(\"../company.model\");\n        const Category = require(\"../category/category.model\");\n\n        return {\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Company,\n                join: {\n                    from: `${tableName.menu}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n            categories: {\n                relation: Model.HasManyRelation,\n                modelClasss: Category,\n                join: {\n                    from: `${tableNames.menu}.id`,\n                    to: `${tableNames.category}.menu_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Menu;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/21/menumodel_2169ce1c45f3dc0c50729f84caa9c38e.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2963",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4674,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4671,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Menu",
                "ranges": [
                  {
                    "startOffset": 277,
                    "endOffset": 277,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 313,
                    "endOffset": 362,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 414,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 425,
                    "endOffset": 1081,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createOrderSchema,\n  updateOrderSchema,\n  companyOrderSchema\n} = require(\"./order.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.use(\"/:order_id/orderItem\", OrderItem); // update an order item customer aka update cart item\n\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\"/:id\", updateOrderSchema, Auth([Role.staff, Role.owner]), updateOrder);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\"/company-orders\", companyOrderSchema, Auth([Role.owner, Role.staff]), getCompanyOrders);\n\nfunction createOrder(req, res, next) {\n  const payload = {\n    customer_id: req.user.id,\n    company_id: req.params.company_id,\n    item: req.body\n  };\n  orderService.createOrder(payload).then(orderItem => res.json({\n    message: `${orderItem.item} has been added to the cart`\n  })).catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n  orderService.updateOrder(req.params.id, req.user, req.body).then(order => res.json(order)).catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n  orderService.getOrderById(id).then(order => order ? res.json(order) : res.sendStatus(404)).catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n  orderService.getOwnOrders(req.user.id).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n  // TODO to use query params\n  params.company_id = req.params.company_id;\n  orderService.getCompanyOrders(params).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNyZWF0ZU9yZGVyU2NoZW1hIiwidXBkYXRlT3JkZXJTY2hlbWEiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJhdXRoIiwiQXV0aCIsIlJvbGUiLCJvcmRlclNlcnZpY2UiLCJPcmRlckl0ZW0iLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInVzZSIsInBvc3QiLCJjdXN0b21lciIsImNyZWF0ZU9yZGVyIiwicGF0Y2giLCJzdGFmZiIsIm93bmVyIiwidXBkYXRlT3JkZXIiLCJnZXQiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicmVxIiwicmVzIiwibmV4dCIsInBheWxvYWQiLCJjdXN0b21lcl9pZCIsInVzZXIiLCJpZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiLCJpdGVtIiwiYm9keSIsInRoZW4iLCJvcmRlckl0ZW0iLCJqc29uIiwibWVzc2FnZSIsImNhdGNoIiwib3JkZXIiLCJzZW5kU3RhdHVzIiwib3JkZXJzIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQ0ZDLEVBQUFBLGlCQURFO0FBRUZDLEVBQUFBLGlCQUZFO0FBR0ZDLEVBQUFBO0FBSEUsSUFJRkgsT0FBTyxDQUFDLG9CQUFELENBSlg7O0FBS0EsTUFBTTtBQUFFSSxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJMLE9BQU8sQ0FBQyw0QkFBRCxDQUE5Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxNQUFNTyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxpQkFBRCxDQUE1Qjs7QUFFQSxNQUFNUSxTQUFTLEdBQUdSLE9BQU8sQ0FBQyw4QkFBRCxDQUF6Qjs7QUFFQSxNQUFNUyxNQUFNLEdBQUdWLE9BQU8sQ0FBQ1csTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNKLFNBQW5DLEUsQ0FFQTs7QUFDQUMsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQlosaUJBQWpCLEVBQW9DSSxJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUF4QyxFQUF5REMsV0FBekQ7QUFDQU4sTUFBTSxDQUFDTyxLQUFQLENBQ0ksTUFESixFQUVJZCxpQkFGSixFQUdJRyxJQUFJLENBQUMsQ0FBQ0MsSUFBSSxDQUFDVyxLQUFOLEVBQWFYLElBQUksQ0FBQ1ksS0FBbEIsQ0FBRCxDQUhSLEVBSUlDLFdBSko7QUFNQVYsTUFBTSxDQUFDVyxHQUFQLENBQVcsTUFBWCxFQUFtQmYsSUFBSSxFQUF2QixFQUEyQmdCLFlBQTNCO0FBQ0FaLE1BQU0sQ0FBQ1csR0FBUCxDQUFXLGdCQUFYLEVBQTZCZixJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUFqQyxFQUFrRFEsWUFBbEQ7QUFDQWIsTUFBTSxDQUFDVyxHQUFQLENBQ0ksaUJBREosRUFFSWpCLGtCQUZKLEVBR0lFLElBQUksQ0FBQyxDQUFDQyxJQUFJLENBQUNZLEtBQU4sRUFBYVosSUFBSSxDQUFDVyxLQUFsQixDQUFELENBSFIsRUFJSU0sZ0JBSko7O0FBT0EsU0FBU1IsV0FBVCxDQUFxQlMsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQztBQUNqQyxRQUFNQyxPQUFPLEdBQUc7QUFDWkMsSUFBQUEsV0FBVyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0MsRUFEVjtBQUVaQyxJQUFBQSxVQUFVLEVBQUVQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRCxVQUZYO0FBR1pFLElBQUFBLElBQUksRUFBRVQsR0FBRyxDQUFDVTtBQUhFLEdBQWhCO0FBS0EzQixFQUFBQSxZQUFZLENBQ1BRLFdBREwsQ0FDaUJZLE9BRGpCLEVBRUtRLElBRkwsQ0FFV0MsU0FBRCxJQUNGWCxHQUFHLENBQUNZLElBQUosQ0FBUztBQUNMQyxJQUFBQSxPQUFPLEVBQUcsR0FBRUYsU0FBUyxDQUFDSCxJQUFLO0FBRHRCLEdBQVQsQ0FIUixFQU9LTSxLQVBMLENBT1diLElBUFg7QUFRSDs7QUFFRCxTQUFTUCxXQUFULENBQXFCSyxHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDO0FBQ2pDbkIsRUFBQUEsWUFBWSxDQUNQWSxXQURMLENBQ2lCSyxHQUFHLENBQUNRLE1BQUosQ0FBV0YsRUFENUIsRUFDZ0NOLEdBQUcsQ0FBQ0ssSUFEcEMsRUFDMENMLEdBQUcsQ0FBQ1UsSUFEOUMsRUFFS0MsSUFGTCxDQUVXSyxLQUFELElBQVdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBRnJCLEVBR0tELEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNMLFlBQVQsQ0FBc0JHLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BjLFlBREwsQ0FDa0JTLEVBRGxCLEVBRUtLLElBRkwsQ0FFV0ssS0FBRCxJQUFZQSxLQUFLLEdBQUdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBQUgsR0FBcUJmLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRmhELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNKLFlBQVQsQ0FBc0JFLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BlLFlBREwsQ0FDa0JFLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxFQUQzQixFQUVLSyxJQUZMLENBRVdPLE1BQUQsSUFBYUEsTUFBTSxDQUFDQyxNQUFQLEdBQWdCLENBQWhCLEdBQW9CRCxNQUFwQixHQUE2QmpCLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRnBELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNILGdCQUFULENBQTBCQyxHQUExQixFQUErQkMsR0FBL0IsRUFBb0NDLElBQXBDLEVBQTBDO0FBQ3RDO0FBRUFNLEVBQUFBLE1BQU0sQ0FBQ0QsVUFBUCxHQUFvQlAsR0FBRyxDQUFDUSxNQUFKLENBQVdELFVBQS9CO0FBQ0F4QixFQUFBQSxZQUFZLENBQ1BnQixnQkFETCxDQUNzQlMsTUFEdEIsRUFFS0csSUFGTCxDQUVXTyxNQUFELElBQWFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUFoQixHQUFvQkQsTUFBcEIsR0FBNkJqQixHQUFHLENBQUNnQixVQUFKLENBQWUsR0FBZixDQUZwRCxFQUdLRixLQUhMLENBR1diLElBSFg7QUFJSDs7QUFDRGtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBDLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qge1xuICAgIGNyZWF0ZU9yZGVyU2NoZW1hLFxuICAgIHVwZGF0ZU9yZGVyU2NoZW1hLFxuICAgIGNvbXBhbnlPcmRlclNjaGVtYSxcbn0gPSByZXF1aXJlKFwiLi9vcmRlci52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi9vcmRlci5zZXJ2aWNlXCIpO1xuXG5jb25zdCBPcmRlckl0ZW0gPSByZXF1aXJlKFwiLi9vcmRlckl0ZW0vb3JkZXJJdGVtLnJvdXRlc1wiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci51c2UoXCIvOm9yZGVyX2lkL29yZGVySXRlbVwiLCBPcmRlckl0ZW0pO1xuXG4vLyB1cGRhdGUgYW4gb3JkZXIgaXRlbSBjdXN0b21lciBha2EgdXBkYXRlIGNhcnQgaXRlbVxucm91dGVyLnBvc3QoXCIvXCIsIGNyZWF0ZU9yZGVyU2NoZW1hLCBBdXRoKFJvbGUuY3VzdG9tZXIpLCBjcmVhdGVPcmRlcik7XG5yb3V0ZXIucGF0Y2goXG4gICAgXCIvOmlkXCIsXG4gICAgdXBkYXRlT3JkZXJTY2hlbWEsXG4gICAgQXV0aChbUm9sZS5zdGFmZiwgUm9sZS5vd25lcl0pLFxuICAgIHVwZGF0ZU9yZGVyXG4pO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRPcmRlckJ5SWQpO1xucm91dGVyLmdldChcIi86aWQvbXktb3JkZXJzXCIsIEF1dGgoUm9sZS5jdXN0b21lciksIGdldE93bk9yZGVycyk7XG5yb3V0ZXIuZ2V0KFxuICAgIFwiL2NvbXBhbnktb3JkZXJzXCIsXG4gICAgY29tcGFueU9yZGVyU2NoZW1hLFxuICAgIEF1dGgoW1JvbGUub3duZXIsIFJvbGUuc3RhZmZdKSxcbiAgICBnZXRDb21wYW55T3JkZXJzXG4pO1xuXG5mdW5jdGlvbiBjcmVhdGVPcmRlcihyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgIGN1c3RvbWVyX2lkOiByZXEudXNlci5pZCxcbiAgICAgICAgY29tcGFueV9pZDogcmVxLnBhcmFtcy5jb21wYW55X2lkLFxuICAgICAgICBpdGVtOiByZXEuYm9keSxcbiAgICB9O1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuY3JlYXRlT3JkZXIocGF5bG9hZClcbiAgICAgICAgLnRoZW4oKG9yZGVySXRlbSkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBgJHtvcmRlckl0ZW0uaXRlbX0gaGFzIGJlZW4gYWRkZWQgdG8gdGhlIGNhcnRgLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVyKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgb3JkZXJTZXJ2aWNlXG4gICAgICAgIC51cGRhdGVPcmRlcihyZXEucGFyYW1zLmlkLCByZXEudXNlciwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChvcmRlcikgPT4gcmVzLmpzb24ob3JkZXIpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE9yZGVyQnlJZChyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3JkZXJCeUlkKGlkKVxuICAgICAgICAudGhlbigob3JkZXIpID0+IChvcmRlciA/IHJlcy5qc29uKG9yZGVyKSA6IHJlcy5zZW5kU3RhdHVzKDQwNCkpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE93bk9yZGVycyhyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3duT3JkZXJzKHJlcS51c2VyLmlkKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiBnZXRDb21wYW55T3JkZXJzKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8gVE9ETyB0byB1c2UgcXVlcnkgcGFyYW1zXG5cbiAgICBwYXJhbXMuY29tcGFueV9pZCA9IHJlcS5wYXJhbXMuY29tcGFueV9pZDtcbiAgICBvcmRlclNlcnZpY2VcbiAgICAgICAgLmdldENvbXBhbnlPcmRlcnMocGFyYW1zKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst {\n    createOrderSchema,\n    updateOrderSchema,\n    companyOrderSchema,\n} = require(\"./order.validators\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.use(\"/:order_id/orderItem\", OrderItem);\n\n// update an order item customer aka update cart item\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\n    \"/:id\",\n    updateOrderSchema,\n    Auth([Role.staff, Role.owner]),\n    updateOrder\n);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\n    \"/company-orders\",\n    companyOrderSchema,\n    Auth([Role.owner, Role.staff]),\n    getCompanyOrders\n);\n\nfunction createOrder(req, res, next) {\n    const payload = {\n        customer_id: req.user.id,\n        company_id: req.params.company_id,\n        item: req.body,\n    };\n    orderService\n        .createOrder(payload)\n        .then((orderItem) =>\n            res.json({\n                message: `${orderItem.item} has been added to the cart`,\n            })\n        )\n        .catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n    orderService\n        .updateOrder(req.params.id, req.user, req.body)\n        .then((order) => res.json(order))\n        .catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n    orderService\n        .getOrderById(id)\n        .then((order) => (order ? res.json(order) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n    orderService\n        .getOwnOrders(req.user.id)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n    // TODO to use query params\n\n    params.company_id = req.params.company_id;\n    orderService\n        .getCompanyOrders(params)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8f/orderroutes_8f4620babd5b20aee9e160dc0d9cf20a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2964",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9222,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 9219,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 978,
                    "endOffset": 1275,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 1277,
                    "endOffset": 1423,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1425,
                    "endOffset": 1572,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1574,
                    "endOffset": 1734,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1736,
                    "endOffset": 1974,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    item: Joi.number().required(),\n    quantity: Joi.number()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    customer_id: Joi.number().empty(),\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVPcmRlclNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJpdGVtIiwibnVtYmVyIiwicmVxdWlyZWQiLCJxdWFudGl0eSIsInVwZGF0ZU9yZGVyU2NoZW1hIiwib3JkZXJfc3RhdHVzIiwic3RyaW5nIiwiZW1wdHkiLCJwdXJjaGFzZV9zdGF0dXMiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJjdXN0b21lcl9pZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxpQkFBUixHQUE0QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSjtBQUZZLEdBQVgsQ0FBZjtBQUlBVCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNXLGlCQUFSLEdBQTRCLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQzVDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJNLElBQUFBLFlBQVksRUFBRWYsR0FBRyxDQUFDZ0IsTUFBSixHQUFhQyxLQUFiLENBQW1CLEVBQW5CLENBRFE7QUFFdEJDLElBQUFBLGVBQWUsRUFBRWxCLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQjtBQUZLLEdBQVgsQ0FBZjtBQUtBZixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVBEOztBQVNBTCxPQUFPLENBQUNnQixrQkFBUixHQUE2QixDQUFDZCxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM3QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCVyxJQUFBQSxXQUFXLEVBQUVwQixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixFQURTO0FBRXRCRixJQUFBQSxZQUFZLEVBQUVmLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQixDQUZRO0FBR3RCQyxJQUFBQSxlQUFlLEVBQUVsQixHQUFHLENBQUNnQixNQUFKLEdBQWFDLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFYLENBQWY7QUFNQWYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FSRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBpdGVtOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy5jb21wYW55T3JkZXJTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgY3VzdG9tZXJfaWQ6IEpvaS5udW1iZXIoKS5lbXB0eSgpLFxuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        item: Joi.number().required(),\n        quantity: Joi.number(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        customer_id: Joi.number().empty(),\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e1/ordervalidators_e12e9bab16ee6f22191cb1085e8fa580.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2965",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3959,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3956,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createOrderSchema",
                "ranges": [
                  {
                    "startOffset": 221,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateOrderSchema",
                "ranges": [
                  {
                    "startOffset": 411,
                    "endOffset": 594,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.companyOrderSchema",
                "ranges": [
                  {
                    "startOffset": 626,
                    "endOffset": 848,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n  createOrder,\n  updateOrderItem,\n  updateOrder,\n  getOrderById,\n  getOwnOrders,\n  getCompanyOrders\n};\n\nasync function createOrder(params) {\n  const order = await get_or_create(params.customer_id, params.company_id); // insert the item to the order item table\n\n  const orderItem = order.$relatedQuery(\"items\").insert({\n    item: params.item.id,\n    order: order.id\n  });\n  return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n  const order = await getOrder(id); // check item quantity\n\n  if (params.item.quantity <= 0) {\n    // remove from cart\n    await order.$relatedQuery(\"items\").delete().where({\n      item: params.item.id\n    });\n    return;\n  }\n\n  const orderItem = await order.$relatedQuery(\"items\").patch({\n    quantity: params.item.quantity\n  }).where({\n    item: params.item.id\n  }).returning(\"*\");\n  return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n  let order = await getOrder(id).withGraphFetched(\"company\");\n\n  if (order.company.id !== user.company.id) {\n    const error = new Error(\"Unathorized\");\n    throw error;\n  } // aka update order table\n\n\n  order = await Order.query().patchAndFetchById(id, params);\n  return order;\n}\n\nasync function getOrderById(id) {\n  const order = await getOrder(id).withGraphFetched(\"items\");\n  return order;\n}\n\nasync function getOwnOrders(id) {\n  const orders = await Order.query().where({\n    customer_id: id\n  }).orderBy(\"created_at\");\n  return orders;\n}\n\nasync function getCompanyOrders(params) {\n  const orders = await Order.query().where(params).orderBy(\"created_at\");\n  return orders;\n} // =======================helpers==========================\n\n\nasync function get_or_create(id, company_id) {\n  // checks for the existence of a customer order\n  // if it exists add the new items on it\n  // if it does not exist it creates one\n  let order = await Order.query().where({\n    customer_id: id,\n    order_status: \"New\"\n  }).first();\n\n  if (!order) {\n    // create one\n    order = await Order.query().insert({\n      customer_id: id,\n      company_id,\n      order_status: \"New\",\n      purchase_status: \"unpaid\"\n    });\n  }\n\n  return order;\n}\n\nasync function getOrder(id) {\n  const order = await Order.query().findById(id);\n  return order;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnNlcnZpY2UuanMiXSwibmFtZXMiOlsiT3JkZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU9yZGVyIiwidXBkYXRlT3JkZXJJdGVtIiwidXBkYXRlT3JkZXIiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicGFyYW1zIiwib3JkZXIiLCJnZXRfb3JfY3JlYXRlIiwiY3VzdG9tZXJfaWQiLCJjb21wYW55X2lkIiwib3JkZXJJdGVtIiwiJHJlbGF0ZWRRdWVyeSIsImluc2VydCIsIml0ZW0iLCJpZCIsImdldE9yZGVyIiwicXVhbnRpdHkiLCJkZWxldGUiLCJ3aGVyZSIsInBhdGNoIiwicmV0dXJuaW5nIiwidXNlciIsIndpdGhHcmFwaEZldGNoZWQiLCJjb21wYW55IiwiZXJyb3IiLCJFcnJvciIsInF1ZXJ5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJvcmRlcnMiLCJvcmRlckJ5Iiwib3JkZXJfc3RhdHVzIiwiZmlyc3QiLCJwdXJjaGFzZV9zdGF0dXMiLCJmaW5kQnlJZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLFdBRGE7QUFFYkMsRUFBQUEsZUFGYTtBQUdiQyxFQUFBQSxXQUhhO0FBSWJDLEVBQUFBLFlBSmE7QUFLYkMsRUFBQUEsWUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLFdBQWYsQ0FBMkJNLE1BQTNCLEVBQW1DO0FBQy9CLFFBQU1DLEtBQUssR0FBRyxNQUFNQyxhQUFhLENBQUNGLE1BQU0sQ0FBQ0csV0FBUixFQUFxQkgsTUFBTSxDQUFDSSxVQUE1QixDQUFqQyxDQUQrQixDQUcvQjs7QUFDQSxRQUFNQyxTQUFTLEdBQUdKLEtBQUssQ0FDbEJLLGFBRGEsQ0FDQyxPQURELEVBRWJDLE1BRmEsQ0FFTjtBQUFFQyxJQUFBQSxJQUFJLEVBQUVSLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZQyxFQUFwQjtBQUF3QlIsSUFBQUEsS0FBSyxFQUFFQSxLQUFLLENBQUNRO0FBQXJDLEdBRk0sQ0FBbEI7QUFJQSxTQUFPSixTQUFQO0FBQ0g7O0FBRUQsZUFBZVYsZUFBZixDQUErQmMsRUFBL0IsRUFBbUNULE1BQW5DLEVBQTJDO0FBQ3ZDLFFBQU1DLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBNUIsQ0FEdUMsQ0FHdkM7O0FBQ0EsTUFBSVQsTUFBTSxDQUFDUSxJQUFQLENBQVlHLFFBQVosSUFBd0IsQ0FBNUIsRUFBK0I7QUFDM0I7QUFDQSxVQUFNVixLQUFLLENBQ05LLGFBREMsQ0FDYSxPQURiLEVBRURNLE1BRkMsR0FHREMsS0FIQyxDQUdLO0FBQUVMLE1BQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBQXBCLEtBSEwsQ0FBTjtBQUtBO0FBQ0g7O0FBRUQsUUFBTUosU0FBUyxHQUFHLE1BQU1KLEtBQUssQ0FDeEJLLGFBRG1CLENBQ0wsT0FESyxFQUVuQlEsS0FGbUIsQ0FFYjtBQUNISCxJQUFBQSxRQUFRLEVBQUVYLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZRztBQURuQixHQUZhLEVBS25CRSxLQUxtQixDQUtiO0FBQ0hMLElBQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBRGYsR0FMYSxFQVFuQk0sU0FSbUIsQ0FRVCxHQVJTLENBQXhCO0FBVUEsU0FBT1YsU0FBUDtBQUNIOztBQUVELGVBQWVULFdBQWYsQ0FBMkJhLEVBQTNCLEVBQStCTyxJQUEvQixFQUFxQ2hCLE1BQXJDLEVBQTZDO0FBQ3pDLE1BQUlDLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixTQUE5QixDQUFsQjs7QUFFQSxNQUFJaEIsS0FBSyxDQUFDaUIsT0FBTixDQUFjVCxFQUFkLEtBQXFCTyxJQUFJLENBQUNFLE9BQUwsQ0FBYVQsRUFBdEMsRUFBMEM7QUFDdEMsVUFBTVUsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxhQUFWLENBQWQ7QUFDQSxVQUFNRCxLQUFOO0FBQ0gsR0FOd0MsQ0FPekM7OztBQUNBbEIsRUFBQUEsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY0MsaUJBQWQsQ0FBZ0NiLEVBQWhDLEVBQW9DVCxNQUFwQyxDQUFkO0FBRUEsU0FBT0MsS0FBUDtBQUNIOztBQUVELGVBQWVKLFlBQWYsQ0FBNEJZLEVBQTVCLEVBQWdDO0FBQzVCLFFBQU1SLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixPQUE5QixDQUFwQjtBQUNBLFNBQU9oQixLQUFQO0FBQ0g7O0FBRUQsZUFBZUgsWUFBZixDQUE0QlcsRUFBNUIsRUFBZ0M7QUFDNUIsUUFBTWMsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQ2hCUixLQURnQixDQUNWO0FBQUVWLElBQUFBLFdBQVcsRUFBRU07QUFBZixHQURVLEVBRWhCZSxPQUZnQixDQUVSLFlBRlEsQ0FBckI7QUFHQSxTQUFPRCxNQUFQO0FBQ0g7O0FBRUQsZUFBZXhCLGdCQUFmLENBQWdDQyxNQUFoQyxFQUF3QztBQUNwQyxRQUFNdUIsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQWNSLEtBQWQsQ0FBb0JiLE1BQXBCLEVBQTRCd0IsT0FBNUIsQ0FBb0MsWUFBcEMsQ0FBckI7QUFDQSxTQUFPRCxNQUFQO0FBQ0gsQyxDQUNEOzs7QUFDQSxlQUFlckIsYUFBZixDQUE2Qk8sRUFBN0IsRUFBaUNMLFVBQWpDLEVBQTZDO0FBQ3pDO0FBQ0E7QUFDQTtBQUVBLE1BQUlILEtBQUssR0FBRyxNQUFNWCxLQUFLLENBQUMrQixLQUFOLEdBQ2JSLEtBRGEsQ0FDUDtBQUNIVixJQUFBQSxXQUFXLEVBQUVNLEVBRFY7QUFFSGdCLElBQUFBLFlBQVksRUFBRTtBQUZYLEdBRE8sRUFLYkMsS0FMYSxFQUFsQjs7QUFPQSxNQUFJLENBQUN6QixLQUFMLEVBQVk7QUFDUjtBQUNBQSxJQUFBQSxLQUFLLEdBQUcsTUFBTVgsS0FBSyxDQUFDK0IsS0FBTixHQUFjZCxNQUFkLENBQXFCO0FBQy9CSixNQUFBQSxXQUFXLEVBQUVNLEVBRGtCO0FBRS9CTCxNQUFBQSxVQUYrQjtBQUcvQnFCLE1BQUFBLFlBQVksRUFBRSxLQUhpQjtBQUkvQkUsTUFBQUEsZUFBZSxFQUFFO0FBSmMsS0FBckIsQ0FBZDtBQU1IOztBQUVELFNBQU8xQixLQUFQO0FBQ0g7O0FBRUQsZUFBZVMsUUFBZixDQUF3QkQsRUFBeEIsRUFBNEI7QUFDeEIsUUFBTVIsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY08sUUFBZCxDQUF1Qm5CLEVBQXZCLENBQXBCO0FBQ0EsU0FBT1IsS0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgT3JkZXIgPSByZXF1aXJlKFwiLi9vcmRlci5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlT3JkZXIsXG4gICAgdXBkYXRlT3JkZXJJdGVtLFxuICAgIHVwZGF0ZU9yZGVyLFxuICAgIGdldE9yZGVyQnlJZCxcbiAgICBnZXRPd25PcmRlcnMsXG4gICAgZ2V0Q29tcGFueU9yZGVycyxcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9yZGVyKHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0X29yX2NyZWF0ZShwYXJhbXMuY3VzdG9tZXJfaWQsIHBhcmFtcy5jb21wYW55X2lkKTtcblxuICAgIC8vIGluc2VydCB0aGUgaXRlbSB0byB0aGUgb3JkZXIgaXRlbSB0YWJsZVxuICAgIGNvbnN0IG9yZGVySXRlbSA9IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLmluc2VydCh7IGl0ZW06IHBhcmFtcy5pdGVtLmlkLCBvcmRlcjogb3JkZXIuaWQgfSk7XG5cbiAgICByZXR1cm4gb3JkZXJJdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVPcmRlckl0ZW0oaWQsIHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0T3JkZXIoaWQpO1xuXG4gICAgLy8gY2hlY2sgaXRlbSBxdWFudGl0eVxuICAgIGlmIChwYXJhbXMuaXRlbS5xdWFudGl0eSA8PSAwKSB7XG4gICAgICAgIC8vIHJlbW92ZSBmcm9tIGNhcnRcbiAgICAgICAgYXdhaXQgb3JkZXJcbiAgICAgICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgICAgIC5kZWxldGUoKVxuICAgICAgICAgICAgLndoZXJlKHsgaXRlbTogcGFyYW1zLml0ZW0uaWQgfSk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG9yZGVySXRlbSA9IGF3YWl0IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLnBhdGNoKHtcbiAgICAgICAgICAgIHF1YW50aXR5OiBwYXJhbXMuaXRlbS5xdWFudGl0eSxcbiAgICAgICAgfSlcbiAgICAgICAgLndoZXJlKHtcbiAgICAgICAgICAgIGl0ZW06IHBhcmFtcy5pdGVtLmlkLFxuICAgICAgICB9KVxuICAgICAgICAucmV0dXJuaW5nKFwiKlwiKTtcblxuICAgIHJldHVybiBvcmRlckl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZU9yZGVyKGlkLCB1c2VyLCBwYXJhbXMpIHtcbiAgICBsZXQgb3JkZXIgPSBhd2FpdCBnZXRPcmRlcihpZCkud2l0aEdyYXBoRmV0Y2hlZChcImNvbXBhbnlcIik7XG5cbiAgICBpZiAob3JkZXIuY29tcGFueS5pZCAhPT0gdXNlci5jb21wYW55LmlkKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFwiVW5hdGhvcml6ZWRcIik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICAvLyBha2EgdXBkYXRlIG9yZGVyIHRhYmxlXG4gICAgb3JkZXIgPSBhd2FpdCBPcmRlci5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPcmRlckJ5SWQoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IGdldE9yZGVyKGlkKS53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIik7XG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPd25PcmRlcnMoaWQpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IGN1c3RvbWVyX2lkOiBpZCB9KVxuICAgICAgICAub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q29tcGFueU9yZGVycyhwYXJhbXMpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpLndoZXJlKHBhcmFtcykub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cbi8vID09PT09PT09PT09PT09PT09PT09PT09aGVscGVycz09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRfb3JfY3JlYXRlKGlkLCBjb21wYW55X2lkKSB7XG4gICAgLy8gY2hlY2tzIGZvciB0aGUgZXhpc3RlbmNlIG9mIGEgY3VzdG9tZXIgb3JkZXJcbiAgICAvLyBpZiBpdCBleGlzdHMgYWRkIHRoZSBuZXcgaXRlbXMgb24gaXRcbiAgICAvLyBpZiBpdCBkb2VzIG5vdCBleGlzdCBpdCBjcmVhdGVzIG9uZVxuXG4gICAgbGV0IG9yZGVyID0gYXdhaXQgT3JkZXIucXVlcnkoKVxuICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgY3VzdG9tZXJfaWQ6IGlkLFxuICAgICAgICAgICAgb3JkZXJfc3RhdHVzOiBcIk5ld1wiLFxuICAgICAgICB9KVxuICAgICAgICAuZmlyc3QoKTtcblxuICAgIGlmICghb3JkZXIpIHtcbiAgICAgICAgLy8gY3JlYXRlIG9uZVxuICAgICAgICBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuaW5zZXJ0KHtcbiAgICAgICAgICAgIGN1c3RvbWVyX2lkOiBpZCxcbiAgICAgICAgICAgIGNvbXBhbnlfaWQsXG4gICAgICAgICAgICBvcmRlcl9zdGF0dXM6IFwiTmV3XCIsXG4gICAgICAgICAgICBwdXJjaGFzZV9zdGF0dXM6IFwidW5wYWlkXCIsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBvcmRlcjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0T3JkZXIoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuZmluZEJ5SWQoaWQpO1xuICAgIHJldHVybiBvcmRlcjtcbn1cbiJdfQ==",
            "originalCode": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n    createOrder,\n    updateOrderItem,\n    updateOrder,\n    getOrderById,\n    getOwnOrders,\n    getCompanyOrders,\n};\n\nasync function createOrder(params) {\n    const order = await get_or_create(params.customer_id, params.company_id);\n\n    // insert the item to the order item table\n    const orderItem = order\n        .$relatedQuery(\"items\")\n        .insert({ item: params.item.id, order: order.id });\n\n    return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n    const order = await getOrder(id);\n\n    // check item quantity\n    if (params.item.quantity <= 0) {\n        // remove from cart\n        await order\n            .$relatedQuery(\"items\")\n            .delete()\n            .where({ item: params.item.id });\n\n        return;\n    }\n\n    const orderItem = await order\n        .$relatedQuery(\"items\")\n        .patch({\n            quantity: params.item.quantity,\n        })\n        .where({\n            item: params.item.id,\n        })\n        .returning(\"*\");\n\n    return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n    let order = await getOrder(id).withGraphFetched(\"company\");\n\n    if (order.company.id !== user.company.id) {\n        const error = new Error(\"Unathorized\");\n        throw error;\n    }\n    // aka update order table\n    order = await Order.query().patchAndFetchById(id, params);\n\n    return order;\n}\n\nasync function getOrderById(id) {\n    const order = await getOrder(id).withGraphFetched(\"items\");\n    return order;\n}\n\nasync function getOwnOrders(id) {\n    const orders = await Order.query()\n        .where({ customer_id: id })\n        .orderBy(\"created_at\");\n    return orders;\n}\n\nasync function getCompanyOrders(params) {\n    const orders = await Order.query().where(params).orderBy(\"created_at\");\n    return orders;\n}\n// =======================helpers==========================\nasync function get_or_create(id, company_id) {\n    // checks for the existence of a customer order\n    // if it exists add the new items on it\n    // if it does not exist it creates one\n\n    let order = await Order.query()\n        .where({\n            customer_id: id,\n            order_status: \"New\",\n        })\n        .first();\n\n    if (!order) {\n        // create one\n        order = await Order.query().insert({\n            customer_id: id,\n            company_id,\n            order_status: \"New\",\n            purchase_status: \"unpaid\",\n        });\n    }\n\n    return order;\n}\n\nasync function getOrder(id) {\n    const order = await Order.query().findById(id);\n    return order;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2d/orderservice_2dd8ed46d0ebb5dcc0edc8f1fb86b7ac.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2966",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10175,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10172,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 253,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 543,
                    "endOffset": 993,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 995,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1324,
                    "endOffset": 1437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1439,
                    "endOffset": 1584,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1586,
                    "endOffset": 1720,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get_or_create",
                "ranges": [
                  {
                    "startOffset": 1783,
                    "endOffset": 2270,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrder",
                "ranges": [
                  {
                    "startOffset": 2272,
                    "endOffset": 2369,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n  static get tableName() {\n    return tableNames.order;\n  }\n\n  static get relationMappings() {\n    const Company = require(\"../company.model\");\n\n    const User = require(\"../../user/user.model\");\n\n    const OrderItem = require(\"./orderItem/orderItem.model\");\n\n    return {\n      items: {\n        relation: Model.HasManyRelation,\n        modelClass: OrderItem,\n        join: {\n          from: `${tableNames.order}.id`,\n          to: `${tableNames.orderItem}.order_id`\n        }\n      },\n      customer: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.order}.customer_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Company,\n        join: {\n          from: `${tableNames.order}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Order;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJkYiIsIk9yZGVyIiwidGFibGVOYW1lIiwib3JkZXIiLCJyZWxhdGlvbk1hcHBpbmdzIiwiQ29tcGFueSIsIlVzZXIiLCJPcmRlckl0ZW0iLCJpdGVtcyIsInJlbGF0aW9uIiwiSGFzTWFueVJlbGF0aW9uIiwibW9kZWxDbGFzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJvcmRlckl0ZW0iLCJjdXN0b21lciIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwidXNlciIsImNvbXBhbnkiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsS0FBTixTQUFvQkosS0FBcEIsQ0FBMEI7QUFDdEIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLEtBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUMsT0FBTyxHQUFHUCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVEsSUFBSSxHQUFHUixPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsVUFBTVMsU0FBUyxHQUFHVCxPQUFPLENBQUMsNkJBQUQsQ0FBekI7O0FBRUEsV0FBTztBQUNIVSxNQUFBQSxLQUFLLEVBQUU7QUFDSEMsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNhLGVBRGI7QUFFSEMsUUFBQUEsVUFBVSxFQUFFSixTQUZUO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWQsVUFBVSxDQUFDSSxLQUFNLEtBRHhCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZixVQUFVLENBQUNnQixTQUFVO0FBRjFCO0FBSEgsT0FESjtBQVVIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEVjtBQUVOTixRQUFBQSxVQUFVLEVBQUVMLElBRk47QUFHTk0sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sY0FEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ21CLElBQUs7QUFGckI7QUFIQSxPQVZQO0FBa0JIQyxNQUFBQSxPQUFPLEVBQUU7QUFDTFYsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEWDtBQUVMTixRQUFBQSxVQUFVLEVBQUVOLE9BRlA7QUFHTE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sYUFEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ29CLE9BQVE7QUFGeEI7QUFIRDtBQWxCTixLQUFQO0FBMkJIOztBQXJDcUI7O0FBd0MxQnRCLEtBQUssQ0FBQ3VCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLEtBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IHRhYmxlTmFtZXMgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29uc3RhbnRzL3RhYmxlTmFtZXNcIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcblxuY2xhc3MgT3JkZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLm9yZGVyO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uLy4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgT3JkZXJJdGVtID0gcmVxdWlyZShcIi4vb3JkZXJJdGVtL29yZGVySXRlbS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuSGFzTWFueVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IE9yZGVySXRlbSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMub3JkZXJJdGVtfS5vcmRlcl9pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGN1c3RvbWVyOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkJlbG9uZ3NUb09uZVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IFVzZXIsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLm9yZGVyfS5jdXN0b21lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPcmRlcjtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n    static get tableName() {\n        return tableNames.order;\n    }\n\n    static get relationMappings() {\n        const Company = require(\"../company.model\");\n        const User = require(\"../../user/user.model\");\n        const OrderItem = require(\"./orderItem/orderItem.model\");\n\n        return {\n            items: {\n                relation: Model.HasManyRelation,\n                modelClass: OrderItem,\n                join: {\n                    from: `${tableNames.order}.id`,\n                    to: `${tableNames.orderItem}.order_id`,\n                },\n            },\n\n            customer: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.order}.customer_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Company,\n                join: {\n                    from: `${tableNames.order}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Order;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/66/ordermodel_662f5b9ea6475bcabfd0d4f0bf405dda.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2967",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5243,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5240,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Order",
                "ranges": [
                  {
                    "startOffset": 230,
                    "endOffset": 230,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 267,
                    "endOffset": 317,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 328,
                    "endOffset": 1185,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst role = require(\"../../../../utils/role\");\n\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n  orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVySXRlbS5yb3V0ZXMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhdXRoIiwiQXV0aCIsInJvbGUiLCJvcmRlclNlcnZpY2UiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInB1dCIsImN1c3RvbWVyIiwidXBkYXRlT3JkZXJJdGVtIiwicmVxIiwicmVzIiwibmV4dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJGLE9BQU8sQ0FBQywrQkFBRCxDQUE5Qjs7QUFDQSxNQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyx3QkFBRCxDQUFwQjs7QUFDQSxNQUFNSSxZQUFZLEdBQUdKLE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFFQSxNQUFNSyxNQUFNLEdBQUdOLE9BQU8sQ0FBQ08sTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQk4sSUFBSSxDQUFDQyxJQUFJLENBQUNNLFFBQU4sQ0FBcEIsRUFBcUNDLGVBQXJDOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxHQUE5QixFQUFtQ0MsSUFBbkMsRUFBeUM7QUFDckNULEVBQUFBLFlBQVksQ0FBQ00sZUFBYjtBQUNIOztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCByb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi4vb3JkZXIuc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wdXQoXCIvXCIsIEF1dGgocm9sZS5jdXN0b21lciksIHVwZGF0ZU9yZGVySXRlbSk7XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVySXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZS51cGRhdGVPcmRlckl0ZW0oKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst role = require(\"../../../../utils/role\");\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n    orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/orderItemroutes_440b1db2888128c60482407cf8bcef31.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2968",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/orderItem/orderItem.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2184,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2181,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 406,
                    "endOffset": 484,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        }
      ]
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1609772027402,
        "runtime": 788,
        "slow": false,
        "start": 1609772026614
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/test/api.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/v1"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/v1 responds with a json message",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "responds with a json message"
        },
        {
          "ancestorTitles": [
            "GET /api/v1/emojis"
          ],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/v1/emojis responds with a json message",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "responds with a json message"
        }
      ],
      "failureMessage": null,
      "v8Coverage": [
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst morgan = require(\"morgan\");\n\nconst compression = require(\"compression\");\n\nconst helmet = require(\"helmet\");\n\nconst cors = require(\"cors\"); // Swagger stuff\n\n\nrequire(\"rootpath\")();\n\nconst swaggerUi = require(\"swagger-ui-express\");\n\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\n\nconst api = require(\"./api\");\n\nconst app = express();\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\napp.get(\"/\", (req, res) => {\n  res.json({\n    message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\"\n  });\n});\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vcmdhbiIsImNvbXByZXNzaW9uIiwiaGVsbWV0IiwiY29ycyIsInN3YWdnZXJVaSIsInN3YWdnZXJEb2MiLCJjb25maWciLCJtaWRkbGV3YXJlcyIsImFwaSIsImFwcCIsInVzZSIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJtZXNzYWdlIiwic2VydmUiLCJzZXR1cCIsIm5vdEZvdW5kIiwiZXJyb3JIYW5kbGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBM0I7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCLEMsQ0FFQTs7O0FBQ0FBLE9BQU8sQ0FBQyxVQUFELENBQVA7O0FBQ0EsTUFBTUssU0FBUyxHQUFHTCxPQUFPLENBQUMsb0JBQUQsQ0FBekI7O0FBQ0EsTUFBTU0sVUFBVSxHQUFHTixPQUFPLENBQUMsc0JBQUQsQ0FBMUI7O0FBRUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JPLE1BQWxCOztBQUVBLE1BQU1DLFdBQVcsR0FBR1IsT0FBTyxDQUFDLGVBQUQsQ0FBM0I7O0FBQ0EsTUFBTVMsR0FBRyxHQUFHVCxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQSxNQUFNVSxHQUFHLEdBQUdYLE9BQU8sRUFBbkI7QUFFQVcsR0FBRyxDQUFDQyxHQUFKLENBQVFWLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQVMsR0FBRyxDQUFDQyxHQUFKLENBQVFSLE1BQU0sRUFBZDtBQUNBTyxHQUFHLENBQUNDLEdBQUosQ0FBUVAsSUFBSSxFQUFaO0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRVCxXQUFXLEVBQW5CO0FBQ0FRLEdBQUcsQ0FBQ0MsR0FBSixDQUFRWixPQUFPLENBQUNhLElBQVIsRUFBUjtBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxHQUFSLEVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTO0FBQ0xJLElBQUFBLE9BQU8sRUFBRTtBQURKLEdBQVQ7QUFHSCxDQUpEO0FBTUFOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJGLEdBQW5CO0FBQ0FDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUJOLFNBQVMsQ0FBQ1ksS0FBL0IsRUFBc0NaLFNBQVMsQ0FBQ2EsS0FBVixDQUFnQlosVUFBaEIsQ0FBdEM7QUFFQUksR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1csUUFBcEI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1ksWUFBcEI7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoXCJtb3JnYW5cIik7XG5jb25zdCBjb21wcmVzc2lvbiA9IHJlcXVpcmUoXCJjb21wcmVzc2lvblwiKTtcbmNvbnN0IGhlbG1ldCA9IHJlcXVpcmUoXCJoZWxtZXRcIik7XG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XG5cbi8vIFN3YWdnZXIgc3R1ZmZcbnJlcXVpcmUoXCJyb290cGF0aFwiKSgpO1xuY29uc3Qgc3dhZ2dlclVpID0gcmVxdWlyZShcInN3YWdnZXItdWktZXhwcmVzc1wiKTtcbmNvbnN0IHN3YWdnZXJEb2MgPSByZXF1aXJlKFwiLi4vZG9jcy9zd2FnZ2VyLmpzb25cIik7XG5cbnJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKCk7XG5cbmNvbnN0IG1pZGRsZXdhcmVzID0gcmVxdWlyZShcIi4vbWlkZGxld2FyZXNcIik7XG5jb25zdCBhcGkgPSByZXF1aXJlKFwiLi9hcGlcIik7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xuYXBwLnVzZShoZWxtZXQoKSk7XG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGNvbXByZXNzaW9uKCkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbmFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogXCLwn6aE8J+MiOKcqPCfkYvwn4yO8J+MjfCfjI/inKjwn4yI8J+mhFwiLFxuICAgIH0pO1xufSk7XG5cbmFwcC51c2UoXCIvYXBpL3YxXCIsIGFwaSk7XG5hcHAudXNlKFwiL2FwaS1kb2NzXCIsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2MpKTtcblxuYXBwLnVzZShtaWRkbGV3YXJlcy5ub3RGb3VuZCk7XG5hcHAudXNlKG1pZGRsZXdhcmVzLmVycm9ySGFuZGxlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
            "originalCode": "const express = require(\"express\");\nconst morgan = require(\"morgan\");\nconst compression = require(\"compression\");\nconst helmet = require(\"helmet\");\nconst cors = require(\"cors\");\n\n// Swagger stuff\nrequire(\"rootpath\")();\nconst swaggerUi = require(\"swagger-ui-express\");\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\nconst api = require(\"./api\");\n\nconst app = express();\n\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\n\napp.get(\"/\", (req, res) => {\n    res.json({\n        message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\",\n    });\n});\n\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\n\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\n\nmodule.exports = app;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/68/app_6855482f668a469a3eba3734dab1ce4c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2126",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/app.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4132,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4129,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 669,
                    "endOffset": 739,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "function notFound(req, res, next) {\n  res.status(404);\n  const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n  next(error);\n}\n/* eslint-disable no-unused-vars */\n\n\nfunction errorHandler(err, req, res, next) {\n  /* eslint-enable no-unused-vars */\n  const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n  res.status(statusCode);\n  if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n  res.json({\n    message: err.message,\n    stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack\n  });\n}\n\nmodule.exports = {\n  notFound,\n  errorHandler\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm5vdEZvdW5kIiwicmVxIiwicmVzIiwibmV4dCIsInN0YXR1cyIsImVycm9yIiwiRXJyb3IiLCJvcmlnaW5hbFVybCIsImVycm9ySGFuZGxlciIsImVyciIsInN0YXR1c0NvZGUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSIsImpzb24iLCJzdGFjayIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCQyxHQUF2QixFQUE0QkMsSUFBNUIsRUFBa0M7QUFDOUJELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVg7QUFDQSxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsS0FBSixDQUFXLG9CQUFtQkwsR0FBRyxDQUFDTSxXQUFZLEVBQTlDLENBQWQ7QUFDQUosRUFBQUEsSUFBSSxDQUFDRSxLQUFELENBQUo7QUFDSDtBQUVEOzs7QUFDQSxTQUFTRyxZQUFULENBQXNCQyxHQUF0QixFQUEyQlIsR0FBM0IsRUFBZ0NDLEdBQWhDLEVBQXFDQyxJQUFyQyxFQUEyQztBQUN2QztBQUNBLFFBQU1PLFVBQVUsR0FBR1IsR0FBRyxDQUFDUSxVQUFKLEtBQW1CLEdBQW5CLEdBQXlCUixHQUFHLENBQUNRLFVBQTdCLEdBQTBDLEdBQTdEO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXTSxVQUFYO0FBQ0EsTUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixHQUFHLENBQUNPLE9BQWhCO0FBQzNDZCxFQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUztBQUNMRCxJQUFBQSxPQUFPLEVBQUVQLEdBQUcsQ0FBQ08sT0FEUjtBQUVMRSxJQUFBQSxLQUFLLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQXpCLEdBQXdDLElBQXhDLEdBQStDSixHQUFHLENBQUNTO0FBRnJELEdBQVQ7QUFJSDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JwQixFQUFBQSxRQURhO0FBRWJRLEVBQUFBO0FBRmEsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBub3RGb3VuZChyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcy5zdGF0dXMoNDA0KTtcbiAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihg8J+UjSAtIE5vdCBGb3VuZCAtICR7cmVxLm9yaWdpbmFsVXJsfWApO1xuICAgIG5leHQoZXJyb3IpO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuZnVuY3Rpb24gZXJyb3JIYW5kbGVyKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG4gICAgY29uc3Qgc3RhdHVzQ29kZSA9IHJlcy5zdGF0dXNDb2RlICE9PSAyMDAgPyByZXMuc3RhdHVzQ29kZSA6IDUwMDtcbiAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIGNvbnNvbGUubG9nKGVyci5tZXNzYWdlKTtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgICBzdGFjazogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gXCLwn6WeXCIgOiBlcnIuc3RhY2ssXG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5vdEZvdW5kLFxuICAgIGVycm9ySGFuZGxlcixcbn07XG4iXX0=",
            "originalCode": "function notFound(req, res, next) {\n    res.status(404);\n    const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n    next(error);\n}\n\n/* eslint-disable no-unused-vars */\nfunction errorHandler(err, req, res, next) {\n    /* eslint-enable no-unused-vars */\n    const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n    res.status(statusCode);\n    if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n    res.json({\n        message: err.message,\n        stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack,\n    });\n}\n\nmodule.exports = {\n    notFound,\n    errorHandler,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0d/middlewares_0d2bc57a77c05a727da8aec38de48282.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2259",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/middlewares.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3010,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3007,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "notFound",
                "ranges": [
                  {
                    "startOffset": 89,
                    "endOffset": 226,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "errorHandler",
                "ranges": [
                  {
                    "startOffset": 265,
                    "endOffset": 626,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\nrouter.get(\"/\", (req, res) => {\n  res.json({\n    message: \"API - 👋🌎🌍🌏\"\n  });\n});\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwianNvbiIsIm1lc3NhZ2UiLCJ1c2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFFQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFDTEMsSUFBQUEsT0FBTyxFQUFFO0FBREosR0FBVDtBQUdILENBSkQ7QUFNQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsV0FBWCxFQUF3QlIsT0FBTyxDQUFDLG9CQUFELENBQS9CO0FBQ0FDLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLFVBQVgsRUFBdUJSLE9BQU8sQ0FBQywwQkFBRCxDQUE5QjtBQUVBUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IFwiQVBJIC0g8J+Ri/CfjI7wn4yN8J+Mj1wiLFxuICAgIH0pO1xufSk7XG5cbnJvdXRlci51c2UoXCIvYWNjb3VudHNcIiwgcmVxdWlyZShcIi4vYXV0aC9hdXRoLnJvdXRlc1wiKSk7XG5yb3V0ZXIudXNlKFwiL2NvbXBhbnlcIiwgcmVxdWlyZShcIi4vY29tcGFueS9jb21wYW55LnJvdXRlc1wiKSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
            "originalCode": "const express = require(\"express\");\n\nconst router = express.Router();\n\nrouter.get(\"/\", (req, res) => {\n    res.json({\n        message: \"API - 👋🌎🌍🌏\",\n    });\n});\n\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/46/index_46150bc44a91011b69db233a13fb0837.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2260",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/index.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1667,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1664,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 175,
                    "endOffset": 241,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst {\n  signinSchema,\n  signupSchema,\n  updateSchema,\n  verifyEmailSchema\n} = require(\"./auth.validators\");\n\nconst authService = require(\"./auth.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\nmodule.exports = router;\n\nfunction login(req, res, next) {\n  const {\n    email,\n    password\n  } = req.body;\n  authService.login({\n    email,\n    password\n  }).then(({\n    user,\n    token\n  }) => {\n    res.json({\n      user,\n      token\n    });\n  }).catch(next);\n}\n\nfunction register(req, res, next) {\n  req.body.role = Role.owner;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n  req.body.role = Role.customer;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n  authService.verifyEmail(req.body).then(() => res.json({\n    message: \"Verification successfull\"\n  })).catch(next);\n}\n\nfunction getAll(req, res, next) {\n  authService.getAll().then(accounts => res.json(accounts)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  // users can get their own account and admin can get any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.getById(req.params.id).then(account => account ? res.json(account) : res.sendStatus(404)).catch(next);\n}\n\nfunction create(req, res, next) {\n  authService.create(req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // users can update their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.update(req.params.id, req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction _delete(req, res, next) {\n  // users can delete their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.delete(req.param.id).then(() => res.json({\n    message: \"Account deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\nconst router = express.Router();\nconst {\n    signinSchema,\n    signupSchema,\n    updateSchema,\n    verifyEmailSchema,\n} = require(\"./auth.validators\");\nconst authService = require(\"./auth.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\n\nmodule.exports = router;\n\nfunction login(req, res, next) {\n    const { email, password } = req.body;\n    authService\n        .login({ email, password })\n        .then(({ user, token }) => {\n            res.json({ user, token });\n        })\n        .catch(next);\n}\n\nfunction register(req, res, next) {\n    req.body.role = Role.owner;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n    req.body.role = Role.customer;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n    authService\n        .verifyEmail(req.body)\n        .then(() => res.json({ message: \"Verification successfull\" }))\n        .catch(next);\n}\n\nfunction getAll(req, res, next) {\n    authService\n        .getAll()\n        .then((accounts) => res.json(accounts))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    // users can get their own account and admin can get any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .getById(req.params.id)\n        .then((account) => (account ? res.json(account) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction create(req, res, next) {\n    authService\n        .create(req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // users can update their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .update(req.params.id, req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction _delete(req, res, next) {\n    // users can delete their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .delete(req.param.id)\n        .then(() =>\n            res.json({\n                message: \"Account deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/75/authroutes_75bf7888c8e4ac0a10e44194cc103f96.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2261",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 15260,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 15257,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 919,
                    "endOffset": 1157,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 1159,
                    "endOffset": 1486,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "registerCustomer",
                "ranges": [
                  {
                    "startOffset": 1488,
                    "endOffset": 1826,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1828,
                    "endOffset": 1985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 1987,
                    "endOffset": 2095,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2097,
                    "endOffset": 2472,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 2474,
                    "endOffset": 2588,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2590,
                    "endOffset": 2944,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2946,
                    "endOffset": 3350,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n  const schema = Joi.object({\n    firstName: Joi.string().required(),\n    lastName: Joi.string().required(),\n    phoneNumber: Joi.string().min(10).max(15).required(),\n    role: Joi.string().min(5).required(),\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required(),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n  const schema = Joi.object({\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    firstName: Joi.string().empty(\"\"),\n    lastName: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    role: Joi.string().min(5).empty(\"\"),\n    phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n    password: Joi.string().min(8).empty(\"\"),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\")\n  }; //  TODO figure out how admin can update role\n\n  const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n  validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n  const schema = Joi.object({\n    token: Joi.string().required()\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsInNpZ251cFNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJmaXJzdE5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImxhc3ROYW1lIiwicGhvbmVOdW1iZXIiLCJtaW4iLCJtYXgiLCJyb2xlIiwiZW1haWwiLCJwYXNzd29yZCIsImNvbmZpcm1QYXNzd29yZCIsInZhbGlkIiwicmVmIiwic2lnbmluU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSIsIndpdGgiLCJ2ZXJpZnlFbWFpbFNjaGVtYSIsInRva2VuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUNBLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLG9DQUFELENBQS9COztBQUVBRSxPQUFPLENBQUNDLFlBQVIsR0FBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QkMsSUFBQUEsU0FBUyxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYUMsUUFBYixFQURXO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRlk7QUFHdEJFLElBQUFBLFdBQVcsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsRUFBakIsRUFBcUJDLEdBQXJCLENBQXlCLEVBQXpCLEVBQTZCSixRQUE3QixFQUhTO0FBSXRCSyxJQUFBQSxJQUFJLEVBQUVqQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFKZ0I7QUFLdEJNLElBQUFBLEtBQUssRUFBRWxCLEdBQUcsQ0FBQ1csTUFBSixHQUFhTyxLQUFiLEdBQXFCTixRQUFyQixFQUxlO0FBTXRCTyxJQUFBQSxRQUFRLEVBQUVuQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFOWTtBQU90QlEsSUFBQUEsZUFBZSxFQUFFcEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFVLEtBQWIsQ0FBbUJyQixHQUFHLENBQUNzQixHQUFKLENBQVEsVUFBUixDQUFuQixFQUF3Q1YsUUFBeEM7QUFQSyxHQUFYLENBQWY7QUFTQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FYRDs7QUFhQUwsT0FBTyxDQUFDb0IsWUFBUixHQUF1QixDQUFDbEIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QlMsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJOLFFBQXJCLEVBRGU7QUFFdEJPLElBQUFBLFFBQVEsRUFBRW5CLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CSCxRQUFwQjtBQUZZLEdBQVgsQ0FBZjtBQUlBVixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNxQixZQUFSLEdBQXVCLENBQUNuQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNa0IsV0FBVyxHQUFHO0FBQ2hCZixJQUFBQSxTQUFTLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhZSxLQUFiLENBQW1CLEVBQW5CLENBREs7QUFFaEJiLElBQUFBLFFBQVEsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFlLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGTTtBQUdoQlIsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJRLEtBQXJCLENBQTJCLEVBQTNCLENBSFM7QUFJaEJULElBQUFBLElBQUksRUFBRWpCLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CVyxLQUFwQixDQUEwQixFQUExQixDQUpVO0FBS2hCWixJQUFBQSxXQUFXLEVBQUVkLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLEVBQWpCLEVBQXFCQyxHQUFyQixDQUF5QixFQUF6QixFQUE2QlUsS0FBN0IsQ0FBbUMsRUFBbkMsQ0FMRztBQU1oQlAsSUFBQUEsUUFBUSxFQUFFbkIsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsQ0FBakIsRUFBb0JXLEtBQXBCLENBQTBCLEVBQTFCLENBTk07QUFPaEJOLElBQUFBLGVBQWUsRUFBRXBCLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CckIsR0FBRyxDQUFDc0IsR0FBSixDQUFRLFVBQVIsQ0FBbkIsRUFBd0NJLEtBQXhDLENBQThDLEVBQTlDO0FBUEQsR0FBcEIsQ0FEdUMsQ0FXdkM7O0FBQ0EsUUFBTWxCLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdnQixXQUFYLEVBQXdCRSxJQUF4QixDQUE2QixVQUE3QixFQUF5QyxpQkFBekMsQ0FBZjtBQUVBekIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FmRDs7QUFpQkFMLE9BQU8sQ0FBQ3lCLGlCQUFSLEdBQTRCLENBQUN2QixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCb0IsSUFBQUEsS0FBSyxFQUFFN0IsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWI7QUFEZSxHQUFYLENBQWY7QUFHQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FMRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5zaWdudXBTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgZmlyc3ROYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5yZXF1aXJlZCgpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLnJlcXVpcmVkKCksXG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgICAgICBjb25maXJtUGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS52YWxpZChKb2kucmVmKFwicGFzc3dvcmRcIikpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMuc2lnbmluU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgIH0pO1xuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnVwZGF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYVJ1bGVzID0ge1xuICAgICAgICBmaXJzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZW1haWw6IEpvaS5zdHJpbmcoKS5lbWFpbCgpLmVtcHR5KFwiXCIpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLmVtcHR5KFwiXCIpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5lbXB0eShcIlwiKSxcbiAgICAgICAgcGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS5taW4oOCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGNvbmZpcm1QYXNzd29yZDogSm9pLnN0cmluZygpLnZhbGlkKEpvaS5yZWYoXCJwYXNzd29yZFwiKSkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIC8vICBUT0RPIGZpZ3VyZSBvdXQgaG93IGFkbWluIGNhbiB1cGRhdGUgcm9sZVxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpLndpdGgoXCJwYXNzd29yZFwiLCBcImNvbmZpcm1QYXNzd29yZFwiKTtcblxuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnZlcmlmeUVtYWlsU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIHRva2VuOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n    const schema = Joi.object({\n        firstName: Joi.string().required(),\n        lastName: Joi.string().required(),\n        phoneNumber: Joi.string().min(10).max(15).required(),\n        role: Joi.string().min(5).required(),\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n    const schema = Joi.object({\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        firstName: Joi.string().empty(\"\"),\n        lastName: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        role: Joi.string().min(5).empty(\"\"),\n        phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n        password: Joi.string().min(8).empty(\"\"),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\"),\n    };\n\n    //  TODO figure out how admin can update role\n    const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n\n    validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n    const schema = Joi.object({\n        token: Joi.string().required(),\n    });\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/93/authvalidators_93d8fdb0df4bea4d1ddc0a198e2ff769.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2262",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7592,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7589,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.signupSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 651,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.signinSchema",
                "ranges": [
                  {
                    "startOffset": 677,
                    "endOffset": 863,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 889,
                    "endOffset": 1438,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.verifyEmailSchema",
                "ranges": [
                  {
                    "startOffset": 1469,
                    "endOffset": 1601,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n  const options = {\n    abortEarly: false,\n    // include all errors\n    allowUnknown: true,\n    // ignore unknown props\n    stripUnknown: true // remove unknown props\n\n  };\n  const {\n    error,\n    value\n  } = schema.validate(req.body, options);\n\n  if (error) {\n    next(`Validation error: ${error.details.map(x => x.message).join(\", \")}`);\n  } else {\n    req.body = value;\n    next();\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRlUmVxdWVzdC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidmFsaWRhdGVSZXF1ZXN0IiwicmVxIiwibmV4dCIsInNjaGVtYSIsIm9wdGlvbnMiLCJhYm9ydEVhcmx5IiwiYWxsb3dVbmtub3duIiwic3RyaXBVbmtub3duIiwiZXJyb3IiLCJ2YWx1ZSIsInZhbGlkYXRlIiwiYm9keSIsImRldGFpbHMiLCJtYXAiLCJ4IiwibWVzc2FnZSIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLGVBQWpCOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQ0MsTUFBcEMsRUFBNEM7QUFDeEMsUUFBTUMsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLFVBQVUsRUFBRSxLQURBO0FBQ087QUFDbkJDLElBQUFBLFlBQVksRUFBRSxJQUZGO0FBRVE7QUFDcEJDLElBQUFBLFlBQVksRUFBRSxJQUhGLENBR1E7O0FBSFIsR0FBaEI7QUFNQSxRQUFNO0FBQUVDLElBQUFBLEtBQUY7QUFBU0MsSUFBQUE7QUFBVCxNQUFtQk4sTUFBTSxDQUFDTyxRQUFQLENBQWdCVCxHQUFHLENBQUNVLElBQXBCLEVBQTBCUCxPQUExQixDQUF6Qjs7QUFDQSxNQUFJSSxLQUFKLEVBQVc7QUFDUE4sSUFBQUEsSUFBSSxDQUNDLHFCQUFvQk0sS0FBSyxDQUFDSSxPQUFOLENBQ2hCQyxHQURnQixDQUNYQyxDQUFELElBQU9BLENBQUMsQ0FBQ0MsT0FERyxFQUVoQkMsSUFGZ0IsQ0FFWCxJQUZXLENBRUwsRUFIaEIsQ0FBSjtBQUtILEdBTkQsTUFNTztBQUNIZixJQUFBQSxHQUFHLENBQUNVLElBQUosR0FBV0YsS0FBWDtBQUNBUCxJQUFBQSxJQUFJO0FBQ1A7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gdmFsaWRhdGVSZXF1ZXN0O1xuXG5mdW5jdGlvbiB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpIHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBhYm9ydEVhcmx5OiBmYWxzZSwgLy8gaW5jbHVkZSBhbGwgZXJyb3JzXG4gICAgICAgIGFsbG93VW5rbm93bjogdHJ1ZSwgLy8gaWdub3JlIHVua25vd24gcHJvcHNcbiAgICAgICAgc3RyaXBVbmtub3duOiB0cnVlLCAvLyByZW1vdmUgdW5rbm93biBwcm9wc1xuICAgIH07XG5cbiAgICBjb25zdCB7IGVycm9yLCB2YWx1ZSB9ID0gc2NoZW1hLnZhbGlkYXRlKHJlcS5ib2R5LCBvcHRpb25zKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChcbiAgICAgICAgICAgIGBWYWxpZGF0aW9uIGVycm9yOiAke2Vycm9yLmRldGFpbHNcbiAgICAgICAgICAgICAgICAubWFwKCh4KSA9PiB4Lm1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgLmpvaW4oXCIsIFwiKX1gXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmJvZHkgPSB2YWx1ZTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH1cbn1cbiJdfQ==",
            "originalCode": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n    const options = {\n        abortEarly: false, // include all errors\n        allowUnknown: true, // ignore unknown props\n        stripUnknown: true, // remove unknown props\n    };\n\n    const { error, value } = schema.validate(req.body, options);\n    if (error) {\n        next(\n            `Validation error: ${error.details\n                .map((x) => x.message)\n                .join(\", \")}`\n        );\n    } else {\n        req.body = value;\n        next();\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/45/validateRequest_45057a96b73bd940f5249869883efa4a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2315",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/validateRequest.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2528,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2525,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "validateRequest",
                "ranges": [
                  {
                    "startOffset": 124,
                    "endOffset": 562,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const User = require(\"../user/user.model\");\n\nconst jwt = require(\"../../utils/jwt\");\n\nconst bcrypt = require(\"bcrypt\");\n\nconst crypto = require(\"crypto\");\n\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n  /**\n   * refreshtoken\n   * revoketoken\n   * forgotPassword\n   * validateResetToken\n   * validateResetToken\n   * resetPassword\n   */\n  login,\n  register,\n  verifyEmail,\n  create,\n  update,\n  getAll,\n  getById,\n  delete: _delete\n};\n\nasync function login({\n  email,\n  password\n}) {\n  const account = await getAccount({\n    email\n  });\n\n  if (!account || // !account.isVerified ||\n  !(await bcrypt.compare(password, account.password))) {\n    const error = new Error(\"Email or password is incorrect\");\n    throw error;\n  }\n\n  const token = await jwt.sign(account.toJSON());\n  return {\n    user: basicDetails(account),\n    token\n  };\n}\n\nasync function register(params, origin) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    // send already registered error in email to prevent account enumeration\n    // await sendAlreadyRegisteredEmail(params.email, origin);\n    const error = new Error('Email \"' + params.email + '\" is already registered');\n    throw error;\n  }\n\n  const account = await insertUser(params); // send email;\n  // await sendVerificationEmail(account, origin);\n\n  const token = await jwt.sign(account);\n  return {\n    user: account,\n    token\n  };\n}\n\nasync function verifyEmail({\n  token\n}) {\n  const account = await getAccount({\n    verificationToken: token\n  });\n  if (!account) throw \"Verification failed\";\n  await account.$query().patch({\n    verified: Date.now(),\n    isVerified: true,\n    verificationToken: null\n  });\n}\n\nasync function create(params) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    throw 'Email \"' + params.email + '\" is already registered';\n  }\n\n  const account = await insertUser(params); // TODO? bind to company here.\n\n  return basicDetails(account);\n}\n\nasync function update(id, params) {\n  const account = await getAccount({\n    id\n  }); // validate if email was changed\n\n  if (params.email && account.email !== params.email && (await getAccount({\n    email: params.email\n  }))) {\n    const error = new Error(`Email ${params.email} is already taken`);\n    throw error;\n  } // hash password if it was entered\n\n\n  if (params.password) {\n    params.password = await hash(params.password);\n  }\n\n  const updatedUser = await User.query().patchAndFetchById(id, { ...params\n  });\n  return basicDetails(updatedUser);\n} // TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\n\n\nasync function getAll() {\n  const accounts = await User.query();\n  return accounts.map(x => basicDetails(x));\n}\n\nasync function getById(id) {\n  const account = await getAccount({\n    id\n  });\n  return basicDetails(account);\n} // TODO MAKE IT ACCEPT AN ARRAY OF ID\n\n\nasync function _delete(id) {\n  await User.query().deleteById(id);\n}\n/**==================== Helpers ====================== */\n\n\nasync function getAccount(param) {\n  const account = await User.query().where({ ...param\n  }).first();\n  return account;\n}\n\nasync function insertUser(params) {\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    role,\n    phoneNumber\n  } = params; // hash password and verification token\n\n  const hashedPassword = await hash(password, 10);\n  const verificationToken = randomTokenString(); // create account\n\n  const account = await User.query().insert({\n    email,\n    firstName,\n    lastName,\n    password: hashedPassword,\n    phoneNumber,\n    role: role,\n    active: true,\n    isVerified: false,\n    verified: new Date().toISOString(),\n    verificationToken\n  });\n  return basicDetails(account);\n}\n\nasync function hash(password) {\n  return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n  return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  } = account;\n  return {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  };\n}\n\nasync function sendVerificationEmail(account, origin) {\n  let message;\n\n  if (origin) {\n    const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n    message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n  } else {\n    message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n  }\n\n  await sendEmail({\n    to: account.email,\n    subject: \"Sign-up verification API - Verify Email\",\n    html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`\n  });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n  let message;\n\n  if (origin) {\n    message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n  } else {\n    message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n  }\n\n  await sendEmail({\n    to: email,\n    subject: \"Sign-up Verification API - Email Already Registered\",\n    html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const User = require(\"../user/user.model\");\nconst jwt = require(\"../../utils/jwt\");\nconst bcrypt = require(\"bcrypt\");\nconst crypto = require(\"crypto\");\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n    /**\n     * refreshtoken\n     * revoketoken\n     * forgotPassword\n     * validateResetToken\n     * validateResetToken\n     * resetPassword\n     */\n    login,\n    register,\n    verifyEmail,\n    create,\n    update,\n    getAll,\n    getById,\n    delete: _delete,\n};\n\nasync function login({ email, password }) {\n    const account = await getAccount({ email });\n\n    if (\n        !account ||\n        // !account.isVerified ||\n        !(await bcrypt.compare(password, account.password))\n    ) {\n        const error = new Error(\"Email or password is incorrect\");\n        throw error;\n    }\n\n    const token = await jwt.sign(account.toJSON());\n\n    return {\n        user: basicDetails(account),\n        token,\n    };\n}\n\nasync function register(params, origin) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        // send already registered error in email to prevent account enumeration\n        // await sendAlreadyRegisteredEmail(params.email, origin);\n        const error = new Error(\n            'Email \"' + params.email + '\" is already registered'\n        );\n\n        throw error;\n    }\n\n    const account = await insertUser(params);\n\n    // send email;\n    // await sendVerificationEmail(account, origin);\n\n    const token = await jwt.sign(account);\n\n    return {\n        user: account,\n        token,\n    };\n}\n\nasync function verifyEmail({ token }) {\n    const account = await getAccount({ verificationToken: token });\n\n    if (!account) throw \"Verification failed\";\n\n    await account.$query().patch({\n        verified: Date.now(),\n        isVerified: true,\n        verificationToken: null,\n    });\n}\n\nasync function create(params) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        throw 'Email \"' + params.email + '\" is already registered';\n    }\n\n    const account = await insertUser(params);\n\n    // TODO? bind to company here.\n\n    return basicDetails(account);\n}\n\nasync function update(id, params) {\n    const account = await getAccount({ id });\n\n    // validate if email was changed\n    if (\n        params.email &&\n        account.email !== params.email &&\n        (await getAccount({ email: params.email }))\n    ) {\n        const error = new Error(`Email ${params.email} is already taken`);\n        throw error;\n    }\n\n    // hash password if it was entered\n    if (params.password) {\n        params.password = await hash(params.password);\n    }\n\n    const updatedUser = await User.query().patchAndFetchById(id, { ...params });\n\n    return basicDetails(updatedUser);\n}\n\n// TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\nasync function getAll() {\n    const accounts = await User.query();\n    return accounts.map((x) => basicDetails(x));\n}\n\nasync function getById(id) {\n    const account = await getAccount({ id });\n    return basicDetails(account);\n}\n\n// TODO MAKE IT ACCEPT AN ARRAY OF ID\nasync function _delete(id) {\n    await User.query().deleteById(id);\n}\n\n/**==================== Helpers ====================== */\nasync function getAccount(param) {\n    const account = await User.query()\n        .where({ ...param })\n        .first();\n    return account;\n}\n\nasync function insertUser(params) {\n    const { firstName, lastName, email, password, role, phoneNumber } = params;\n\n    // hash password and verification token\n    const hashedPassword = await hash(password, 10);\n    const verificationToken = randomTokenString();\n\n    // create account\n    const account = await User.query().insert({\n        email,\n        firstName,\n        lastName,\n        password: hashedPassword,\n        phoneNumber,\n        role: role,\n        active: true,\n        isVerified: false,\n        verified: new Date().toISOString(),\n        verificationToken,\n    });\n\n    return basicDetails(account);\n}\n\nasync function hash(password) {\n    return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n    return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n    const {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    } = account;\n    return {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    };\n}\n\nasync function sendVerificationEmail(account, origin) {\n    let message;\n    if (origin) {\n        const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n        message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n    } else {\n        message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n    }\n\n    await sendEmail({\n        to: account.email,\n        subject: \"Sign-up verification API - Verify Email\",\n        html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`,\n    });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n    let message;\n    if (origin) {\n        message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n    } else {\n        message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n    }\n\n    await sendEmail({\n        to: email,\n        subject: \"Sign-up Verification API - Email Already Registered\",\n        html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`,\n    });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/15/authservice_15139629ee8738726404e916e3a02258.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2316",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 22003,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 22000,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 546,
                    "endOffset": 944,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 946,
                    "endOffset": 1502,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1504,
                    "endOffset": 1779,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1781,
                    "endOffset": 2062,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2064,
                    "endOffset": 2621,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 2682,
                    "endOffset": 2793,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2795,
                    "endOffset": 2907,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2948,
                    "endOffset": 3015,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAccount",
                "ranges": [
                  {
                    "startOffset": 3076,
                    "endOffset": 3198,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "insertUser",
                "ranges": [
                  {
                    "startOffset": 3200,
                    "endOffset": 3791,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "hash",
                "ranges": [
                  {
                    "startOffset": 3793,
                    "endOffset": 3868,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "randomTokenString",
                "ranges": [
                  {
                    "startOffset": 3870,
                    "endOffset": 3951,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 3953,
                    "endOffset": 4226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendVerificationEmail",
                "ranges": [
                  {
                    "startOffset": 4228,
                    "endOffset": 4965,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendAlreadyRegisteredEmail",
                "ranges": [
                  {
                    "startOffset": 4967,
                    "endOffset": 5605,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst db = require(\"../../db\");\n\nclass User extends Model {\n  static get tableName() {\n    return tableNames.user;\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiVXNlciIsInRhYmxlTmFtZSIsInVzZXIiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLDRCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsSUFBTixTQUFtQkosS0FBbkIsQ0FBeUI7QUFDckIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLElBQWxCO0FBQ0g7O0FBSG9COztBQU16Qk4sS0FBSyxDQUFDTyxJQUFOLENBQVdKLEVBQVg7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vZGJcIik7XG5cbmNsYXNzIFVzZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLnVzZXI7XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyO1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst db = require(\"../../db\");\n\nclass User extends Model {\n    static get tableName() {\n        return tableNames.user;\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = User;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/65/usermodel_65a16864dea2cc43f1cea59fb9ce1a95.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2317",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/user/user.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1454,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1451,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "User",
                "ranges": [
                  {
                    "startOffset": 224,
                    "endOffset": 224,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 260,
                    "endOffset": 309,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  user: \"user\",\n  address: \"address\",\n  company: \"company\",\n  accounts: \"accounts\",\n  category: \"category\",\n  menu: \"menu\",\n  item: \"item\",\n  order: \"order\",\n  orderItem: \"orderItem\",\n  payments: \"payments\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlTmFtZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInVzZXIiLCJhZGRyZXNzIiwiY29tcGFueSIsImFjY291bnRzIiwiY2F0ZWdvcnkiLCJtZW51IiwiaXRlbSIsIm9yZGVyIiwib3JkZXJJdGVtIiwicGF5bWVudHMiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLE1BRE87QUFFYkMsRUFBQUEsT0FBTyxFQUFFLFNBRkk7QUFHYkMsRUFBQUEsT0FBTyxFQUFFLFNBSEk7QUFJYkMsRUFBQUEsUUFBUSxFQUFFLFVBSkc7QUFLYkMsRUFBQUEsUUFBUSxFQUFFLFVBTEc7QUFNYkMsRUFBQUEsSUFBSSxFQUFFLE1BTk87QUFPYkMsRUFBQUEsSUFBSSxFQUFFLE1BUE87QUFRYkMsRUFBQUEsS0FBSyxFQUFFLE9BUk07QUFTYkMsRUFBQUEsU0FBUyxFQUFFLFdBVEU7QUFVYkMsRUFBQUEsUUFBUSxFQUFFO0FBVkcsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICB1c2VyOiBcInVzZXJcIixcbiAgICBhZGRyZXNzOiBcImFkZHJlc3NcIixcbiAgICBjb21wYW55OiBcImNvbXBhbnlcIixcbiAgICBhY2NvdW50czogXCJhY2NvdW50c1wiLFxuICAgIGNhdGVnb3J5OiBcImNhdGVnb3J5XCIsXG4gICAgbWVudTogXCJtZW51XCIsXG4gICAgaXRlbTogXCJpdGVtXCIsXG4gICAgb3JkZXI6IFwib3JkZXJcIixcbiAgICBvcmRlckl0ZW06IFwib3JkZXJJdGVtXCIsXG4gICAgcGF5bWVudHM6IFwicGF5bWVudHNcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    user: \"user\",\n    address: \"address\",\n    company: \"company\",\n    accounts: \"accounts\",\n    category: \"category\",\n    menu: \"menu\",\n    item: \"item\",\n    order: \"order\",\n    orderItem: \"orderItem\",\n    payments: \"payments\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/d1/tableNames_d158fb35bde4ba2feb47fa73fcd1c0db.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2530",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/constants/tableNames.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1435,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1432,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Knex = require(\"knex\");\n\nconst {\n  Model\n} = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\n\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\nconst db = Knex(connectionConfig);\nModel.knex(db);\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIktuZXgiLCJyZXF1aXJlIiwiTW9kZWwiLCJrbmV4RmlsZSIsImVudmlyb25tZW50IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiY29ubmVjdGlvbkNvbmZpZyIsImRiIiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQVlELE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1FLFFBQVEsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBeEI7O0FBQ0EsTUFBTUcsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixhQUE1QztBQUNBLE1BQU1DLGdCQUFnQixHQUFHTCxRQUFRLENBQUNDLFdBQUQsQ0FBakM7QUFFQSxNQUFNSyxFQUFFLEdBQUdULElBQUksQ0FBQ1EsZ0JBQUQsQ0FBZjtBQUVBTixLQUFLLENBQUNRLElBQU4sQ0FBV0QsRUFBWDtBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJILEVBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgS25leCA9IHJlcXVpcmUoXCJrbmV4XCIpO1xuY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcblxuY29uc3Qga25leEZpbGUgPSByZXF1aXJlKFwiLi4va25leGZpbGVcIik7XG5jb25zdCBlbnZpcm9ubWVudCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8IFwiZGV2ZWxvcG1lbnRcIjtcbmNvbnN0IGNvbm5lY3Rpb25Db25maWcgPSBrbmV4RmlsZVtlbnZpcm9ubWVudF07XG5cbmNvbnN0IGRiID0gS25leChjb25uZWN0aW9uQ29uZmlnKTtcblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG4iXX0=",
            "originalCode": "const Knex = require(\"knex\");\nconst { Model } = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\n\nconst db = Knex(connectionConfig);\n\nModel.knex(db);\n\nmodule.exports = db;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/06/db_061f2ffe7a9d03a98dba0f960ecba1d1.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2531",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/db.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1629,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1626,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n  test: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB_TEST,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  development: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  production: {\n    client: \"pg\",\n    connection: process.env.DATABASE_URL,\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhmaWxlLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIiwidGVzdCIsImNsaWVudCIsImNvbm5lY3Rpb24iLCJkYXRhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJQT1NUR1JFU19EQl9URVNUIiwidXNlciIsIlBPU1RHUkVTX1VTRVIiLCJwYXNzd29yZCIsIlBPU1RHUkVTX1BBU1NXT1JEIiwibWlncmF0aW9ucyIsImRpcmVjdG9yeSIsIl9fZGlybmFtZSIsInNlZWRzIiwiZGV2ZWxvcG1lbnQiLCJQT1NUR1JFU19EQiIsInByb2R1Y3Rpb24iLCJEQVRBQkFTRV9VUkwiLCJwb29sIiwibWluIiwibWF4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxNQUFNLEVBQUUsSUFETjtBQUVGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxnQkFGZDtBQUdSQyxNQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxhQUhWO0FBSVJDLE1BQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLO0FBSmQsS0FGVjtBQVFGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUkMsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEZixLQVJWO0FBWUZDLElBQUFBLEtBQUssRUFBRTtBQUNIRixNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURwQjtBQVpMLEdBRE87QUFrQmJFLEVBQUFBLFdBQVcsRUFBRTtBQUNUZCxJQUFBQSxNQUFNLEVBQUUsSUFEQztBQUVUQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVyxXQUZkO0FBR1JULE1BQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGFBSFY7QUFJUkMsTUFBQUEsUUFBUSxFQUFFTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUs7QUFKZCxLQUZIO0FBUVRDLElBQUFBLFVBQVUsRUFBRTtBQUNSQyxNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURmLEtBUkg7QUFZVEMsSUFBQUEsS0FBSyxFQUFFO0FBQ0hGLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRHBCO0FBWkUsR0FsQkE7QUFtQ2JJLEVBQUFBLFVBQVUsRUFBRTtBQUNSaEIsSUFBQUEsTUFBTSxFQUFFLElBREE7QUFFUkMsSUFBQUEsVUFBVSxFQUFFRSxPQUFPLENBQUNDLEdBQVIsQ0FBWWEsWUFGaEI7QUFHUkMsSUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLE1BQUFBLEdBQUcsRUFBRSxDQURIO0FBRUZDLE1BQUFBLEdBQUcsRUFBRTtBQUZILEtBSEU7QUFPUlYsSUFBQUEsVUFBVSxFQUFFO0FBQ1JDLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRGYsS0FQSjtBQVdSQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEYsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEcEI7QUFYQztBQW5DQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVwZGF0ZSB3aXRoIHlvdXIgY29uZmlnIHNldHRpbmdzLlxucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdGVzdDoge1xuICAgICAgICBjbGllbnQ6IFwicGdcIixcbiAgICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICAgICAgLy8gaG9zdDogXCIxMjcuMC4wLjFcIixcbiAgICAgICAgICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5QT1NUR1JFU19EQl9URVNULFxuICAgICAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfVVNFUixcbiAgICAgICAgICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5QT1NUR1JFU19QQVNTV09SRCxcbiAgICAgICAgfSxcbiAgICAgICAgbWlncmF0aW9uczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9taWdyYXRpb25zXCIsXG4gICAgICAgIH0sXG5cbiAgICAgICAgc2VlZHM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvc2VlZHNcIixcbiAgICAgICAgfSxcbiAgICB9LFxuXG4gICAgZGV2ZWxvcG1lbnQ6IHtcbiAgICAgICAgY2xpZW50OiBcInBnXCIsXG4gICAgICAgIGNvbm5lY3Rpb246IHtcbiAgICAgICAgICAgIC8vIGhvc3Q6IFwiMTI3LjAuMC4xXCIsXG4gICAgICAgICAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfREIsXG4gICAgICAgICAgICB1c2VyOiBwcm9jZXNzLmVudi5QT1NUR1JFU19VU0VSLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBPU1RHUkVTX1BBU1NXT1JELFxuICAgICAgICB9LFxuICAgICAgICBtaWdyYXRpb25zOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL21pZ3JhdGlvbnNcIixcbiAgICAgICAgfSxcblxuICAgICAgICBzZWVkczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9zZWVkc1wiLFxuICAgICAgICB9LFxuICAgIH0sXG5cbiAgICBwcm9kdWN0aW9uOiB7XG4gICAgICAgIGNsaWVudDogXCJwZ1wiLFxuICAgICAgICBjb25uZWN0aW9uOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsXG4gICAgICAgIHBvb2w6IHtcbiAgICAgICAgICAgIG1pbjogMixcbiAgICAgICAgICAgIG1heDogMTAsXG4gICAgICAgIH0sXG4gICAgICAgIG1pZ3JhdGlvbnM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvbWlncmF0aW9uc1wiLFxuICAgICAgICB9LFxuXG4gICAgICAgIHNlZWRzOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL3NlZWRzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4iXX0=",
            "originalCode": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n    test: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB_TEST,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    development: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    production: {\n        client: \"pg\",\n        connection: process.env.DATABASE_URL,\n        pool: {\n            min: 2,\n            max: 10,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e2/knexfile_e268b34e213dcf9ff4bbc9c1fff3199f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2763",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/knexfile.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4994,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4991,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n  return new Promise((resolve, reject) => {\n    jwt.sign(payload, process.env.JWT_SECRET, {\n      expiresIn: \"3h\"\n    }, (error, token) => {\n      if (error) return reject(error);\n      return resolve(token);\n    });\n  });\n}\n\nmodule.exports = {\n  sign\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwic2lnbiIsInBheWxvYWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiZXhwaXJlc0luIiwiZXJyb3IiLCJ0b2tlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUEsU0FBU0MsSUFBVCxDQUFjQyxPQUFkLEVBQXVCO0FBQ25CLFNBQU8sSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUNwQ04sSUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQ0lDLE9BREosRUFFSUksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBRmhCLEVBR0k7QUFDSUMsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FISixFQU1JLENBQUNDLEtBQUQsRUFBUUMsS0FBUixLQUFrQjtBQUNkLFVBQUlELEtBQUosRUFBVyxPQUFPTCxNQUFNLENBQUNLLEtBQUQsQ0FBYjtBQUNYLGFBQU9OLE9BQU8sQ0FBQ08sS0FBRCxDQUFkO0FBQ0gsS0FUTDtBQVdILEdBWk0sQ0FBUDtBQWFIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlosRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XG5cbmZ1bmN0aW9uIHNpZ24ocGF5bG9hZCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGp3dC5zaWduKFxuICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZXhwaXJlc0luOiBcIjNoXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgKGVycm9yLCB0b2tlbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUodG9rZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBzaWduLFxufTtcbiJdfQ==",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n    return new Promise((resolve, reject) => {\n        jwt.sign(\n            payload,\n            process.env.JWT_SECRET,\n            {\n                expiresIn: \"3h\",\n            },\n            (error, token) => {\n                if (error) return reject(error);\n                return resolve(token);\n            }\n        );\n    });\n}\n\nmodule.exports = {\n    sign,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/a2/jwt_a2ecd03f3666d6bdf618e5bb010e6f13.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2815",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/jwt.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1961,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sign",
                "ranges": [
                  {
                    "startOffset": 127,
                    "endOffset": 376,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const nodemailer = require(\"nodemailer\");\n\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({\n  to,\n  subject,\n  html,\n  from = config[\"emailFrom\"]\n}) {\n  const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n  await transporter.sendMail({\n    from,\n    to,\n    subject,\n    html\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbIm5vZGVtYWlsZXIiLCJyZXF1aXJlIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlbmRFbWFpbCIsInRvIiwic3ViamVjdCIsImh0bWwiLCJmcm9tIiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJzZW5kTWFpbCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxTQUFqQjs7QUFFQSxlQUFlQSxTQUFmLENBQXlCO0FBQUVDLEVBQUFBLEVBQUY7QUFBTUMsRUFBQUEsT0FBTjtBQUFlQyxFQUFBQSxJQUFmO0FBQXFCQyxFQUFBQSxJQUFJLEdBQUdQLE1BQU0sQ0FBQyxXQUFEO0FBQWxDLENBQXpCLEVBQTRFO0FBQ3hFLFFBQU1RLFdBQVcsR0FBR1YsVUFBVSxDQUFDVyxlQUFYLENBQTJCVCxNQUFNLENBQUMsYUFBRCxDQUFqQyxDQUFwQjtBQUNBLFFBQU1RLFdBQVcsQ0FBQ0UsUUFBWixDQUFxQjtBQUFFSCxJQUFBQSxJQUFGO0FBQVFILElBQUFBLEVBQVI7QUFBWUMsSUFBQUEsT0FBWjtBQUFxQkMsSUFBQUE7QUFBckIsR0FBckIsQ0FBTjtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZW1haWxlciA9IHJlcXVpcmUoXCJub2RlbWFpbGVyXCIpO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZShcIi4uL2NvbmZpZy5qc29uXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNlbmRFbWFpbDtcblxuYXN5bmMgZnVuY3Rpb24gc2VuZEVtYWlsKHsgdG8sIHN1YmplY3QsIGh0bWwsIGZyb20gPSBjb25maWdbXCJlbWFpbEZyb21cIl0gfSkge1xuICAgIGNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoY29uZmlnW1wic210cE9wdGlvbnNcIl0pO1xuICAgIGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHsgZnJvbSwgdG8sIHN1YmplY3QsIGh0bWwgfSk7XG59XG4iXX0=",
            "originalCode": "const nodemailer = require(\"nodemailer\");\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({ to, subject, html, from = config[\"emailFrom\"] }) {\n    const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n    await transporter.sendMail({ from, to, subject, html });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/email_4444491566e111edc26f59e95bae5b33.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2906",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/email.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1859,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1856,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendEmail",
                "ranges": [
                  {
                    "startOffset": 204,
                    "endOffset": 441,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nconst User = require(\"../api/user/user.model\");\n\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n  auth,\n  isOwner\n};\n\nfunction auth(roles = []) {\n  if (typeof roles === \"string\") {\n    roles = [roles];\n  }\n\n  return async (req, res, next) => {\n    let token;\n\n    if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer \")) {\n      token = req.headers.authorization.split(\"Bearer \")[1];\n    } else {\n      return res.status(403).json({\n        message: \"Token not found, access denied\"\n      });\n    } // verify token and account\n\n\n    try {\n      const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n      const user = await User.query().where({\n        id: decodedToken.id\n      }).first();\n\n      if (!user || roles.length && !roles.includes(decodedToken.role)) {\n        // account does not exist or role not authorized\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      } // authentication and authorization successful\n\n\n      req.user = decodedToken;\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nfunction isOwner() {\n  return async (req, res, next) => {\n    try {\n      const bool = await Company.query().where({\n        owner_id: req.user.id,\n        company_id: req.params.company_id\n      }).first();\n\n      if (!bool) {\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      }\n\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJDb21wYW55IiwibW9kdWxlIiwiZXhwb3J0cyIsImF1dGgiLCJpc093bmVyIiwicm9sZXMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInN0YXJ0c1dpdGgiLCJzcGxpdCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZGVjb2RlZFRva2VuIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJ1c2VyIiwicXVlcnkiLCJ3aGVyZSIsImlkIiwiZmlyc3QiLCJsZW5ndGgiLCJpbmNsdWRlcyIsInJvbGUiLCJlcnJvciIsImJvb2wiLCJvd25lcl9pZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsOEJBQUQsQ0FBdkI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQURhO0FBRWJDLEVBQUFBO0FBRmEsQ0FBakI7O0FBS0EsU0FBU0QsSUFBVCxDQUFjRSxLQUFLLEdBQUcsRUFBdEIsRUFBMEI7QUFDdEIsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzNCQSxJQUFBQSxLQUFLLEdBQUcsQ0FBQ0EsS0FBRCxDQUFSO0FBQ0g7O0FBRUQsU0FBTyxPQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUlDLEtBQUo7O0FBQ0EsUUFDSUgsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosSUFDQUwsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLFVBQTFCLENBQXFDLFNBQXJDLENBRkosRUFHRTtBQUNFSCxNQUFBQSxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxhQUFaLENBQTBCRSxLQUExQixDQUFnQyxTQUFoQyxFQUEyQyxDQUEzQyxDQUFSO0FBQ0gsS0FMRCxNQUtPO0FBQ0gsYUFBT04sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLFFBQUFBLE9BQU8sRUFBRTtBQURlLE9BQXJCLENBQVA7QUFHSCxLQVg0QixDQWE3Qjs7O0FBQ0EsUUFBSTtBQUNBLFlBQU1DLFlBQVksR0FBR3BCLEdBQUcsQ0FBQ3FCLE1BQUosQ0FBV1QsS0FBWCxFQUFrQlUsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLENBQXJCO0FBRUEsWUFBTUMsSUFBSSxHQUFHLE1BQU12QixJQUFJLENBQUN3QixLQUFMLEdBQ2RDLEtBRGMsQ0FDUjtBQUFFQyxRQUFBQSxFQUFFLEVBQUVSLFlBQVksQ0FBQ1E7QUFBbkIsT0FEUSxFQUVkQyxLQUZjLEVBQW5COztBQUlBLFVBQUksQ0FBQ0osSUFBRCxJQUFVakIsS0FBSyxDQUFDc0IsTUFBTixJQUFnQixDQUFDdEIsS0FBSyxDQUFDdUIsUUFBTixDQUFlWCxZQUFZLENBQUNZLElBQTVCLENBQS9CLEVBQW1FO0FBQy9EO0FBQ0EsZUFBT3RCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSCxPQVZELENBWUE7OztBQUNBVixNQUFBQSxHQUFHLENBQUNnQixJQUFKLEdBQVdMLFlBQVg7QUFDQVQsTUFBQUEsSUFBSTtBQUNQLEtBZkQsQ0FlRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaENEO0FBaUNIOztBQUVELFNBQVMxQixPQUFULEdBQW1CO0FBQ2YsU0FBTyxPQUFPRSxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUk7QUFDQSxZQUFNdUIsSUFBSSxHQUFHLE1BQU0vQixPQUFPLENBQUN1QixLQUFSLEdBQ2RDLEtBRGMsQ0FDUjtBQUNIUSxRQUFBQSxRQUFRLEVBQUUxQixHQUFHLENBQUNnQixJQUFKLENBQVNHLEVBRGhCO0FBRUhRLFFBQUFBLFVBQVUsRUFBRTNCLEdBQUcsQ0FBQzRCLE1BQUosQ0FBV0Q7QUFGcEIsT0FEUSxFQUtkUCxLQUxjLEVBQW5COztBQU9BLFVBQUksQ0FBQ0ssSUFBTCxFQUFXO0FBQ1AsZUFBT3hCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSDs7QUFDRFIsTUFBQUEsSUFBSTtBQUNQLEtBWkQsQ0FZRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaEJEO0FBaUJIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKFwiLi4vYXBpL3VzZXIvdXNlci5tb2RlbFwiKTtcbmNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vYXBpL2NvbXBhbnkvY29tcGFueS5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYXV0aCxcbiAgICBpc093bmVyLFxufTtcblxuZnVuY3Rpb24gYXV0aChyb2xlcyA9IFtdKSB7XG4gICAgaWYgKHR5cGVvZiByb2xlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByb2xlcyA9IFtyb2xlc107XG4gICAgfVxuXG4gICAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICBsZXQgdG9rZW47XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24gJiZcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3RhcnRzV2l0aChcIkJlYXJlciBcIilcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCJCZWFyZXIgXCIpWzFdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlRva2VuIG5vdCBmb3VuZCwgYWNjZXNzIGRlbmllZFwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB2ZXJpZnkgdG9rZW4gYW5kIGFjY291bnRcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xuXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5xdWVyeSgpXG4gICAgICAgICAgICAgICAgLndoZXJlKHsgaWQ6IGRlY29kZWRUb2tlbi5pZCB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIXVzZXIgfHwgKHJvbGVzLmxlbmd0aCAmJiAhcm9sZXMuaW5jbHVkZXMoZGVjb2RlZFRva2VuLnJvbGUpKSkge1xuICAgICAgICAgICAgICAgIC8vIGFjY291bnQgZG9lcyBub3QgZXhpc3Qgb3Igcm9sZSBub3QgYXV0aG9yaXplZFxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdXRob3JpemVkXCIgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGF1dGhlbnRpY2F0aW9uIGFuZCBhdXRob3JpemF0aW9uIHN1Y2Nlc3NmdWxcbiAgICAgICAgICAgIHJlcS51c2VyID0gZGVjb2RlZFRva2VuO1xuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBpc093bmVyKCkge1xuICAgIHJldHVybiBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGJvb2wgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KClcbiAgICAgICAgICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgICAgICAgICBvd25lcl9pZDogcmVxLnVzZXIuaWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIWJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuIl19",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\nconst User = require(\"../api/user/user.model\");\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n    auth,\n    isOwner,\n};\n\nfunction auth(roles = []) {\n    if (typeof roles === \"string\") {\n        roles = [roles];\n    }\n\n    return async (req, res, next) => {\n        let token;\n        if (\n            req.headers.authorization &&\n            req.headers.authorization.startsWith(\"Bearer \")\n        ) {\n            token = req.headers.authorization.split(\"Bearer \")[1];\n        } else {\n            return res.status(403).json({\n                message: \"Token not found, access denied\",\n            });\n        }\n\n        // verify token and account\n        try {\n            const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n\n            const user = await User.query()\n                .where({ id: decodedToken.id })\n                .first();\n\n            if (!user || (roles.length && !roles.includes(decodedToken.role))) {\n                // account does not exist or role not authorized\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            // authentication and authorization successful\n            req.user = decodedToken;\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n\nfunction isOwner() {\n    return async (req, res, next) => {\n        try {\n            const bool = await Company.query()\n                .where({\n                    owner_id: req.user.id,\n                    company_id: req.params.company_id,\n                })\n                .first();\n\n            if (!bool) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c1/auth_c11b599cb8ed1c90504edcca0550628f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2940",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/auth.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7297,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7294,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "auth",
                "ranges": [
                  {
                    "startOffset": 275,
                    "endOffset": 1253,
                    "count": 28
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 1250,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 1255,
                    "endOffset": 1643,
                    "count": 3
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1285,
                    "endOffset": 1640,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n  static get tableName() {\n    return tableNames.company;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const User = require(\"../user/user.model\");\n\n    const Account = require(\"./accounts/accounts.model\");\n\n    const Menu = require(\"./menu/menu.model\");\n\n    return {\n      owner: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.company}.owner_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      accounts: {\n        relation: Model.HasManyRelation,\n        modelClass: Account,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.accounts}.company_id`\n        }\n      },\n      menus: {\n        relation: Model.HasManyRelation,\n        modelClass: Menu,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.menu}.company_id`\n        }\n      }\n    };\n  }\n\n}\n\nmodule.exports = Company;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsInNjaGVtYSIsIkNvbXBhbnkiLCJ0YWJsZU5hbWUiLCJjb21wYW55IiwianNvblNjaGVtYSIsInJlbGF0aW9uTWFwcGluZ3MiLCJVc2VyIiwiQWNjb3VudCIsIk1lbnUiLCJvd25lciIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsInVzZXIiLCJhY2NvdW50cyIsIkhhc01hbnlSZWxhdGlvbiIsIm1lbnVzIiwibWVudSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyw0QkFBRCxDQUExQjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxNQUFNRyxPQUFOLFNBQXNCSixLQUF0QixDQUE0QjtBQUN4QixhQUFXSyxTQUFYLEdBQXVCO0FBQ25CLFdBQU9ILFVBQVUsQ0FBQ0ksT0FBbEI7QUFDSDs7QUFFRCxhQUFXQyxVQUFYLEdBQXdCO0FBQ3BCLFdBQU9KLE1BQVA7QUFDSDs7QUFFRCxhQUFXSyxnQkFBWCxHQUE4QjtBQUMxQjtBQUNBLFVBQU1DLElBQUksR0FBR1IsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLFVBQU1TLE9BQU8sR0FBR1QsT0FBTyxDQUFDLDJCQUFELENBQXZCOztBQUNBLFVBQU1VLElBQUksR0FBR1YsT0FBTyxDQUFDLG1CQUFELENBQXBCOztBQUVBLFdBQU87QUFDSFcsTUFBQUEsS0FBSyxFQUFFO0FBQ0hDLFFBQUFBLFFBQVEsRUFBRWIsS0FBSyxDQUFDYyxvQkFEYjtBQUVIQyxRQUFBQSxVQUFVLEVBQUVOLElBRlQ7QUFHSE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZixVQUFVLENBQUNJLE9BQVEsV0FEMUI7QUFFRlksVUFBQUEsRUFBRSxFQUFHLEdBQUVoQixVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEgsT0FESjtBQVNIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURWO0FBRU5OLFFBQUFBLFVBQVUsRUFBRUwsT0FGTjtBQUdOTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ2tCLFFBQVM7QUFGekI7QUFIQSxPQVRQO0FBaUJIRSxNQUFBQSxLQUFLLEVBQUU7QUFDSFQsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURiO0FBRUhOLFFBQUFBLFVBQVUsRUFBRUosSUFGVDtBQUdISyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ3FCLElBQUs7QUFGckI7QUFISDtBQWpCSixLQUFQO0FBMEJIOztBQXpDdUI7O0FBNEM1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckIsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2NvbXBhbnkuc2NoZW1hLmpzb25cIik7XG5cbmNsYXNzIENvbXBhbnkgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLmNvbXBhbnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgQWNjb3VudCA9IHJlcXVpcmUoXCIuL2FjY291bnRzL2FjY291bnRzLm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvd25lcjoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBVc2VyLFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5vd25lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFjY291bnRzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBBY2NvdW50LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmFjY291bnRzfS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1lbnVzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBNZW51LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLm1lbnV9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wYW55O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n    static get tableName() {\n        return tableNames.company;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const User = require(\"../user/user.model\");\n        const Account = require(\"./accounts/accounts.model\");\n        const Menu = require(\"./menu/menu.model\");\n\n        return {\n            owner: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.company}.owner_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            accounts: {\n                relation: Model.HasManyRelation,\n                modelClass: Account,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.accounts}.company_id`,\n                },\n            },\n            menus: {\n                relation: Model.HasManyRelation,\n                modelClass: Menu,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.menu}.company_id`,\n                },\n            },\n        };\n    }\n}\n\nmodule.exports = Company;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8b/companymodel_8b713279ce3af8b604431fcbf24964b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2941",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5514,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5511,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Company",
                "ranges": [
                  {
                    "startOffset": 241,
                    "endOffset": 241,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 280,
                    "endOffset": 332,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 343,
                    "endOffset": 384,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 395,
                    "endOffset": 1298,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  admin: \"admin\",\n  owner: \"owner\",\n  customer: \"customer\",\n  staff: \"staff\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFkbWluIiwib3duZXIiLCJjdXN0b21lciIsInN0YWZmIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLEtBQUssRUFBRSxPQURNO0FBRWJDLEVBQUFBLEtBQUssRUFBRSxPQUZNO0FBR2JDLEVBQUFBLFFBQVEsRUFBRSxVQUhHO0FBSWJDLEVBQUFBLEtBQUssRUFBRTtBQUpNLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYWRtaW46IFwiYWRtaW5cIixcbiAgICBvd25lcjogXCJvd25lclwiLFxuICAgIGN1c3RvbWVyOiBcImN1c3RvbWVyXCIsXG4gICAgc3RhZmY6IFwic3RhZmZcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    admin: \"admin\",\n    owner: \"owner\",\n    customer: \"customer\",\n    staff: \"staff\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c3/role_c386996d0c7428ed82a7fa0a3ec37236.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2942",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/role.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 789,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 786,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./company.validators\");\n\nconst companyService = require(\"./company.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nconst {\n  scopedItems\n} = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\n\nconst Menu = require(\"./menu/menu.routes\");\n\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/1/accounts\n\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.owner_id = req.user.id;\n  companyService.create(req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n  companyService.getAllCompanies().then(companies => {\n    res.json(scopedItems(req.user, companies));\n  }).catch(next);\n}\n\nfunction getMyCompanies(req, res, next) {\n  companyService.getMyCompanies(req.user.id).then(companies => companies ? res.json(companies) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyById(req, res, next) {\n  // owner can get his company and the admin can get any company\n  companyService.getCompanyById(req.params.id).then(company => {\n    if (company.owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    res.json(company);\n  }).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company\n  companyService.updateCompany({\n    id: req.params.id,\n    owner_id: req.user.id\n  }, req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n  // only owner delete can delete their company\n  companyService._delete({\n    id: parseInt(req.params.id),\n    owner_id: req.user.id\n  }).then(() => {\n    res.json({\n      id: parseInt(req.params.id)\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./company.validators\");\nconst companyService = require(\"./company.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\nconst { scopedItems } = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\nconst Menu = require(\"./menu/menu.routes\");\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/1/accounts\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.owner_id = req.user.id;\n    companyService\n        .create(req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n    companyService\n        .getAllCompanies()\n        .then((companies) => {\n            res.json(scopedItems(req.user, companies));\n        })\n        .catch(next);\n}\nfunction getMyCompanies(req, res, next) {\n    companyService\n        .getMyCompanies(req.user.id)\n        .then((companies) =>\n            companies ? res.json(companies) : res.sendStatus(404)\n        )\n        .catch(next);\n}\nfunction getCompanyById(req, res, next) {\n    // owner can get his company and the admin can get any company\n    companyService\n        .getCompanyById(req.params.id)\n        .then((company) => {\n            if (\n                company.owner_id !== req.user.id &&\n                req.user.role !== Role.admin\n            ) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            res.json(company);\n        })\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company\n    companyService\n        .updateCompany({ id: req.params.id, owner_id: req.user.id }, req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n    // only owner delete can delete their company\n    companyService\n        ._delete({ id: parseInt(req.params.id), owner_id: req.user.id })\n        .then(() => {\n            res.json({ id: parseInt(req.params.id) });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2a/companyroutes_2accae81b914ebc49b8ad824faf130cd.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2943",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 11663,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 11660,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1186,
                    "endOffset": 1338,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1340,
                    "endOffset": 1505,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1507,
                    "endOffset": 1681,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1683,
                    "endOffset": 2058,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2060,
                    "endOffset": 2281,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteCompany",
                "ranges": [
                  {
                    "startOffset": 2283,
                    "endOffset": 2553,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    logo_url: Joi.string(),\n    website_url: Joi.string(),\n    email: Joi.string().email().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    owner: Joi.number().empty(\"\"),\n    logo_url: Joi.string().empty(\"\"),\n    website_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJkZXNjcmlwdGlvbiIsImxvZ29fdXJsIiwid2Vic2l0ZV91cmwiLCJlbWFpbCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiLCJvd25lciIsIm51bWJlciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyxvQ0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsUUFBUSxFQUFFZCxHQUFHLENBQUNXLE1BQUosRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosRUFKUztBQUt0QkssSUFBQUEsS0FBSyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFLLEtBQWIsR0FBcUJKLFFBQXJCO0FBTGUsR0FBWCxDQUFmO0FBT0FWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQ7O0FBV0FMLE9BQU8sQ0FBQ2MsWUFBUixHQUF1QixDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNVyxXQUFXLEdBQUc7QUFDaEJSLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQk4sSUFBQUEsV0FBVyxFQUFFYixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQixDQUZHO0FBR2hCSCxJQUFBQSxLQUFLLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYUssS0FBYixHQUFxQkcsS0FBckIsQ0FBMkIsRUFBM0IsQ0FIUztBQUloQkMsSUFBQUEsS0FBSyxFQUFFcEIsR0FBRyxDQUFDcUIsTUFBSixHQUFhRixLQUFiLENBQW1CLEVBQW5CLENBSlM7QUFLaEJMLElBQUFBLFFBQVEsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FMTTtBQU1oQkosSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQjtBQU5HLEdBQXBCO0FBU0EsUUFBTVgsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV1MsV0FBWCxDQUFmO0FBRUFoQixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQWJEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBsb2dvX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICB3ZWJzaXRlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIG93bmVyOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGxvZ29fdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIHdlYnNpdGVfdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        logo_url: Joi.string(),\n        website_url: Joi.string(),\n        email: Joi.string().email().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        owner: Joi.number().empty(\"\"),\n        logo_url: Joi.string().empty(\"\"),\n        website_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/3c/companyvalidators_3ce01f397e22205413767a4933ebdfd8.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2944",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4153,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4150,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 489,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 515,
                    "endOffset": 878,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Company = require(\"../company/company.model\");\n\nconst error = require(\"../../utils/error\");\n\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n  create,\n  updateCompany,\n  getAllCompanies,\n  getMyCompanies,\n  getCompanyById,\n  _delete\n};\n\nasync function create(params) {\n  // validate if company name exists\n  if (await getCompany({\n    name: params.name\n  })) {\n    error('Name \"' + params.name + '\" is already registered');\n  }\n\n  const company = await Company.query().insert(params);\n  return company;\n}\n\nasync function updateCompany(queryParams, params) {\n  const company = await getCompany({ ...queryParams\n  });\n\n  if (!company) {\n    error(\"Unauthorized\");\n  } // validate if name was changed\n\n\n  if (params.name && company.name !== params.name && (await getCompany({\n    name: params.name\n  }))) {\n    error(`Name ${params.name} is already taken`);\n  }\n\n  const updatedCompany = await Company.query().patchAndFetchById(queryParams.id, { ...params\n  });\n  return updatedCompany;\n}\n\nasync function getAllCompanies() {\n  const companies = await Company.query();\n  return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n  const companies = await Company.query().where({\n    owner_id: ownerId\n  });\n  return companies;\n}\n\nasync function getCompanyById(id) {\n  const company = await getCompany({\n    id\n  });\n  return company;\n}\n\nasync function _delete(queryParams) {\n  const tobeDeleted = await getCompany(queryParams);\n\n  if (tobeDeleted) {\n    return await Company.query().delete().where({ ...queryParams\n    });\n  }\n\n  return error(\"Forbidden\");\n} // async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCompany(param) {\n  const company = await Company.query().where({ ...param\n  }).first();\n  return company;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJDb21wYW55IiwicmVxdWlyZSIsImVycm9yIiwiY3JlYXRlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlIiwidXBkYXRlQ29tcGFueSIsImdldEFsbENvbXBhbmllcyIsImdldE15Q29tcGFuaWVzIiwiZ2V0Q29tcGFueUJ5SWQiLCJfZGVsZXRlIiwicGFyYW1zIiwiZ2V0Q29tcGFueSIsIm5hbWUiLCJjb21wYW55IiwicXVlcnkiLCJpbnNlcnQiLCJxdWVyeVBhcmFtcyIsInVwZGF0ZWRDb21wYW55IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJpZCIsImNvbXBhbmllcyIsIm93bmVySWQiLCJ3aGVyZSIsIm93bmVyX2lkIiwidG9iZURlbGV0ZWQiLCJkZWxldGUiLCJwYXJhbSIsImZpcnN0Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQywwQkFBRCxDQUF2Qjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUFyQjs7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsTUFEYTtBQUViQyxFQUFBQSxhQUZhO0FBR2JDLEVBQUFBLGVBSGE7QUFJYkMsRUFBQUEsY0FKYTtBQUtiQyxFQUFBQSxjQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsTUFBZixDQUFzQk0sTUFBdEIsRUFBOEI7QUFDMUI7QUFDQSxNQUFJLE1BQU1DLFVBQVUsQ0FBQztBQUFFQyxJQUFBQSxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0U7QUFBZixHQUFELENBQXBCLEVBQTZDO0FBQ3pDWixJQUFBQSxLQUFLLENBQUMsV0FBV1UsTUFBTSxDQUFDRSxJQUFsQixHQUF5Qix5QkFBMUIsQ0FBTDtBQUNIOztBQUVELFFBQU1DLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQWdCQyxNQUFoQixDQUF1QkwsTUFBdkIsQ0FBdEI7QUFDQSxTQUFPRyxPQUFQO0FBQ0g7O0FBRUQsZUFBZVIsYUFBZixDQUE2QlcsV0FBN0IsRUFBMENOLE1BQTFDLEVBQWtEO0FBQzlDLFFBQU1HLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUMsRUFBRSxHQUFHSztBQUFMLEdBQUQsQ0FBaEM7O0FBRUEsTUFBSSxDQUFDSCxPQUFMLEVBQWM7QUFDVmIsSUFBQUEsS0FBSyxDQUFDLGNBQUQsQ0FBTDtBQUNILEdBTDZDLENBTzlDOzs7QUFDQSxNQUNJVSxNQUFNLENBQUNFLElBQVAsSUFDQUMsT0FBTyxDQUFDRCxJQUFSLEtBQWlCRixNQUFNLENBQUNFLElBRHhCLEtBRUMsTUFBTUQsVUFBVSxDQUFDO0FBQUVDLElBQUFBLElBQUksRUFBRUYsTUFBTSxDQUFDRTtBQUFmLEdBQUQsQ0FGakIsQ0FESixFQUlFO0FBQ0VaLElBQUFBLEtBQUssQ0FBRSxRQUFPVSxNQUFNLENBQUNFLElBQUssbUJBQXJCLENBQUw7QUFDSDs7QUFFRCxRQUFNSyxjQUFjLEdBQUcsTUFBTW5CLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JJLGlCQUFoQixDQUN6QkYsV0FBVyxDQUFDRyxFQURhLEVBRXpCLEVBQ0ksR0FBR1Q7QUFEUCxHQUZ5QixDQUE3QjtBQU9BLFNBQU9PLGNBQVA7QUFDSDs7QUFFRCxlQUFlWCxlQUFmLEdBQWlDO0FBQzdCLFFBQU1jLFNBQVMsR0FBRyxNQUFNdEIsT0FBTyxDQUFDZ0IsS0FBUixFQUF4QjtBQUNBLFNBQU9NLFNBQVA7QUFDSDs7QUFFRCxlQUFlYixjQUFmLENBQThCYyxPQUE5QixFQUF1QztBQUNuQyxRQUFNRCxTQUFTLEdBQUcsTUFBTXRCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JRLEtBQWhCLENBQXNCO0FBQzFDQyxJQUFBQSxRQUFRLEVBQUVGO0FBRGdDLEdBQXRCLENBQXhCO0FBR0EsU0FBT0QsU0FBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsQ0FBOEJXLEVBQTlCLEVBQWtDO0FBQzlCLFFBQU1OLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUM7QUFBRVEsSUFBQUE7QUFBRixHQUFELENBQWhDO0FBQ0EsU0FBT04sT0FBUDtBQUNIOztBQUVELGVBQWVKLE9BQWYsQ0FBdUJPLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU1RLFdBQVcsR0FBRyxNQUFNYixVQUFVLENBQUNLLFdBQUQsQ0FBcEM7O0FBRUEsTUFBSVEsV0FBSixFQUFpQjtBQUNiLFdBQU8sTUFBTTFCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FDUlcsTUFEUSxHQUVSSCxLQUZRLENBRUYsRUFBRSxHQUFHTjtBQUFMLEtBRkUsQ0FBYjtBQUdIOztBQUVELFNBQU9oQixLQUFLLENBQUMsV0FBRCxDQUFaO0FBQ0gsQyxDQUVEO0FBQ0E7QUFDQTtBQUVBO0FBRUE7OztBQUVBLGVBQWVXLFVBQWYsQ0FBMEJlLEtBQTFCLEVBQWlDO0FBQzdCLFFBQU1iLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQ2pCUSxLQURpQixDQUNYLEVBQUUsR0FBR0k7QUFBTCxHQURXLEVBRWpCQyxLQUZpQixFQUF0QjtBQUdBLFNBQU9kLE9BQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vY29tcGFueS9jb21wYW55Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5jb25zdCBjcmVhdGVFcnJvciA9IHJlcXVpcmUoXCJodHRwLWVycm9yc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlLFxuICAgIHVwZGF0ZUNvbXBhbnksXG4gICAgZ2V0QWxsQ29tcGFuaWVzLFxuICAgIGdldE15Q29tcGFuaWVzLFxuICAgIGdldENvbXBhbnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGUocGFyYW1zKSB7XG4gICAgLy8gdmFsaWRhdGUgaWYgY29tcGFueSBuYW1lIGV4aXN0c1xuICAgIGlmIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpIHtcbiAgICAgICAgZXJyb3IoJ05hbWUgXCInICsgcGFyYW1zLm5hbWUgKyAnXCIgaXMgYWxyZWFkeSByZWdpc3RlcmVkJyk7XG4gICAgfVxuXG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5pbnNlcnQocGFyYW1zKTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlQ29tcGFueShxdWVyeVBhcmFtcywgcGFyYW1zKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyAuLi5xdWVyeVBhcmFtcyB9KTtcblxuICAgIGlmICghY29tcGFueSkge1xuICAgICAgICBlcnJvcihcIlVuYXV0aG9yaXplZFwiKTtcbiAgICB9XG5cbiAgICAvLyB2YWxpZGF0ZSBpZiBuYW1lIHdhcyBjaGFuZ2VkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjb21wYW55Lm5hbWUgIT09IHBhcmFtcy5uYW1lICYmXG4gICAgICAgIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBOYW1lICR7cGFyYW1zLm5hbWV9IGlzIGFscmVhZHkgdGFrZW5gKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkQ29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5wYXRjaEFuZEZldGNoQnlJZChcbiAgICAgICAgcXVlcnlQYXJhbXMuaWQsXG4gICAgICAgIHtcbiAgICAgICAgICAgIC4uLnBhcmFtcyxcbiAgICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gdXBkYXRlZENvbXBhbnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbmllcygpIHtcbiAgICBjb25zdCBjb21wYW5pZXMgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNvbXBhbmllcztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TXlDb21wYW5pZXMob3duZXJJZCkge1xuICAgIGNvbnN0IGNvbXBhbmllcyA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS53aGVyZSh7XG4gICAgICAgIG93bmVyX2lkOiBvd25lcklkLFxuICAgIH0pO1xuICAgIHJldHVybiBjb21wYW5pZXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnlCeUlkKGlkKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyBpZCB9KTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGNvbnN0IHRvYmVEZWxldGVkID0gYXdhaXQgZ2V0Q29tcGFueShxdWVyeVBhcmFtcyk7XG5cbiAgICBpZiAodG9iZURlbGV0ZWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IENvbXBhbnkucXVlcnkoKVxuICAgICAgICAgICAgLmRlbGV0ZSgpXG4gICAgICAgICAgICAud2hlcmUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXJyb3IoXCJGb3JiaWRkZW5cIik7XG59XG5cbi8vIGFzeW5jIGZ1bmN0aW9uIF9zb2Z0RGVsZXRlKGlkKSB7XG4vL21hcmsgYXMgaW5hY3RpdmVcbi8vICBhd2FpdCBDb21wYW55LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnkocGFyYW0pIHtcbiAgICBjb25zdCBjb21wYW55ID0gYXdhaXQgQ29tcGFueS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBjb21wYW55O1xufVxuIl19",
            "originalCode": "const Company = require(\"../company/company.model\");\nconst error = require(\"../../utils/error\");\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n    create,\n    updateCompany,\n    getAllCompanies,\n    getMyCompanies,\n    getCompanyById,\n    _delete,\n};\n\nasync function create(params) {\n    // validate if company name exists\n    if (await getCompany({ name: params.name })) {\n        error('Name \"' + params.name + '\" is already registered');\n    }\n\n    const company = await Company.query().insert(params);\n    return company;\n}\n\nasync function updateCompany(queryParams, params) {\n    const company = await getCompany({ ...queryParams });\n\n    if (!company) {\n        error(\"Unauthorized\");\n    }\n\n    // validate if name was changed\n    if (\n        params.name &&\n        company.name !== params.name &&\n        (await getCompany({ name: params.name }))\n    ) {\n        error(`Name ${params.name} is already taken`);\n    }\n\n    const updatedCompany = await Company.query().patchAndFetchById(\n        queryParams.id,\n        {\n            ...params,\n        }\n    );\n\n    return updatedCompany;\n}\n\nasync function getAllCompanies() {\n    const companies = await Company.query();\n    return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n    const companies = await Company.query().where({\n        owner_id: ownerId,\n    });\n    return companies;\n}\n\nasync function getCompanyById(id) {\n    const company = await getCompany({ id });\n    return company;\n}\n\nasync function _delete(queryParams) {\n    const tobeDeleted = await getCompany(queryParams);\n\n    if (tobeDeleted) {\n        return await Company.query()\n            .delete()\n            .where({ ...queryParams });\n    }\n\n    return error(\"Forbidden\");\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCompany(param) {\n    const company = await Company.query()\n        .where({ ...param })\n        .first();\n    return company;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/10/companyservice_103976749abb46712c9f5147304425bb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2945",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7967,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 615,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateCompany",
                "ranges": [
                  {
                    "startOffset": 617,
                    "endOffset": 1096,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1098,
                    "endOffset": 1197,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1199,
                    "endOffset": 1339,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1341,
                    "endOffset": 1446,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1448,
                    "endOffset": 1669,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompany",
                "ranges": [
                  {
                    "startOffset": 1808,
                    "endOffset": 1933,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = message => {\n  const error = new Error(message);\n  throw error;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9yLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQkMsT0FBRCxJQUFhO0FBQzFCLFFBQU1DLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQVVGLE9BQVYsQ0FBZDtBQUNBLFFBQU1DLEtBQU47QUFDSCxDQUhEIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAobWVzc2FnZSkgPT4ge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIHRocm93IGVycm9yO1xufTtcbiJdfQ==",
            "originalCode": "module.exports = (message) => {\n    const error = new Error(message);\n    throw error;\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/fa/error_fa67f28dedb39797d87045fcac49c533.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2946",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/error.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 690,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 687,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.module.exports",
                "ranges": [
                  {
                    "startOffset": 106,
                    "endOffset": 171,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n  if (user.role == role.admin) return items;\n  return items.filter(item => item.owner_id == user.id);\n}\n\nmodule.exports = {\n  scopedItems\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcm1pc3Npb25zLmpzIl0sIm5hbWVzIjpbInJvbGUiLCJyZXF1aXJlIiwic2NvcGVkSXRlbXMiLCJ1c2VyIiwiaXRlbXMiLCJhZG1pbiIsImZpbHRlciIsIml0ZW0iLCJvd25lcl9pZCIsImlkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxTQUFTQyxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsS0FBM0IsRUFBa0M7QUFDOUIsTUFBSUQsSUFBSSxDQUFDSCxJQUFMLElBQWFBLElBQUksQ0FBQ0ssS0FBdEIsRUFBNkIsT0FBT0QsS0FBUDtBQUM3QixTQUFPQSxLQUFLLENBQUNFLE1BQU4sQ0FBY0MsSUFBRCxJQUFVQSxJQUFJLENBQUNDLFFBQUwsSUFBaUJMLElBQUksQ0FBQ00sRUFBN0MsQ0FBUDtBQUNIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlQsRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvbGUgPSByZXF1aXJlKFwiLi9yb2xlXCIpO1xuXG5mdW5jdGlvbiBzY29wZWRJdGVtcyh1c2VyLCBpdGVtcykge1xuICAgIGlmICh1c2VyLnJvbGUgPT0gcm9sZS5hZG1pbikgcmV0dXJuIGl0ZW1zO1xuICAgIHJldHVybiBpdGVtcy5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0ub3duZXJfaWQgPT0gdXNlci5pZCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHNjb3BlZEl0ZW1zLFxufTtcbiJdfQ==",
            "originalCode": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n    if (user.role == role.admin) return items;\n    return items.filter((item) => item.owner_id == user.id);\n}\n\nmodule.exports = {\n    scopedItems,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/08/permissions_089e905c4105820f9841c9d528f11f86.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2949",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/permissions.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1344,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1341,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "scopedItems",
                "ranges": [
                  {
                    "startOffset": 122,
                    "endOffset": 261,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Account = require(\"./accounts.model\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n  mergeParams: true\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n  try {\n    const {\n      owner_id\n    } = req.body;\n\n    if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unathorized\"\n      });\n    }\n\n    const accounts = await Account.query().where({\n      company_id: req.params.company_id,\n      owner_id\n    });\n\n    if (!accounts) {\n      res.status(404);\n    }\n\n    res.json(accounts);\n  } catch (error) {\n    next(error);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJBY2NvdW50IiwicmVxdWlyZSIsIlJvbGUiLCJhdXRoIiwiQXV0aCIsInJvdXRlciIsIlJvdXRlciIsIm1lcmdlUGFyYW1zIiwiZ2V0IiwiYWRtaW4iLCJvd25lciIsImdldEFjY291bnRzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJvd25lcl9pZCIsImJvZHkiLCJ1c2VyIiwiaWQiLCJyb2xlIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJhY2NvdW50cyIsInF1ZXJ5Iiwid2hlcmUiLCJjb21wYW55X2lkIiwicGFyYW1zIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUUsRUFBQUEsSUFBSSxFQUFFQztBQUFSLElBQWlCSCxPQUFPLENBQUMsNEJBQUQsQ0FBOUI7O0FBRUEsTUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CSyxNQUFuQixDQUEwQjtBQUNyQ0MsRUFBQUEsV0FBVyxFQUFFO0FBRHdCLENBQTFCLENBQWY7O0FBSUFGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JKLElBQUksQ0FBQyxDQUFDRixJQUFJLENBQUNPLEtBQU4sRUFBYVAsSUFBSSxDQUFDUSxLQUFsQixDQUFELENBQXBCLEVBQWdEQyxXQUFoRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCOztBQUVBLGVBQWVNLFdBQWYsQ0FBMkJHLEdBQTNCLEVBQWdDQyxHQUFoQyxFQUFxQ0MsSUFBckMsRUFBMkM7QUFDdkMsTUFBSTtBQUNBLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFlSCxHQUFHLENBQUNJLElBQXpCOztBQUVBLFFBQUlELFFBQVEsS0FBS0gsR0FBRyxDQUFDSyxJQUFKLENBQVNDLEVBQXRCLElBQTRCTixHQUFHLENBQUNLLElBQUosQ0FBU0UsSUFBVCxLQUFrQm5CLElBQUksQ0FBQ08sS0FBdkQsRUFBOEQ7QUFDMUQsYUFBT00sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUMsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBckIsQ0FBUDtBQUNIOztBQUVELFVBQU1DLFFBQVEsR0FBRyxNQUFNekIsT0FBTyxDQUFDMEIsS0FBUixHQUFnQkMsS0FBaEIsQ0FBc0I7QUFDekNDLE1BQUFBLFVBQVUsRUFBRWQsR0FBRyxDQUFDZSxNQUFKLENBQVdELFVBRGtCO0FBRXpDWCxNQUFBQTtBQUZ5QyxLQUF0QixDQUF2Qjs7QUFLQSxRQUFJLENBQUNRLFFBQUwsRUFBZTtBQUNYVixNQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYO0FBQ0g7O0FBRURQLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRSxRQUFUO0FBQ0gsR0FqQkQsQ0FpQkUsT0FBT0ssS0FBUCxFQUFjO0FBQ1pkLElBQUFBLElBQUksQ0FBQ2MsS0FBRCxDQUFKO0FBQ0g7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFjY291bnQgPSByZXF1aXJlKFwiLi9hY2NvdW50cy5tb2RlbFwiKTtcbmNvbnN0IFJvbGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvcm9sZVwiKTtcbmNvbnN0IHsgYXV0aDogQXV0aCB9ID0gcmVxdWlyZShcIi4uLy4uLy4uL19taWRkbGV3YXJlcy9hdXRoXCIpO1xuXG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKFwiZXhwcmVzc1wiKS5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5nZXQoXCIvXCIsIEF1dGgoW1JvbGUuYWRtaW4sIFJvbGUub3duZXJdKSwgZ2V0QWNjb3VudHMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWNjb3VudHMocmVxLCByZXMsIG5leHQpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB7IG93bmVyX2lkIH0gPSByZXEuYm9keTtcblxuICAgICAgICBpZiAob3duZXJfaWQgIT09IHJlcS51c2VyLmlkICYmIHJlcS51c2VyLnJvbGUgIT09IFJvbGUuYWRtaW4pIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdGhvcml6ZWRcIiB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgQWNjb3VudC5xdWVyeSgpLndoZXJlKHtcbiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgIG93bmVyX2lkLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIWFjY291bnRzKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXMuanNvbihhY2NvdW50cyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChlcnJvcik7XG4gICAgfVxufVxuIl19",
            "originalCode": "const Account = require(\"./accounts.model\");\nconst Role = require(\"../../../utils/role\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n    mergeParams: true,\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\n\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n    try {\n        const { owner_id } = req.body;\n\n        if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n            return res.status(401).json({ message: \"Unathorized\" });\n        }\n\n        const accounts = await Account.query().where({\n            company_id: req.params.company_id,\n            owner_id,\n        });\n\n        if (!accounts) {\n            res.status(404);\n        }\n\n        res.json(accounts);\n    } catch (error) {\n        next(error);\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/9b/accountsroutes_9b5521c435078c2c6c307235bad04141.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2950",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4064,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4061,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAccounts",
                "ranges": [
                  {
                    "startOffset": 402,
                    "endOffset": 886,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n  static get tableName() {\n    return tableNames.accounts;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n}\n\nmodule.exports = Account;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJzY2hlbWEiLCJBY2NvdW50IiwidGFibGVOYW1lIiwiYWNjb3VudHMiLCJqc29uU2NoZW1hIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUVBLE1BQU1HLE9BQU4sU0FBc0JKLEtBQXRCLENBQTRCO0FBQ3hCLGFBQVdLLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0gsVUFBVSxDQUFDSSxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0osTUFBUDtBQUNIOztBQVB1Qjs7QUFVNUJLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2FjY291bnRzLnNjaGVtYS5qc29uXCIpO1xuXG5jbGFzcyBBY2NvdW50IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5hY2NvdW50cztcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IGpzb25TY2hlbWEoKSB7XG4gICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFjY291bnQ7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n    static get tableName() {\n        return tableNames.accounts;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n}\n\nmodule.exports = Account;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/01/accountsmodel_01a1ad309c7db6ca01e6d4ebe4774684.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2951",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1669,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1666,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Account",
                "ranges": [
                  {
                    "startOffset": 245,
                    "endOffset": 245,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 284,
                    "endOffset": 337,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 389,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./menu.validator\");\n\nconst Company = require(\"../company.model\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\n\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/company_id/menu_id/category\n\nrouter.use(\"/:menu_id/category\", Category);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.company_id = req.params.company_id;\n  menuService.createMenu(req.body).then(menu => res.json(menu)).catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  menuService.getAllCompanyMenus({\n    company_id\n  }).then(menus => menus ? res.json(menus) : res.sendStatus(404)).catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n  menuService.getMenuById(req.params.id).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService.updateMenu(req.params.id, req.body);\n  }).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n  // only owner delete can delete their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./menu.validator\");\nconst Company = require(\"../company.model\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/company_id/menu_id/category\nrouter.use(\"/:menu_id/category\", Category);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.company_id = req.params.company_id;\n    menuService\n        .createMenu(req.body)\n        .then((menu) => res.json(menu))\n        .catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n    const { company_id } = req.params;\n\n    menuService\n        .getAllCompanyMenus({ company_id })\n        .then((menus) => (menus ? res.json(menus) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n    menuService\n        .getMenuById(req.params.id)\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService.updateMenu(req.params.id, req.body);\n        })\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n    // only owner delete can delete their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/13/menuroutes_138af69f63d31c1d809ea7f466e071eb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2952",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10631,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10628,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 932,
                    "endOffset": 1091,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 1093,
                    "endOffset": 1312,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1314,
                    "endOffset": 1466,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1468,
                    "endOffset": 1843,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteMenu",
                "ranges": [
                  {
                    "startOffset": 1845,
                    "endOffset": 2285,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    cover_url: Joi.string()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    cover_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUudmFsaWRhdG9yLmpzIl0sIm5hbWVzIjpbIkpvaSIsInJlcXVpcmUiLCJ2YWxpZGF0ZVJlcXVlc3QiLCJleHBvcnRzIiwiY3JlYXRlU2NoZW1hIiwicmVxIiwicmVzIiwibmV4dCIsInNjaGVtYSIsIm9iamVjdCIsIm5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImRlc2NyaXB0aW9uIiwiY292ZXJfdXJsIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsU0FBUyxFQUFFZCxHQUFHLENBQUNXLE1BQUo7QUFIVyxHQUFYLENBQWY7QUFLQVQsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FQRDs7QUFTQUwsT0FBTyxDQUFDWSxZQUFSLEdBQXVCLENBQUNWLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1TLFdBQVcsR0FBRztBQUNoQk4sSUFBQUEsSUFBSSxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixDQUFtQixFQUFuQixDQURVO0FBRWhCSixJQUFBQSxXQUFXLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhTSxLQUFiLENBQW1CLEVBQW5CLENBRkc7QUFHaEJILElBQUFBLFNBQVMsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFwQjtBQU1BLFFBQU1ULE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdPLFdBQVgsQ0FBZjtBQUVBZCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVZEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICB9O1xuXG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdChzY2hlbWFSdWxlcyk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        cover_url: Joi.string(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        cover_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0b/menuvalidator_0bff2254f7ebb231be87a9bba47a9cd7.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2953",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.validator.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3165,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 216,
                    "endOffset": 418,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 444,
                    "endOffset": 689,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./category.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../utils/role\");\n\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\n\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company_id/menu_id/category/category_id/item\n\nrouter.use(\"/:category_id/item\", Item);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  // check if owner of company\n  const payload = req.body;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.createcategory(payload);\n  }).then(category => res.json(category)).catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  categoryService.getAllCompanyCategorys({\n    company_id\n  }).then(categories => categories ? res.json(categories) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n  categoryService.getCategoryById(req.params.id).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company category\n  const payload = req.body;\n  payload.menu_id = req.params.menu_id;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.updateCategory(req.params.id, payload);\n  }).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n  // only owner delete can delete their company category\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n} // =========================================\n\n\nasync function isOwner(owner_id, company_id) {\n  const bool = await Company.query().where({\n    owner_id,\n    id: company_id\n  }).first();\n  return bool;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./category.validators\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst Role = require(\"../../../../utils/role\");\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company_id/menu_id/category/category_id/item\nrouter.use(\"/:category_id/item\", Item);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    // check if owner of company\n    const payload = req.body;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.createcategory(payload);\n        })\n        .then((category) => res.json(category))\n        .catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n    const { company_id } = req.params;\n\n    categoryService\n        .getAllCompanyCategorys({ company_id })\n        .then((categories) =>\n            categories ? res.json(categories) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n    categoryService\n        .getCategoryById(req.params.id)\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company category\n    const payload = req.body;\n    payload.menu_id = req.params.menu_id;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.updateCategory(req.params.id, payload);\n        })\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n    // only owner delete can delete their company category\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n\n// =========================================\nasync function isOwner(owner_id, company_id) {\n    const bool = await Company.query()\n        .where({ owner_id, id: company_id })\n        .first();\n\n    return bool;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/f9/categoryroutes_f95c539ef7b2381e749f49618b0199b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2954",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 12907,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 12904,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 962,
                    "endOffset": 1328,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 1330,
                    "endOffset": 1576,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1578,
                    "endOffset": 1754,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1756,
                    "endOffset": 2229,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteCategory",
                "ranges": [
                  {
                    "startOffset": 2231,
                    "endOffset": 2690,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 2738,
                    "endOffset": 2893,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    menu_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    menu_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVTY2hlbWEiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2NoZW1hIiwib2JqZWN0IiwibmFtZSIsInN0cmluZyIsInJlcXVpcmVkIiwibWVudV9pZCIsIm51bWJlciIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsMENBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxPQUFPLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBRmEsR0FBWCxDQUFmO0FBSUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBTkQ7O0FBUUFMLE9BQU8sQ0FBQ1ksWUFBUixHQUF1QixDQUFDVixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNUyxXQUFXLEdBQUc7QUFDaEJOLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQkosSUFBQUEsT0FBTyxFQUFFYixHQUFHLENBQUNjLE1BQUosR0FBYUcsS0FBYixDQUFtQixFQUFuQjtBQUZPLEdBQXBCO0FBS0EsUUFBTVQsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV08sV0FBWCxDQUFmO0FBRUFkLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBKb2kgPSByZXF1aXJlKFwiam9pXCIpO1xuY29uc3QgdmFsaWRhdGVSZXF1ZXN0ID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL19taWRkbGV3YXJlcy92YWxpZGF0ZVJlcXVlc3RcIik7XG5cbmV4cG9ydHMuY3JlYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        menu_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        menu_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/1b/categoryvalidators_1b6fa12bad6d90716c229117a118363b.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2955",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2827,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2824,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 219,
                    "endOffset": 388,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 414,
                    "endOffset": 616,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./item.validators\");\n\nconst {\n  auth: Auth,\n  isOwner\n} = require(\"../../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../../utils/role\");\n\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  itemService.createItem(req.body).then(item => res.status(201).json(item)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  itemService.getItemById(req.params.id).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction updateItem(req, res, next) {\n  itemService.updateItem(req.params.id, req.body).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n  itemService.deleteItem({\n    id: req.params.id\n  }).then(() => res.json({\n    message: \"Item deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ucm91dGVzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY3JlYXRlU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwiYXV0aCIsIkF1dGgiLCJpc093bmVyIiwiUm9sZSIsIml0ZW1TZXJ2aWNlIiwicm91dGVyIiwiUm91dGVyIiwibWVyZ2VQYXJhbXMiLCJwb3N0Iiwib3duZXIiLCJjcmVhdGUiLCJnZXQiLCJnZXRCeUlkIiwicGF0Y2giLCJ1cGRhdGVJdGVtIiwiZGVsZXRlIiwiZGVsZXRlSXRlbSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY3JlYXRlSXRlbSIsImJvZHkiLCJ0aGVuIiwiaXRlbSIsInN0YXR1cyIsImpzb24iLCJjYXRjaCIsImdldEl0ZW1CeUlkIiwicGFyYW1zIiwiaWQiLCJzZW5kU3RhdHVzIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBO0FBQWhCLElBQWlDRixPQUFPLENBQUMsbUJBQUQsQ0FBOUM7O0FBQ0EsTUFBTTtBQUFFRyxFQUFBQSxJQUFJLEVBQUVDLElBQVI7QUFBY0MsRUFBQUE7QUFBZCxJQUEwQkwsT0FBTyxDQUFDLGtDQUFELENBQXZDOztBQUNBLE1BQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLDJCQUFELENBQXBCOztBQUNBLE1BQU1PLFdBQVcsR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQTNCOztBQUVBLE1BQU1RLE1BQU0sR0FBR1QsT0FBTyxDQUFDVSxNQUFSLENBQWU7QUFDMUJDLEVBQUFBLFdBQVcsRUFBRTtBQURhLENBQWYsQ0FBZjtBQUlBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCUCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBckIsRUFBcUNQLE9BQU8sRUFBNUMsRUFBZ0RKLFlBQWhELEVBQThEWSxNQUE5RDtBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxNQUFYLEVBQW1CVixJQUFJLEVBQXZCLEVBQTJCVyxPQUEzQjtBQUNBUCxNQUFNLENBQUNRLEtBQVAsQ0FBYSxNQUFiLEVBQXFCWixJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBekIsRUFBeUNQLE9BQU8sRUFBaEQsRUFBb0RILFlBQXBELEVBQWtFZSxVQUFsRTtBQUNBVCxNQUFNLENBQUNVLE1BQVAsQ0FBYyxNQUFkLEVBQXNCZCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBMUIsRUFBMENQLE9BQU8sRUFBakQsRUFBcURjLFVBQXJEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakI7O0FBRUEsU0FBU0ssTUFBVCxDQUFnQlMsR0FBaEIsRUFBcUJDLEdBQXJCLEVBQTBCQyxJQUExQixFQUFnQztBQUM1QmpCLEVBQUFBLFdBQVcsQ0FDTmtCLFVBREwsQ0FDZ0JILEdBQUcsQ0FBQ0ksSUFEcEIsRUFFS0MsSUFGTCxDQUVXQyxJQUFELElBQVVMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixJQUFyQixDQUZwQixFQUdLRyxLQUhMLENBR1dQLElBSFg7QUFJSDs7QUFFRCxTQUFTVCxPQUFULENBQWlCTyxHQUFqQixFQUFzQkMsR0FBdEIsRUFBMkJDLElBQTNCLEVBQWlDO0FBQzdCakIsRUFBQUEsV0FBVyxDQUNOeUIsV0FETCxDQUNpQlYsR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDVCLEVBRUtQLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU1AsVUFBVCxDQUFvQkssR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlUsVUFETCxDQUNnQkssR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDNCLEVBQytCWixHQUFHLENBQUNJLElBRG5DLEVBRUtDLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU0wsVUFBVCxDQUFvQkcsR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlksVUFETCxDQUNnQjtBQUFFZSxJQUFBQSxFQUFFLEVBQUVaLEdBQUcsQ0FBQ1csTUFBSixDQUFXQztBQUFqQixHQURoQixFQUVLUCxJQUZMLENBRVUsTUFDRkosR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDTE0sSUFBQUEsT0FBTyxFQUFFLDJCQURKO0FBRUxGLElBQUFBLEVBQUUsRUFBRVosR0FBRyxDQUFDVyxNQUFKLENBQVdDO0FBRlYsR0FBVCxDQUhSLEVBUUtILEtBUkwsQ0FRV1AsSUFSWDtBQVNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBjcmVhdGVTY2hlbWEsIHVwZGF0ZVNjaGVtYSB9ID0gcmVxdWlyZShcIi4vaXRlbS52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoLCBpc093bmVyIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBpdGVtU2VydmljZSA9IHJlcXVpcmUoXCIuL2l0ZW0uc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wb3N0KFwiL1wiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgY3JlYXRlU2NoZW1hLCBjcmVhdGUpO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRCeUlkKTtcbnJvdXRlci5wYXRjaChcIi86aWRcIiwgQXV0aChbUm9sZS5vd25lcl0pLCBpc093bmVyKCksIHVwZGF0ZVNjaGVtYSwgdXBkYXRlSXRlbSk7XG5yb3V0ZXIuZGVsZXRlKFwiLzppZFwiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgZGVsZXRlSXRlbSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuXG5mdW5jdGlvbiBjcmVhdGUocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuY3JlYXRlSXRlbShyZXEuYm9keSlcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKGl0ZW0pKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldEJ5SWQocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuZ2V0SXRlbUJ5SWQocmVxLnBhcmFtcy5pZClcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IChpdGVtID8gcmVzLmpzb24oaXRlbSkgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVJdGVtKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgaXRlbVNlcnZpY2VcbiAgICAgICAgLnVwZGF0ZUl0ZW0ocmVxLnBhcmFtcy5pZCwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChpdGVtKSA9PiAoaXRlbSA/IHJlcy5qc29uKGl0ZW0pIDogcmVzLnNlbmRTdGF0dXMoNDA0KSkpXG4gICAgICAgIC5jYXRjaChuZXh0KTtcbn1cblxuZnVuY3Rpb24gZGVsZXRlSXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIGl0ZW1TZXJ2aWNlXG4gICAgICAgIC5kZWxldGVJdGVtKHsgaWQ6IHJlcS5wYXJhbXMuaWQgfSlcbiAgICAgICAgLnRoZW4oKCkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkl0ZW0gZGVsZXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgICAgICBpZDogcmVxLnBhcmFtcy5pZCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuIl19",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./item.validators\");\nconst { auth: Auth, isOwner } = require(\"../../../../../_middlewares/auth\");\nconst Role = require(\"../../../../../utils/role\");\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    itemService\n        .createItem(req.body)\n        .then((item) => res.status(201).json(item))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    itemService\n        .getItemById(req.params.id)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction updateItem(req, res, next) {\n    itemService\n        .updateItem(req.params.id, req.body)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n    itemService\n        .deleteItem({ id: req.params.id })\n        .then(() =>\n            res.json({\n                message: \"Item deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/de/itemroutes_de9b46cc999b0a12213b699c8d15bd22.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2956",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6599,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6596,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 717,
                    "endOffset": 841,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 843,
                    "endOffset": 991,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 993,
                    "endOffset": 1153,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 1155,
                    "endOffset": 1353,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    price: Joi.number().required(),\n    quantity: Joi.number().required(),\n    description: Joi.string().required(),\n    image_url: Joi.string(),\n    category_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    price: Joi.number().empty(\"\"),\n    quantity: Joi.number().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    image_url: Joi.string(),\n    category_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0udmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJwcmljZSIsIm51bWJlciIsInF1YW50aXR5IiwiZGVzY3JpcHRpb24iLCJpbWFnZV91cmwiLCJjYXRlZ29yeV9pZCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsNkNBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxLQUFLLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiLEVBRmU7QUFHdEJHLElBQUFBLFFBQVEsRUFBRWYsR0FBRyxDQUFDYyxNQUFKLEdBQWFGLFFBQWIsRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFKUztBQUt0QkssSUFBQUEsU0FBUyxFQUFFakIsR0FBRyxDQUFDVyxNQUFKLEVBTFc7QUFNdEJPLElBQUFBLFdBQVcsRUFBRWxCLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBTlMsR0FBWCxDQUFmO0FBUUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVkQ7O0FBWUFMLE9BQU8sQ0FBQ2dCLFlBQVIsR0FBdUIsQ0FBQ2QsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTWEsV0FBVyxHQUFHO0FBQ2hCVixJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CLEVBQW5CLENBRFU7QUFFaEJSLElBQUFBLEtBQUssRUFBRWIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGUztBQUdoQk4sSUFBQUEsUUFBUSxFQUFFZixHQUFHLENBQUNjLE1BQUosR0FBYU8sS0FBYixDQUFtQixFQUFuQixDQUhNO0FBSWhCTCxJQUFBQSxXQUFXLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYVUsS0FBYixDQUFtQixFQUFuQixDQUpHO0FBS2hCSixJQUFBQSxTQUFTLEVBQUVqQixHQUFHLENBQUNXLE1BQUosRUFMSztBQU1oQk8sSUFBQUEsV0FBVyxFQUFFbEIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkI7QUFORyxHQUFwQjtBQVNBLFFBQU1iLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdXLFdBQVgsQ0FBZjtBQUVBbEIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FiRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIHByaWNlOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5yZXF1aXJlZCgpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIGltYWdlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBjYXRlZ29yeV9pZDogSm9pLm51bWJlcigpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMudXBkYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hUnVsZXMgPSB7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHJpY2U6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgaW1hZ2VfdXJsOiBKb2kuc3RyaW5nKCksXG4gICAgICAgIGNhdGVnb3J5X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        price: Joi.number().required(),\n        quantity: Joi.number().required(),\n        description: Joi.string().required(),\n        image_url: Joi.string(),\n        category_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        price: Joi.number().empty(\"\"),\n        quantity: Joi.number().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        image_url: Joi.string(),\n        category_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/b3/itemvalidators_b3b5560b6fc02d936e24d53b4a41cdcb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2957",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4275,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4272,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 222,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 567,
                    "endOffset": 916,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Item = require(\"./item.model\");\n\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n  createItem,\n  getItemById,\n  updateItem,\n  deleteItem\n};\n\nasync function createItem(params) {\n  const item = await Item.query().insert(params);\n  return basicDetails(item);\n}\n\nasync function getItemById(id) {\n  const item = await getItem({\n    id\n  });\n  return item;\n}\n\nasync function updateItem(id, params) {\n  const updateItem = await Item.query().patchAndFetchById(id, params);\n  return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n  await Item.query().delete({ ...queryParams\n  });\n} // =================== helpers ============================\n\n\nasync function getItem(params) {\n  const item = await Item.query().where({ ...params\n  }).first();\n  return item;\n}\n\nfunction basicDetails(item) {\n  const {\n    id,\n    name,\n    description\n  } = item;\n  return {\n    id,\n    name,\n    description\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0uc2VydmljZS5qcyJdLCJuYW1lcyI6WyJJdGVtIiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZUl0ZW0iLCJnZXRJdGVtQnlJZCIsInVwZGF0ZUl0ZW0iLCJkZWxldGVJdGVtIiwicGFyYW1zIiwiaXRlbSIsInF1ZXJ5IiwiaW5zZXJ0IiwiYmFzaWNEZXRhaWxzIiwiaWQiLCJnZXRJdGVtIiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsIndoZXJlIiwiZmlyc3QiLCJuYW1lIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFdBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQTtBQUphLENBQWpCOztBQU9BLGVBQWVILFVBQWYsQ0FBMEJJLE1BQTFCLEVBQWtDO0FBQzlCLFFBQU1DLElBQUksR0FBRyxNQUFNVixJQUFJLENBQUNXLEtBQUwsR0FBYUMsTUFBYixDQUFvQkgsTUFBcEIsQ0FBbkI7QUFDQSxTQUFPSSxZQUFZLENBQUNILElBQUQsQ0FBbkI7QUFDSDs7QUFFRCxlQUFlSixXQUFmLENBQTJCUSxFQUEzQixFQUErQjtBQUMzQixRQUFNSixJQUFJLEdBQUcsTUFBTUssT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9KLElBQVA7QUFDSDs7QUFFRCxlQUFlSCxVQUFmLENBQTBCTyxFQUExQixFQUE4QkwsTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUYsVUFBVSxHQUFHLE1BQU1QLElBQUksQ0FBQ1csS0FBTCxHQUFhSyxpQkFBYixDQUErQkYsRUFBL0IsRUFBbUNMLE1BQW5DLENBQXpCO0FBRUEsU0FBT0YsVUFBUDtBQUNIOztBQUVELGVBQWVDLFVBQWYsQ0FBMEJTLFdBQTFCLEVBQXVDO0FBQ25DLFFBQU1qQixJQUFJLENBQUNXLEtBQUwsR0FBYU8sTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDs7O0FBQ0EsZUFBZUYsT0FBZixDQUF1Qk4sTUFBdkIsRUFBK0I7QUFDM0IsUUFBTUMsSUFBSSxHQUFHLE1BQU1WLElBQUksQ0FBQ1csS0FBTCxHQUNkUSxLQURjLENBQ1IsRUFBRSxHQUFHVjtBQUFMLEdBRFEsRUFFZFcsS0FGYyxFQUFuQjtBQUdBLFNBQU9WLElBQVA7QUFDSDs7QUFFRCxTQUFTRyxZQUFULENBQXNCSCxJQUF0QixFQUE0QjtBQUN4QixRQUFNO0FBQUVJLElBQUFBLEVBQUY7QUFBTU8sSUFBQUEsSUFBTjtBQUFZQyxJQUFBQTtBQUFaLE1BQTRCWixJQUFsQztBQUNBLFNBQU87QUFBRUksSUFBQUEsRUFBRjtBQUFNTyxJQUFBQSxJQUFOO0FBQVlDLElBQUFBO0FBQVosR0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSXRlbSA9IHJlcXVpcmUoXCIuL2l0ZW0ubW9kZWxcIik7XG5jb25zdCBlcnJvciA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi91dGlscy9lcnJvclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlSXRlbSxcbiAgICBnZXRJdGVtQnlJZCxcbiAgICB1cGRhdGVJdGVtLFxuICAgIGRlbGV0ZUl0ZW0sXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhpdGVtKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0SXRlbUJ5SWQoaWQpIHtcbiAgICBjb25zdCBpdGVtID0gYXdhaXQgZ2V0SXRlbSh7IGlkIH0pO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVJdGVtKGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCB1cGRhdGVJdGVtID0gYXdhaXQgSXRlbS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIHVwZGF0ZUl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUl0ZW0ocXVlcnlQYXJhbXMpIHtcbiAgICBhd2FpdCBJdGVtLnF1ZXJ5KCkuZGVsZXRlKHsgLi4ucXVlcnlQYXJhbXMgfSk7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT0gaGVscGVycyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW1zIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMoaXRlbSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGRlc2NyaXB0aW9uIH0gPSBpdGVtO1xuICAgIHJldHVybiB7IGlkLCBuYW1lLCBkZXNjcmlwdGlvbiB9O1xufVxuIl19",
            "originalCode": "const Item = require(\"./item.model\");\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n    createItem,\n    getItemById,\n    updateItem,\n    deleteItem,\n};\n\nasync function createItem(params) {\n    const item = await Item.query().insert(params);\n    return basicDetails(item);\n}\n\nasync function getItemById(id) {\n    const item = await getItem({ id });\n    return item;\n}\n\nasync function updateItem(id, params) {\n    const updateItem = await Item.query().patchAndFetchById(id, params);\n\n    return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n    await Item.query().delete({ ...queryParams });\n}\n\n// =================== helpers ============================\nasync function getItem(params) {\n    const item = await Item.query()\n        .where({ ...params })\n        .first();\n    return item;\n}\n\nfunction basicDetails(item) {\n    const { id, name, description } = item;\n    return { id, name, description };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/37/itemservice_37723bc6ce9a1333746fd65833e30b1c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2958",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4281,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4278,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createItem",
                "ranges": [
                  {
                    "startOffset": 261,
                    "endOffset": 377,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItemById",
                "ranges": [
                  {
                    "startOffset": 379,
                    "endOffset": 472,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 474,
                    "endOffset": 607,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 609,
                    "endOffset": 702,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItem",
                "ranges": [
                  {
                    "startOffset": 765,
                    "endOffset": 880,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 882,
                    "endOffset": 1019,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../../../constants/tableNames\");\n\nconst db = require(\"../../../../../db\");\n\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n  static get tableName() {\n    return tableNames.item;\n  }\n\n  static get relationMappings() {\n    const Category = require(\"../../category/category.model\");\n\n    return {\n      category: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Category,\n        join: {\n          from: `${tableNames.item}.category_id`,\n          to: `${tableNames.category}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Item;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiQ2F0ZWdvcnkiLCJJdGVtIiwidGFibGVOYW1lIiwiaXRlbSIsInJlbGF0aW9uTWFwcGluZ3MiLCJjYXRlZ29yeSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsImtuZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBWUMsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMscUNBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBbEI7O0FBQ0EsTUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBRUEsTUFBTUksSUFBTixTQUFtQkwsS0FBbkIsQ0FBeUI7QUFDckIsYUFBV00sU0FBWCxHQUF1QjtBQUNuQixXQUFPSixVQUFVLENBQUNLLElBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUosUUFBUSxHQUFHSCxPQUFPLENBQUMsK0JBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIUSxNQUFBQSxRQUFRLEVBQUU7QUFDTkMsUUFBQUEsUUFBUSxFQUFFVixLQUFLLENBQUNXLG9CQURWO0FBRU5DLFFBQUFBLFVBQVUsRUFBRVIsUUFGTjtBQUdOUyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVaLFVBQVUsQ0FBQ0ssSUFBSyxjQUR2QjtBQUVGUSxVQUFBQSxFQUFFLEVBQUcsR0FBRWIsVUFBVSxDQUFDTyxRQUFTO0FBRnpCO0FBSEE7QUFEUCxLQUFQO0FBVUg7O0FBbEJvQjs7QUFxQnpCVCxLQUFLLENBQUNnQixJQUFOLENBQVdiLEVBQVg7QUFFQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vZGJcIik7XG5jb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS5tb2RlbFwiKTtcblxuY2xhc3MgSXRlbSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuaXRlbTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIGNvbnN0IENhdGVnb3J5ID0gcmVxdWlyZShcIi4uLy4uL2NhdGVnb3J5L2NhdGVnb3J5Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjYXRlZ29yeToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBDYXRlZ29yeSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMuaXRlbX0uY2F0ZWdvcnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jYXRlZ29yeX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gSXRlbTtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../../../constants/tableNames\");\nconst db = require(\"../../../../../db\");\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n    static get tableName() {\n        return tableNames.item;\n    }\n\n    static get relationMappings() {\n        const Category = require(\"../../category/category.model\");\n\n        return {\n            category: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Category,\n                join: {\n                    from: `${tableNames.item}.category_id`,\n                    to: `${tableNames.category}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Item;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/bd/itemmodel_bde36e534327c1a1231475da3047e2a2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2959",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3171,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Item",
                "ranges": [
                  {
                    "startOffset": 290,
                    "endOffset": 290,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 326,
                    "endOffset": 375,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 386,
                    "endOffset": 718,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../../db\");\n\nconst schema = require(\"./category.schema.json\");\n\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n  static get tableName() {\n    return tableNames.category;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Menu = require(\"../menu.model\");\n\n    const Item = require(\"../menu/item/item.model\");\n\n    return {\n      menu: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Menu,\n        join: {\n          from: `${tableName.category}.menu_id`,\n          to: `${tableNames.menu}.id`\n        }\n      },\n      items: {\n        relation: Model.HasManyRelation,\n        modelClasss: Item,\n        join: {\n          from: `${tableNames.category}.id`,\n          to: `${tableNames.item}.category_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Category;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5Lm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsImRiIiwic2NoZW1hIiwidGFibGVOYW1lcyIsIkNhdGVnb3J5IiwidGFibGVOYW1lIiwiY2F0ZWdvcnkiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIk1lbnUiLCJJdGVtIiwibWVudSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJpdGVtcyIsIkhhc01hbnlSZWxhdGlvbiIsIml0ZW0iLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLGtDQUFELENBQTFCOztBQUVBLE1BQU1JLFFBQU4sU0FBdUJMLEtBQXZCLENBQTZCO0FBQ3pCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsSUFBSSxHQUFHVCxPQUFPLENBQUMsZUFBRCxDQUFwQjs7QUFDQSxVQUFNVSxJQUFJLEdBQUdWLE9BQU8sQ0FBQyx5QkFBRCxDQUFwQjs7QUFFQSxXQUFPO0FBQ0hXLE1BQUFBLElBQUksRUFBRTtBQUNGQyxRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ2Msb0JBRGQ7QUFFRkMsUUFBQUEsV0FBVyxFQUFFTCxJQUZYO0FBR0ZNLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRVgsU0FBUyxDQUFDQyxRQUFTLFVBRDFCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNRLElBQUs7QUFGckI7QUFISixPQURIO0FBU0hPLE1BQUFBLEtBQUssRUFBRTtBQUNITixRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ29CLGVBRGI7QUFFSEwsUUFBQUEsV0FBVyxFQUFFSixJQUZWO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWIsVUFBVSxDQUFDRyxRQUFTLEtBRDNCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEg7QUFUSixLQUFQO0FBa0JIOztBQWhDd0I7O0FBbUM3QnJCLEtBQUssQ0FBQ3NCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLFFBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IGRiID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2RiXCIpO1xuY29uc3Qgc2NoZW1hID0gcmVxdWlyZShcIi4vY2F0ZWdvcnkuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBDYXRlZ29yeSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuY2F0ZWdvcnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4uL21lbnUubW9kZWxcIik7XG4gICAgICAgIGNvbnN0IEl0ZW0gPSByZXF1aXJlKFwiLi4vbWVudS9pdGVtL2l0ZW0ubW9kZWxcIik7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1lbnU6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IE1lbnUsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWUuY2F0ZWdvcnl9Lm1lbnVfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpdGVtczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IEl0ZW0sXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLml0ZW19LmNhdGVnb3J5X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhdGVnb3J5O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../../db\");\nconst schema = require(\"./category.schema.json\");\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n    static get tableName() {\n        return tableNames.category;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Menu = require(\"../menu.model\");\n        const Item = require(\"../menu/item/item.model\");\n\n        return {\n            menu: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Menu,\n                join: {\n                    from: `${tableName.category}.menu_id`,\n                    to: `${tableNames.menu}.id`,\n                },\n            },\n            items: {\n                relation: Model.HasManyRelation,\n                modelClasss: Item,\n                join: {\n                    from: `${tableNames.category}.id`,\n                    to: `${tableNames.item}.category_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Category;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0e/categorymodel_0ef83f3e2352e4f7122c2a335cba1fb2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2960",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4654,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4651,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Category",
                "ranges": [
                  {
                    "startOffset": 287,
                    "endOffset": 287,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 327,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 391,
                    "endOffset": 432,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 443,
                    "endOffset": 1073,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Category = require(\"./category.model\");\n\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n  createCategory,\n  updateCategory,\n  getAllCategory,\n  getAllCompanyCategorys,\n  getCategoryById,\n  _delete\n};\n\nasync function createCategory(params) {\n  const category = await Category.query().insert(params);\n  return category;\n}\n\nasync function updateCategory(id, params) {\n  const category = await getCategory({\n    id\n  }); //check if category name is duplicated\n\n  if (params.name && category.name !== params.name && (await getCategory({\n    name: params.name,\n    menu_id: params.menu_id\n  }))) {\n    error(`Category ${params.name} already exists`);\n  }\n\n  const updatedcategory = await Category.query().patchAndFetchById(id, { ...params\n  });\n  return updatedcategory;\n}\n\nasync function getAllCategory() {\n  const categorys = await Category.query();\n  return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n  const categorys = await Category.query({ ...params\n  });\n  return categorys;\n}\n\nasync function getCategoryById(id) {\n  const category = await getCategory({\n    id\n  });\n  return category;\n}\n\nasync function _delete(queryParams) {\n  await Category.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCategory(param) {\n  const category = await Category.query().where({ ...param\n  }).withGraphFetched(\"items\").first();\n  return category;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnNlcnZpY2UuanMiXSwibmFtZXMiOlsiQ2F0ZWdvcnkiLCJyZXF1aXJlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlQ2F0ZWdvcnkiLCJ1cGRhdGVDYXRlZ29yeSIsImdldEFsbENhdGVnb3J5IiwiZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyIsImdldENhdGVnb3J5QnlJZCIsIl9kZWxldGUiLCJwYXJhbXMiLCJjYXRlZ29yeSIsInF1ZXJ5IiwiaW5zZXJ0IiwiaWQiLCJnZXRDYXRlZ29yeSIsIm5hbWUiLCJtZW51X2lkIiwidXBkYXRlZGNhdGVnb3J5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJjYXRlZ29yeXMiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsInBhcmFtIiwid2hlcmUiLCJ3aXRoR3JhcGhGZXRjaGVkIiwiZmlyc3QiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXhCOztBQUNBLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLHlCQUFELENBQXJCOztBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsY0FEYTtBQUViQyxFQUFBQSxjQUZhO0FBR2JDLEVBQUFBLGNBSGE7QUFJYkMsRUFBQUEsc0JBSmE7QUFLYkMsRUFBQUEsZUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLGNBQWYsQ0FBOEJNLE1BQTlCLEVBQXNDO0FBQ2xDLFFBQU1DLFFBQVEsR0FBRyxNQUFNWixRQUFRLENBQUNhLEtBQVQsR0FBaUJDLE1BQWpCLENBQXdCSCxNQUF4QixDQUF2QjtBQUNBLFNBQU9DLFFBQVA7QUFDSDs7QUFFRCxlQUFlTixjQUFmLENBQThCUyxFQUE5QixFQUFrQ0osTUFBbEMsRUFBMEM7QUFDdEMsUUFBTUMsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEMsQ0FEc0MsQ0FFdEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLFFBQVEsQ0FBQ0ssSUFBVCxLQUFrQk4sTUFBTSxDQUFDTSxJQUR6QixLQUVDLE1BQU1ELFdBQVcsQ0FBQztBQUNmQyxJQUFBQSxJQUFJLEVBQUVOLE1BQU0sQ0FBQ00sSUFERTtBQUVmQyxJQUFBQSxPQUFPLEVBQUVQLE1BQU0sQ0FBQ087QUFGRCxHQUFELENBRmxCLENBREosRUFPRTtBQUNFaEIsSUFBQUEsS0FBSyxDQUFFLFlBQVdTLE1BQU0sQ0FBQ00sSUFBSyxpQkFBekIsQ0FBTDtBQUNIOztBQUNELFFBQU1FLGVBQWUsR0FBRyxNQUFNbkIsUUFBUSxDQUFDYSxLQUFULEdBQWlCTyxpQkFBakIsQ0FBbUNMLEVBQW5DLEVBQXVDLEVBQ2pFLEdBQUdKO0FBRDhELEdBQXZDLENBQTlCO0FBSUEsU0FBT1EsZUFBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsR0FBZ0M7QUFDNUIsUUFBTWMsU0FBUyxHQUFHLE1BQU1yQixRQUFRLENBQUNhLEtBQVQsRUFBeEI7QUFDQSxTQUFPUSxTQUFQO0FBQ0g7O0FBRUQsZUFBZWIsc0JBQWYsQ0FBc0NHLE1BQXRDLEVBQThDO0FBQzFDLFFBQU1VLFNBQVMsR0FBRyxNQUFNckIsUUFBUSxDQUFDYSxLQUFULENBQWUsRUFBRSxHQUFHRjtBQUFMLEdBQWYsQ0FBeEI7QUFDQSxTQUFPVSxTQUFQO0FBQ0g7O0FBRUQsZUFBZVosZUFBZixDQUErQk0sRUFBL0IsRUFBbUM7QUFDL0IsUUFBTUgsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEM7QUFDQSxTQUFPSCxRQUFQO0FBQ0g7O0FBRUQsZUFBZUYsT0FBZixDQUF1QlksV0FBdkIsRUFBb0M7QUFDaEMsUUFBTXRCLFFBQVEsQ0FBQ2EsS0FBVCxHQUFpQlUsTUFBakIsQ0FBd0IsRUFBRSxHQUFHRDtBQUFMLEdBQXhCLENBQU47QUFDSCxDLENBRUQ7QUFDQTtBQUNBO0FBRUE7QUFFQTs7O0FBRUEsZUFBZU4sV0FBZixDQUEyQlEsS0FBM0IsRUFBa0M7QUFDOUIsUUFBTVosUUFBUSxHQUFHLE1BQU1aLFFBQVEsQ0FBQ2EsS0FBVCxHQUNsQlksS0FEa0IsQ0FDWixFQUFFLEdBQUdEO0FBQUwsR0FEWSxFQUVsQkUsZ0JBRmtCLENBRUQsT0FGQyxFQUdsQkMsS0FIa0IsRUFBdkI7QUFLQSxTQUFPZixRQUFQO0FBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuL2NhdGVnb3J5Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZUNhdGVnb3J5LFxuICAgIHVwZGF0ZUNhdGVnb3J5LFxuICAgIGdldEFsbENhdGVnb3J5LFxuICAgIGdldEFsbENvbXBhbnlDYXRlZ29yeXMsXG4gICAgZ2V0Q2F0ZWdvcnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVDYXRlZ29yeShwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVDYXRlZ29yeShpZCwgcGFyYW1zKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBnZXRDYXRlZ29yeSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgY2F0ZWdvcnkgbmFtZSBpcyBkdXBsaWNhdGVkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjYXRlZ29yeS5uYW1lICE9PSBwYXJhbXMubmFtZSAmJlxuICAgICAgICAoYXdhaXQgZ2V0Q2F0ZWdvcnkoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBtZW51X2lkOiBwYXJhbXMubWVudV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBDYXRlZ29yeSAke3BhcmFtcy5uYW1lfSBhbHJlYWR5IGV4aXN0c2ApO1xuICAgIH1cbiAgICBjb25zdCB1cGRhdGVkY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkY2F0ZWdvcnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENhdGVnb3J5KCkge1xuICAgIGNvbnN0IGNhdGVnb3J5cyA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNhdGVnb3J5cztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyhwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeXMgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSh7IC4uLnBhcmFtcyB9KTtcbiAgICByZXR1cm4gY2F0ZWdvcnlzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRDYXRlZ29yeUJ5SWQoaWQpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IGdldENhdGVnb3J5KHsgaWQgfSk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiBfZGVsZXRlKHF1ZXJ5UGFyYW1zKSB7XG4gICAgYXdhaXQgQ2F0ZWdvcnkucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IGNhdGVnb3J5LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENhdGVnb3J5KHBhcmFtKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIilcbiAgICAgICAgLmZpcnN0KCk7XG5cbiAgICByZXR1cm4gY2F0ZWdvcnk7XG59XG4iXX0=",
            "originalCode": "const Category = require(\"./category.model\");\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n    createCategory,\n    updateCategory,\n    getAllCategory,\n    getAllCompanyCategorys,\n    getCategoryById,\n    _delete,\n};\n\nasync function createCategory(params) {\n    const category = await Category.query().insert(params);\n    return category;\n}\n\nasync function updateCategory(id, params) {\n    const category = await getCategory({ id });\n    //check if category name is duplicated\n    if (\n        params.name &&\n        category.name !== params.name &&\n        (await getCategory({\n            name: params.name,\n            menu_id: params.menu_id,\n        }))\n    ) {\n        error(`Category ${params.name} already exists`);\n    }\n    const updatedcategory = await Category.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedcategory;\n}\n\nasync function getAllCategory() {\n    const categorys = await Category.query();\n    return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n    const categorys = await Category.query({ ...params });\n    return categorys;\n}\n\nasync function getCategoryById(id) {\n    const category = await getCategory({ id });\n    return category;\n}\n\nasync function _delete(queryParams) {\n    await Category.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCategory(param) {\n    const category = await Category.query()\n        .where({ ...param })\n        .withGraphFetched(\"items\")\n        .first();\n\n    return category;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/af/categoryservice_af4a088c54a063175cdbab3d375f5ef2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2961",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6647,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6644,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createCategory",
                "ranges": [
                  {
                    "startOffset": 319,
                    "endOffset": 437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateCategory",
                "ranges": [
                  {
                    "startOffset": 439,
                    "endOffset": 884,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCategory",
                "ranges": [
                  {
                    "startOffset": 886,
                    "endOffset": 985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 987,
                    "endOffset": 1115,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1117,
                    "endOffset": 1226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1228,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategory",
                "ranges": [
                  {
                    "startOffset": 1462,
                    "endOffset": 1617,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Menu = require(\"../menu/menu.model\");\n\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n  createMenu,\n  updateMenu,\n  getAllMenu,\n  getAllCompanyMenus,\n  getMenuById,\n  _delete\n};\n\nasync function createMenu(params) {\n  const menu = await Menu.query().insert(params);\n  return menu;\n}\n\nasync function updateMenu(id, params) {\n  const menu = await getMenu({\n    id\n  }); //check if menu name is duplicated\n\n  if (params.name && menu.name !== params.name && (await getMenu({\n    name: params.name,\n    company_id: params.company_id\n  }))) {\n    error(`Menu ${params.name} already exists`);\n  }\n\n  const updatedmenu = await Menu.query().patchAndFetchById(id, { ...params\n  });\n  return updatedmenu;\n}\n\nasync function getAllMenu() {\n  const menus = await Menu.query();\n  return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n  const menus = await Menu.query({ ...params\n  });\n  return menus;\n}\n\nasync function getMenuById(id) {\n  const menu = await getMenu({\n    id\n  });\n  return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n  await Menu.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getMenu(param) {\n  const menu = await Menu.query().where({ ...param\n  }).withGraphFetched(\"categories\").first();\n  return menu;\n}\n\nfunction basicDetails(menu) {\n  const {\n    id,\n    name,\n    company_id,\n    categories\n  } = menu;\n  return {\n    id,\n    name,\n    company_id,\n    categories\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZW51IiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU1lbnUiLCJ1cGRhdGVNZW51IiwiZ2V0QWxsTWVudSIsImdldEFsbENvbXBhbnlNZW51cyIsImdldE1lbnVCeUlkIiwiX2RlbGV0ZSIsInBhcmFtcyIsIm1lbnUiLCJxdWVyeSIsImluc2VydCIsImlkIiwiZ2V0TWVudSIsIm5hbWUiLCJjb21wYW55X2lkIiwidXBkYXRlZG1lbnUiLCJwYXRjaEFuZEZldGNoQnlJZCIsIm1lbnVzIiwiYmFzaWNEZXRhaWxzIiwicXVlcnlQYXJhbXMiLCJkZWxldGUiLCJwYXJhbSIsIndoZXJlIiwid2l0aEdyYXBoRmV0Y2hlZCIsImZpcnN0IiwiY2F0ZWdvcmllcyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsc0JBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFVBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQSxrQkFKYTtBQUtiQyxFQUFBQSxXQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsVUFBZixDQUEwQk0sTUFBMUIsRUFBa0M7QUFDOUIsUUFBTUMsSUFBSSxHQUFHLE1BQU1aLElBQUksQ0FBQ2EsS0FBTCxHQUFhQyxNQUFiLENBQW9CSCxNQUFwQixDQUFuQjtBQUNBLFNBQU9DLElBQVA7QUFDSDs7QUFFRCxlQUFlTixVQUFmLENBQTBCUyxFQUExQixFQUE4QkosTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUMsSUFBSSxHQUFHLE1BQU1JLE9BQU8sQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBMUIsQ0FEa0MsQ0FFbEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLElBQUksQ0FBQ0ssSUFBTCxLQUFjTixNQUFNLENBQUNNLElBRHJCLEtBRUMsTUFBTUQsT0FBTyxDQUFDO0FBQ1hDLElBQUFBLElBQUksRUFBRU4sTUFBTSxDQUFDTSxJQURGO0FBRVhDLElBQUFBLFVBQVUsRUFBRVAsTUFBTSxDQUFDTztBQUZSLEdBQUQsQ0FGZCxDQURKLEVBT0U7QUFDRWhCLElBQUFBLEtBQUssQ0FBRSxRQUFPUyxNQUFNLENBQUNNLElBQUssaUJBQXJCLENBQUw7QUFDSDs7QUFDRCxRQUFNRSxXQUFXLEdBQUcsTUFBTW5CLElBQUksQ0FBQ2EsS0FBTCxHQUFhTyxpQkFBYixDQUErQkwsRUFBL0IsRUFBbUMsRUFDekQsR0FBR0o7QUFEc0QsR0FBbkMsQ0FBMUI7QUFJQSxTQUFPUSxXQUFQO0FBQ0g7O0FBRUQsZUFBZVosVUFBZixHQUE0QjtBQUN4QixRQUFNYyxLQUFLLEdBQUcsTUFBTXJCLElBQUksQ0FBQ2EsS0FBTCxFQUFwQjtBQUNBLFNBQU9RLEtBQVA7QUFDSDs7QUFFRCxlQUFlYixrQkFBZixDQUFrQ0csTUFBbEMsRUFBMEM7QUFDdEMsUUFBTVUsS0FBSyxHQUFHLE1BQU1yQixJQUFJLENBQUNhLEtBQUwsQ0FBVyxFQUFFLEdBQUdGO0FBQUwsR0FBWCxDQUFwQjtBQUNBLFNBQU9VLEtBQVA7QUFDSDs7QUFFRCxlQUFlWixXQUFmLENBQTJCTSxFQUEzQixFQUErQjtBQUMzQixRQUFNSCxJQUFJLEdBQUcsTUFBTUksT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9PLFlBQVksQ0FBQ1YsSUFBRCxDQUFuQjtBQUNIOztBQUVELGVBQWVGLE9BQWYsQ0FBdUJhLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU12QixJQUFJLENBQUNhLEtBQUwsR0FBYVcsTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDtBQUNBO0FBQ0E7QUFFQTtBQUVBOzs7QUFFQSxlQUFlUCxPQUFmLENBQXVCUyxLQUF2QixFQUE4QjtBQUMxQixRQUFNYixJQUFJLEdBQUcsTUFBTVosSUFBSSxDQUFDYSxLQUFMLEdBQ2RhLEtBRGMsQ0FDUixFQUFFLEdBQUdEO0FBQUwsR0FEUSxFQUVkRSxnQkFGYyxDQUVHLFlBRkgsRUFHZEMsS0FIYyxFQUFuQjtBQUlBLFNBQU9oQixJQUFQO0FBQ0g7O0FBRUQsU0FBU1UsWUFBVCxDQUFzQlYsSUFBdEIsRUFBNEI7QUFDeEIsUUFBTTtBQUFFRyxJQUFBQSxFQUFGO0FBQU1FLElBQUFBLElBQU47QUFBWUMsSUFBQUEsVUFBWjtBQUF3QlcsSUFBQUE7QUFBeEIsTUFBdUNqQixJQUE3QztBQUVBLFNBQU87QUFBRUcsSUFBQUEsRUFBRjtBQUFNRSxJQUFBQSxJQUFOO0FBQVlDLElBQUFBLFVBQVo7QUFBd0JXLElBQUFBO0FBQXhCLEdBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1lbnUgPSByZXF1aXJlKFwiLi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZU1lbnUsXG4gICAgdXBkYXRlTWVudSxcbiAgICBnZXRBbGxNZW51LFxuICAgIGdldEFsbENvbXBhbnlNZW51cyxcbiAgICBnZXRNZW51QnlJZCxcbiAgICBfZGVsZXRlLFxufTtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlTWVudShwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLmluc2VydChwYXJhbXMpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVNZW51KGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgZ2V0TWVudSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgbWVudSBuYW1lIGlzIGR1cGxpY2F0ZWRcbiAgICBpZiAoXG4gICAgICAgIHBhcmFtcy5uYW1lICYmXG4gICAgICAgIG1lbnUubmFtZSAhPT0gcGFyYW1zLm5hbWUgJiZcbiAgICAgICAgKGF3YWl0IGdldE1lbnUoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBjb21wYW55X2lkOiBwYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBNZW51ICR7cGFyYW1zLm5hbWV9IGFscmVhZHkgZXhpc3RzYCk7XG4gICAgfVxuICAgIGNvbnN0IHVwZGF0ZWRtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkbWVudTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsTWVudSgpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoKTtcbiAgICByZXR1cm4gbWVudXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbnlNZW51cyhwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoeyAuLi5wYXJhbXMgfSk7XG4gICAgcmV0dXJuIG1lbnVzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRNZW51QnlJZChpZCkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBnZXRNZW51KHsgaWQgfSk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhtZW51KTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGF3YWl0IE1lbnUucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IG1lbnUucXVlcnkoKS5kZWxldGVCeUlkKGlkKTtcblxuLy8gfVxuXG4vLyA9PT09PT09PT09PSBoZWxwZXJzPT09PT09PT09PT1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TWVudShwYXJhbSkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBNZW51LnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW0gfSlcbiAgICAgICAgLndpdGhHcmFwaEZldGNoZWQoXCJjYXRlZ29yaWVzXCIpXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMobWVudSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGNvbXBhbnlfaWQsIGNhdGVnb3JpZXMgfSA9IG1lbnU7XG5cbiAgICByZXR1cm4geyBpZCwgbmFtZSwgY29tcGFueV9pZCwgY2F0ZWdvcmllcyB9O1xufVxuIl19",
            "originalCode": "const Menu = require(\"../menu/menu.model\");\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n    createMenu,\n    updateMenu,\n    getAllMenu,\n    getAllCompanyMenus,\n    getMenuById,\n    _delete,\n};\n\nasync function createMenu(params) {\n    const menu = await Menu.query().insert(params);\n    return menu;\n}\n\nasync function updateMenu(id, params) {\n    const menu = await getMenu({ id });\n    //check if menu name is duplicated\n    if (\n        params.name &&\n        menu.name !== params.name &&\n        (await getMenu({\n            name: params.name,\n            company_id: params.company_id,\n        }))\n    ) {\n        error(`Menu ${params.name} already exists`);\n    }\n    const updatedmenu = await Menu.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedmenu;\n}\n\nasync function getAllMenu() {\n    const menus = await Menu.query();\n    return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n    const menus = await Menu.query({ ...params });\n    return menus;\n}\n\nasync function getMenuById(id) {\n    const menu = await getMenu({ id });\n    return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n    await Menu.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getMenu(param) {\n    const menu = await Menu.query()\n        .where({ ...param })\n        .withGraphFetched(\"categories\")\n        .first();\n    return menu;\n}\n\nfunction basicDetails(menu) {\n    const { id, name, company_id, categories } = menu;\n\n    return { id, name, company_id, categories };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/09/menuservice_0982deee8fc4f2525220c81116cda394.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2962",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6988,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6985,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createMenu",
                "ranges": [
                  {
                    "startOffset": 294,
                    "endOffset": 396,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateMenu",
                "ranges": [
                  {
                    "startOffset": 398,
                    "endOffset": 809,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllMenu",
                "ranges": [
                  {
                    "startOffset": 811,
                    "endOffset": 894,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 896,
                    "endOffset": 1008,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1010,
                    "endOffset": 1117,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1119,
                    "endOffset": 1209,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenu",
                "ranges": [
                  {
                    "startOffset": 1345,
                    "endOffset": 1489,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 1491,
                    "endOffset": 1658,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../db\");\n\nconst schema = require(\"./menu.schema.json\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n  static get tableName() {\n    return tableNames.menu;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Company = require(\"../company.model\");\n\n    const Category = require(\"../category/category.model\");\n\n    return {\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Company,\n        join: {\n          from: `${tableName.menu}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      },\n      categories: {\n        relation: Model.HasManyRelation,\n        modelClasss: Category,\n        join: {\n          from: `${tableNames.menu}.id`,\n          to: `${tableNames.category}.menu_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Menu;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwiZGIiLCJzY2hlbWEiLCJ0YWJsZU5hbWVzIiwiTWVudSIsInRhYmxlTmFtZSIsIm1lbnUiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIkNvbXBhbnkiLCJDYXRlZ29yeSIsImNvbXBhbnkiLCJyZWxhdGlvbiIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwibW9kZWxDbGFzc3MiLCJqb2luIiwiZnJvbSIsInRvIiwiY2F0ZWdvcmllcyIsIkhhc01hbnlSZWxhdGlvbiIsImNhdGVnb3J5Iiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLG9CQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUVBLE1BQU1JLElBQU4sU0FBbUJMLEtBQW5CLENBQXlCO0FBQ3JCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxJQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHVCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVUsUUFBUSxHQUFHVixPQUFPLENBQUMsNEJBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIVyxNQUFBQSxPQUFPLEVBQUU7QUFDTEMsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNjLG9CQURYO0FBRUxDLFFBQUFBLFdBQVcsRUFBRUwsT0FGUjtBQUdMTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVYLFNBQVMsQ0FBQ0MsSUFBSyxhQUR0QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDUSxPQUFRO0FBRnhCO0FBSEQsT0FETjtBQVNITyxNQUFBQSxVQUFVLEVBQUU7QUFDUk4sUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNvQixlQURSO0FBRVJMLFFBQUFBLFdBQVcsRUFBRUosUUFGTDtBQUdSSyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUViLFVBQVUsQ0FBQ0csSUFBSyxLQUR2QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDaUIsUUFBUztBQUZ6QjtBQUhFO0FBVFQsS0FBUDtBQWtCSDs7QUFoQ29COztBQW1DekJyQixLQUFLLENBQUNzQixJQUFOLENBQVdwQixFQUFYO0FBRUFxQixNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL21lbnUuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBNZW51IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5tZW51O1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQganNvblNjaGVtYSgpIHtcbiAgICAgICAgcmV0dXJuIHNjaGVtYTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIC8vIEltcG9ydGluZyBtb2RlbHMgaGVyZSBpcyBhIG9uZSB3YXkgdG8gYXZvaWQgcmVxdWlyZSBsb29wcy5cbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS9jYXRlZ29yeS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29tcGFueToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZS5tZW51fS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMuY29tcGFueX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2F0ZWdvcmllczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IENhdGVnb3J5LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5tZW51X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lbnU7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../db\");\nconst schema = require(\"./menu.schema.json\");\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n    static get tableName() {\n        return tableNames.menu;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Company = require(\"../company.model\");\n        const Category = require(\"../category/category.model\");\n\n        return {\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Company,\n                join: {\n                    from: `${tableName.menu}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n            categories: {\n                relation: Model.HasManyRelation,\n                modelClasss: Category,\n                join: {\n                    from: `${tableNames.menu}.id`,\n                    to: `${tableNames.category}.menu_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Menu;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/21/menumodel_2169ce1c45f3dc0c50729f84caa9c38e.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2963",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4674,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4671,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Menu",
                "ranges": [
                  {
                    "startOffset": 277,
                    "endOffset": 277,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 313,
                    "endOffset": 362,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 414,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 425,
                    "endOffset": 1081,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createOrderSchema,\n  updateOrderSchema,\n  companyOrderSchema\n} = require(\"./order.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.use(\"/:order_id/orderItem\", OrderItem); // update an order item customer aka update cart item\n\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\"/:id\", updateOrderSchema, Auth([Role.staff, Role.owner]), updateOrder);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\"/company-orders\", companyOrderSchema, Auth([Role.owner, Role.staff]), getCompanyOrders);\n\nfunction createOrder(req, res, next) {\n  const payload = {\n    customer_id: req.user.id,\n    company_id: req.params.company_id,\n    item: req.body\n  };\n  orderService.createOrder(payload).then(orderItem => res.json({\n    message: `${orderItem.item} has been added to the cart`\n  })).catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n  orderService.updateOrder(req.params.id, req.user, req.body).then(order => res.json(order)).catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n  orderService.getOrderById(id).then(order => order ? res.json(order) : res.sendStatus(404)).catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n  orderService.getOwnOrders(req.user.id).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n  // TODO to use query params\n  params.company_id = req.params.company_id;\n  orderService.getCompanyOrders(params).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNyZWF0ZU9yZGVyU2NoZW1hIiwidXBkYXRlT3JkZXJTY2hlbWEiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJhdXRoIiwiQXV0aCIsIlJvbGUiLCJvcmRlclNlcnZpY2UiLCJPcmRlckl0ZW0iLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInVzZSIsInBvc3QiLCJjdXN0b21lciIsImNyZWF0ZU9yZGVyIiwicGF0Y2giLCJzdGFmZiIsIm93bmVyIiwidXBkYXRlT3JkZXIiLCJnZXQiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicmVxIiwicmVzIiwibmV4dCIsInBheWxvYWQiLCJjdXN0b21lcl9pZCIsInVzZXIiLCJpZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiLCJpdGVtIiwiYm9keSIsInRoZW4iLCJvcmRlckl0ZW0iLCJqc29uIiwibWVzc2FnZSIsImNhdGNoIiwib3JkZXIiLCJzZW5kU3RhdHVzIiwib3JkZXJzIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQ0ZDLEVBQUFBLGlCQURFO0FBRUZDLEVBQUFBLGlCQUZFO0FBR0ZDLEVBQUFBO0FBSEUsSUFJRkgsT0FBTyxDQUFDLG9CQUFELENBSlg7O0FBS0EsTUFBTTtBQUFFSSxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJMLE9BQU8sQ0FBQyw0QkFBRCxDQUE5Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxNQUFNTyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxpQkFBRCxDQUE1Qjs7QUFFQSxNQUFNUSxTQUFTLEdBQUdSLE9BQU8sQ0FBQyw4QkFBRCxDQUF6Qjs7QUFFQSxNQUFNUyxNQUFNLEdBQUdWLE9BQU8sQ0FBQ1csTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNKLFNBQW5DLEUsQ0FFQTs7QUFDQUMsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQlosaUJBQWpCLEVBQW9DSSxJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUF4QyxFQUF5REMsV0FBekQ7QUFDQU4sTUFBTSxDQUFDTyxLQUFQLENBQ0ksTUFESixFQUVJZCxpQkFGSixFQUdJRyxJQUFJLENBQUMsQ0FBQ0MsSUFBSSxDQUFDVyxLQUFOLEVBQWFYLElBQUksQ0FBQ1ksS0FBbEIsQ0FBRCxDQUhSLEVBSUlDLFdBSko7QUFNQVYsTUFBTSxDQUFDVyxHQUFQLENBQVcsTUFBWCxFQUFtQmYsSUFBSSxFQUF2QixFQUEyQmdCLFlBQTNCO0FBQ0FaLE1BQU0sQ0FBQ1csR0FBUCxDQUFXLGdCQUFYLEVBQTZCZixJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUFqQyxFQUFrRFEsWUFBbEQ7QUFDQWIsTUFBTSxDQUFDVyxHQUFQLENBQ0ksaUJBREosRUFFSWpCLGtCQUZKLEVBR0lFLElBQUksQ0FBQyxDQUFDQyxJQUFJLENBQUNZLEtBQU4sRUFBYVosSUFBSSxDQUFDVyxLQUFsQixDQUFELENBSFIsRUFJSU0sZ0JBSko7O0FBT0EsU0FBU1IsV0FBVCxDQUFxQlMsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQztBQUNqQyxRQUFNQyxPQUFPLEdBQUc7QUFDWkMsSUFBQUEsV0FBVyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0MsRUFEVjtBQUVaQyxJQUFBQSxVQUFVLEVBQUVQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRCxVQUZYO0FBR1pFLElBQUFBLElBQUksRUFBRVQsR0FBRyxDQUFDVTtBQUhFLEdBQWhCO0FBS0EzQixFQUFBQSxZQUFZLENBQ1BRLFdBREwsQ0FDaUJZLE9BRGpCLEVBRUtRLElBRkwsQ0FFV0MsU0FBRCxJQUNGWCxHQUFHLENBQUNZLElBQUosQ0FBUztBQUNMQyxJQUFBQSxPQUFPLEVBQUcsR0FBRUYsU0FBUyxDQUFDSCxJQUFLO0FBRHRCLEdBQVQsQ0FIUixFQU9LTSxLQVBMLENBT1diLElBUFg7QUFRSDs7QUFFRCxTQUFTUCxXQUFULENBQXFCSyxHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDO0FBQ2pDbkIsRUFBQUEsWUFBWSxDQUNQWSxXQURMLENBQ2lCSyxHQUFHLENBQUNRLE1BQUosQ0FBV0YsRUFENUIsRUFDZ0NOLEdBQUcsQ0FBQ0ssSUFEcEMsRUFDMENMLEdBQUcsQ0FBQ1UsSUFEOUMsRUFFS0MsSUFGTCxDQUVXSyxLQUFELElBQVdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBRnJCLEVBR0tELEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNMLFlBQVQsQ0FBc0JHLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BjLFlBREwsQ0FDa0JTLEVBRGxCLEVBRUtLLElBRkwsQ0FFV0ssS0FBRCxJQUFZQSxLQUFLLEdBQUdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBQUgsR0FBcUJmLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRmhELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNKLFlBQVQsQ0FBc0JFLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BlLFlBREwsQ0FDa0JFLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxFQUQzQixFQUVLSyxJQUZMLENBRVdPLE1BQUQsSUFBYUEsTUFBTSxDQUFDQyxNQUFQLEdBQWdCLENBQWhCLEdBQW9CRCxNQUFwQixHQUE2QmpCLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRnBELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNILGdCQUFULENBQTBCQyxHQUExQixFQUErQkMsR0FBL0IsRUFBb0NDLElBQXBDLEVBQTBDO0FBQ3RDO0FBRUFNLEVBQUFBLE1BQU0sQ0FBQ0QsVUFBUCxHQUFvQlAsR0FBRyxDQUFDUSxNQUFKLENBQVdELFVBQS9CO0FBQ0F4QixFQUFBQSxZQUFZLENBQ1BnQixnQkFETCxDQUNzQlMsTUFEdEIsRUFFS0csSUFGTCxDQUVXTyxNQUFELElBQWFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUFoQixHQUFvQkQsTUFBcEIsR0FBNkJqQixHQUFHLENBQUNnQixVQUFKLENBQWUsR0FBZixDQUZwRCxFQUdLRixLQUhMLENBR1diLElBSFg7QUFJSDs7QUFDRGtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBDLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qge1xuICAgIGNyZWF0ZU9yZGVyU2NoZW1hLFxuICAgIHVwZGF0ZU9yZGVyU2NoZW1hLFxuICAgIGNvbXBhbnlPcmRlclNjaGVtYSxcbn0gPSByZXF1aXJlKFwiLi9vcmRlci52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi9vcmRlci5zZXJ2aWNlXCIpO1xuXG5jb25zdCBPcmRlckl0ZW0gPSByZXF1aXJlKFwiLi9vcmRlckl0ZW0vb3JkZXJJdGVtLnJvdXRlc1wiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci51c2UoXCIvOm9yZGVyX2lkL29yZGVySXRlbVwiLCBPcmRlckl0ZW0pO1xuXG4vLyB1cGRhdGUgYW4gb3JkZXIgaXRlbSBjdXN0b21lciBha2EgdXBkYXRlIGNhcnQgaXRlbVxucm91dGVyLnBvc3QoXCIvXCIsIGNyZWF0ZU9yZGVyU2NoZW1hLCBBdXRoKFJvbGUuY3VzdG9tZXIpLCBjcmVhdGVPcmRlcik7XG5yb3V0ZXIucGF0Y2goXG4gICAgXCIvOmlkXCIsXG4gICAgdXBkYXRlT3JkZXJTY2hlbWEsXG4gICAgQXV0aChbUm9sZS5zdGFmZiwgUm9sZS5vd25lcl0pLFxuICAgIHVwZGF0ZU9yZGVyXG4pO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRPcmRlckJ5SWQpO1xucm91dGVyLmdldChcIi86aWQvbXktb3JkZXJzXCIsIEF1dGgoUm9sZS5jdXN0b21lciksIGdldE93bk9yZGVycyk7XG5yb3V0ZXIuZ2V0KFxuICAgIFwiL2NvbXBhbnktb3JkZXJzXCIsXG4gICAgY29tcGFueU9yZGVyU2NoZW1hLFxuICAgIEF1dGgoW1JvbGUub3duZXIsIFJvbGUuc3RhZmZdKSxcbiAgICBnZXRDb21wYW55T3JkZXJzXG4pO1xuXG5mdW5jdGlvbiBjcmVhdGVPcmRlcihyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgIGN1c3RvbWVyX2lkOiByZXEudXNlci5pZCxcbiAgICAgICAgY29tcGFueV9pZDogcmVxLnBhcmFtcy5jb21wYW55X2lkLFxuICAgICAgICBpdGVtOiByZXEuYm9keSxcbiAgICB9O1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuY3JlYXRlT3JkZXIocGF5bG9hZClcbiAgICAgICAgLnRoZW4oKG9yZGVySXRlbSkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBgJHtvcmRlckl0ZW0uaXRlbX0gaGFzIGJlZW4gYWRkZWQgdG8gdGhlIGNhcnRgLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVyKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgb3JkZXJTZXJ2aWNlXG4gICAgICAgIC51cGRhdGVPcmRlcihyZXEucGFyYW1zLmlkLCByZXEudXNlciwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChvcmRlcikgPT4gcmVzLmpzb24ob3JkZXIpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE9yZGVyQnlJZChyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3JkZXJCeUlkKGlkKVxuICAgICAgICAudGhlbigob3JkZXIpID0+IChvcmRlciA/IHJlcy5qc29uKG9yZGVyKSA6IHJlcy5zZW5kU3RhdHVzKDQwNCkpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE93bk9yZGVycyhyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3duT3JkZXJzKHJlcS51c2VyLmlkKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiBnZXRDb21wYW55T3JkZXJzKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8gVE9ETyB0byB1c2UgcXVlcnkgcGFyYW1zXG5cbiAgICBwYXJhbXMuY29tcGFueV9pZCA9IHJlcS5wYXJhbXMuY29tcGFueV9pZDtcbiAgICBvcmRlclNlcnZpY2VcbiAgICAgICAgLmdldENvbXBhbnlPcmRlcnMocGFyYW1zKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst {\n    createOrderSchema,\n    updateOrderSchema,\n    companyOrderSchema,\n} = require(\"./order.validators\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.use(\"/:order_id/orderItem\", OrderItem);\n\n// update an order item customer aka update cart item\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\n    \"/:id\",\n    updateOrderSchema,\n    Auth([Role.staff, Role.owner]),\n    updateOrder\n);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\n    \"/company-orders\",\n    companyOrderSchema,\n    Auth([Role.owner, Role.staff]),\n    getCompanyOrders\n);\n\nfunction createOrder(req, res, next) {\n    const payload = {\n        customer_id: req.user.id,\n        company_id: req.params.company_id,\n        item: req.body,\n    };\n    orderService\n        .createOrder(payload)\n        .then((orderItem) =>\n            res.json({\n                message: `${orderItem.item} has been added to the cart`,\n            })\n        )\n        .catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n    orderService\n        .updateOrder(req.params.id, req.user, req.body)\n        .then((order) => res.json(order))\n        .catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n    orderService\n        .getOrderById(id)\n        .then((order) => (order ? res.json(order) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n    orderService\n        .getOwnOrders(req.user.id)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n    // TODO to use query params\n\n    params.company_id = req.params.company_id;\n    orderService\n        .getCompanyOrders(params)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8f/orderroutes_8f4620babd5b20aee9e160dc0d9cf20a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2964",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9222,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 9219,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 978,
                    "endOffset": 1275,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 1277,
                    "endOffset": 1423,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1425,
                    "endOffset": 1572,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1574,
                    "endOffset": 1734,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1736,
                    "endOffset": 1974,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    item: Joi.number().required(),\n    quantity: Joi.number()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    customer_id: Joi.number().empty(),\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVPcmRlclNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJpdGVtIiwibnVtYmVyIiwicmVxdWlyZWQiLCJxdWFudGl0eSIsInVwZGF0ZU9yZGVyU2NoZW1hIiwib3JkZXJfc3RhdHVzIiwic3RyaW5nIiwiZW1wdHkiLCJwdXJjaGFzZV9zdGF0dXMiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJjdXN0b21lcl9pZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxpQkFBUixHQUE0QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSjtBQUZZLEdBQVgsQ0FBZjtBQUlBVCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNXLGlCQUFSLEdBQTRCLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQzVDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJNLElBQUFBLFlBQVksRUFBRWYsR0FBRyxDQUFDZ0IsTUFBSixHQUFhQyxLQUFiLENBQW1CLEVBQW5CLENBRFE7QUFFdEJDLElBQUFBLGVBQWUsRUFBRWxCLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQjtBQUZLLEdBQVgsQ0FBZjtBQUtBZixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVBEOztBQVNBTCxPQUFPLENBQUNnQixrQkFBUixHQUE2QixDQUFDZCxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM3QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCVyxJQUFBQSxXQUFXLEVBQUVwQixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixFQURTO0FBRXRCRixJQUFBQSxZQUFZLEVBQUVmLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQixDQUZRO0FBR3RCQyxJQUFBQSxlQUFlLEVBQUVsQixHQUFHLENBQUNnQixNQUFKLEdBQWFDLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFYLENBQWY7QUFNQWYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FSRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBpdGVtOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy5jb21wYW55T3JkZXJTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgY3VzdG9tZXJfaWQ6IEpvaS5udW1iZXIoKS5lbXB0eSgpLFxuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        item: Joi.number().required(),\n        quantity: Joi.number(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        customer_id: Joi.number().empty(),\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e1/ordervalidators_e12e9bab16ee6f22191cb1085e8fa580.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2965",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3959,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3956,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createOrderSchema",
                "ranges": [
                  {
                    "startOffset": 221,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateOrderSchema",
                "ranges": [
                  {
                    "startOffset": 411,
                    "endOffset": 594,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.companyOrderSchema",
                "ranges": [
                  {
                    "startOffset": 626,
                    "endOffset": 848,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n  createOrder,\n  updateOrderItem,\n  updateOrder,\n  getOrderById,\n  getOwnOrders,\n  getCompanyOrders\n};\n\nasync function createOrder(params) {\n  const order = await get_or_create(params.customer_id, params.company_id); // insert the item to the order item table\n\n  const orderItem = order.$relatedQuery(\"items\").insert({\n    item: params.item.id,\n    order: order.id\n  });\n  return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n  const order = await getOrder(id); // check item quantity\n\n  if (params.item.quantity <= 0) {\n    // remove from cart\n    await order.$relatedQuery(\"items\").delete().where({\n      item: params.item.id\n    });\n    return;\n  }\n\n  const orderItem = await order.$relatedQuery(\"items\").patch({\n    quantity: params.item.quantity\n  }).where({\n    item: params.item.id\n  }).returning(\"*\");\n  return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n  let order = await getOrder(id).withGraphFetched(\"company\");\n\n  if (order.company.id !== user.company.id) {\n    const error = new Error(\"Unathorized\");\n    throw error;\n  } // aka update order table\n\n\n  order = await Order.query().patchAndFetchById(id, params);\n  return order;\n}\n\nasync function getOrderById(id) {\n  const order = await getOrder(id).withGraphFetched(\"items\");\n  return order;\n}\n\nasync function getOwnOrders(id) {\n  const orders = await Order.query().where({\n    customer_id: id\n  }).orderBy(\"created_at\");\n  return orders;\n}\n\nasync function getCompanyOrders(params) {\n  const orders = await Order.query().where(params).orderBy(\"created_at\");\n  return orders;\n} // =======================helpers==========================\n\n\nasync function get_or_create(id, company_id) {\n  // checks for the existence of a customer order\n  // if it exists add the new items on it\n  // if it does not exist it creates one\n  let order = await Order.query().where({\n    customer_id: id,\n    order_status: \"New\"\n  }).first();\n\n  if (!order) {\n    // create one\n    order = await Order.query().insert({\n      customer_id: id,\n      company_id,\n      order_status: \"New\",\n      purchase_status: \"unpaid\"\n    });\n  }\n\n  return order;\n}\n\nasync function getOrder(id) {\n  const order = await Order.query().findById(id);\n  return order;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnNlcnZpY2UuanMiXSwibmFtZXMiOlsiT3JkZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU9yZGVyIiwidXBkYXRlT3JkZXJJdGVtIiwidXBkYXRlT3JkZXIiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicGFyYW1zIiwib3JkZXIiLCJnZXRfb3JfY3JlYXRlIiwiY3VzdG9tZXJfaWQiLCJjb21wYW55X2lkIiwib3JkZXJJdGVtIiwiJHJlbGF0ZWRRdWVyeSIsImluc2VydCIsIml0ZW0iLCJpZCIsImdldE9yZGVyIiwicXVhbnRpdHkiLCJkZWxldGUiLCJ3aGVyZSIsInBhdGNoIiwicmV0dXJuaW5nIiwidXNlciIsIndpdGhHcmFwaEZldGNoZWQiLCJjb21wYW55IiwiZXJyb3IiLCJFcnJvciIsInF1ZXJ5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJvcmRlcnMiLCJvcmRlckJ5Iiwib3JkZXJfc3RhdHVzIiwiZmlyc3QiLCJwdXJjaGFzZV9zdGF0dXMiLCJmaW5kQnlJZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLFdBRGE7QUFFYkMsRUFBQUEsZUFGYTtBQUdiQyxFQUFBQSxXQUhhO0FBSWJDLEVBQUFBLFlBSmE7QUFLYkMsRUFBQUEsWUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLFdBQWYsQ0FBMkJNLE1BQTNCLEVBQW1DO0FBQy9CLFFBQU1DLEtBQUssR0FBRyxNQUFNQyxhQUFhLENBQUNGLE1BQU0sQ0FBQ0csV0FBUixFQUFxQkgsTUFBTSxDQUFDSSxVQUE1QixDQUFqQyxDQUQrQixDQUcvQjs7QUFDQSxRQUFNQyxTQUFTLEdBQUdKLEtBQUssQ0FDbEJLLGFBRGEsQ0FDQyxPQURELEVBRWJDLE1BRmEsQ0FFTjtBQUFFQyxJQUFBQSxJQUFJLEVBQUVSLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZQyxFQUFwQjtBQUF3QlIsSUFBQUEsS0FBSyxFQUFFQSxLQUFLLENBQUNRO0FBQXJDLEdBRk0sQ0FBbEI7QUFJQSxTQUFPSixTQUFQO0FBQ0g7O0FBRUQsZUFBZVYsZUFBZixDQUErQmMsRUFBL0IsRUFBbUNULE1BQW5DLEVBQTJDO0FBQ3ZDLFFBQU1DLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBNUIsQ0FEdUMsQ0FHdkM7O0FBQ0EsTUFBSVQsTUFBTSxDQUFDUSxJQUFQLENBQVlHLFFBQVosSUFBd0IsQ0FBNUIsRUFBK0I7QUFDM0I7QUFDQSxVQUFNVixLQUFLLENBQ05LLGFBREMsQ0FDYSxPQURiLEVBRURNLE1BRkMsR0FHREMsS0FIQyxDQUdLO0FBQUVMLE1BQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBQXBCLEtBSEwsQ0FBTjtBQUtBO0FBQ0g7O0FBRUQsUUFBTUosU0FBUyxHQUFHLE1BQU1KLEtBQUssQ0FDeEJLLGFBRG1CLENBQ0wsT0FESyxFQUVuQlEsS0FGbUIsQ0FFYjtBQUNISCxJQUFBQSxRQUFRLEVBQUVYLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZRztBQURuQixHQUZhLEVBS25CRSxLQUxtQixDQUtiO0FBQ0hMLElBQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBRGYsR0FMYSxFQVFuQk0sU0FSbUIsQ0FRVCxHQVJTLENBQXhCO0FBVUEsU0FBT1YsU0FBUDtBQUNIOztBQUVELGVBQWVULFdBQWYsQ0FBMkJhLEVBQTNCLEVBQStCTyxJQUEvQixFQUFxQ2hCLE1BQXJDLEVBQTZDO0FBQ3pDLE1BQUlDLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixTQUE5QixDQUFsQjs7QUFFQSxNQUFJaEIsS0FBSyxDQUFDaUIsT0FBTixDQUFjVCxFQUFkLEtBQXFCTyxJQUFJLENBQUNFLE9BQUwsQ0FBYVQsRUFBdEMsRUFBMEM7QUFDdEMsVUFBTVUsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxhQUFWLENBQWQ7QUFDQSxVQUFNRCxLQUFOO0FBQ0gsR0FOd0MsQ0FPekM7OztBQUNBbEIsRUFBQUEsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY0MsaUJBQWQsQ0FBZ0NiLEVBQWhDLEVBQW9DVCxNQUFwQyxDQUFkO0FBRUEsU0FBT0MsS0FBUDtBQUNIOztBQUVELGVBQWVKLFlBQWYsQ0FBNEJZLEVBQTVCLEVBQWdDO0FBQzVCLFFBQU1SLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixPQUE5QixDQUFwQjtBQUNBLFNBQU9oQixLQUFQO0FBQ0g7O0FBRUQsZUFBZUgsWUFBZixDQUE0QlcsRUFBNUIsRUFBZ0M7QUFDNUIsUUFBTWMsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQ2hCUixLQURnQixDQUNWO0FBQUVWLElBQUFBLFdBQVcsRUFBRU07QUFBZixHQURVLEVBRWhCZSxPQUZnQixDQUVSLFlBRlEsQ0FBckI7QUFHQSxTQUFPRCxNQUFQO0FBQ0g7O0FBRUQsZUFBZXhCLGdCQUFmLENBQWdDQyxNQUFoQyxFQUF3QztBQUNwQyxRQUFNdUIsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQWNSLEtBQWQsQ0FBb0JiLE1BQXBCLEVBQTRCd0IsT0FBNUIsQ0FBb0MsWUFBcEMsQ0FBckI7QUFDQSxTQUFPRCxNQUFQO0FBQ0gsQyxDQUNEOzs7QUFDQSxlQUFlckIsYUFBZixDQUE2Qk8sRUFBN0IsRUFBaUNMLFVBQWpDLEVBQTZDO0FBQ3pDO0FBQ0E7QUFDQTtBQUVBLE1BQUlILEtBQUssR0FBRyxNQUFNWCxLQUFLLENBQUMrQixLQUFOLEdBQ2JSLEtBRGEsQ0FDUDtBQUNIVixJQUFBQSxXQUFXLEVBQUVNLEVBRFY7QUFFSGdCLElBQUFBLFlBQVksRUFBRTtBQUZYLEdBRE8sRUFLYkMsS0FMYSxFQUFsQjs7QUFPQSxNQUFJLENBQUN6QixLQUFMLEVBQVk7QUFDUjtBQUNBQSxJQUFBQSxLQUFLLEdBQUcsTUFBTVgsS0FBSyxDQUFDK0IsS0FBTixHQUFjZCxNQUFkLENBQXFCO0FBQy9CSixNQUFBQSxXQUFXLEVBQUVNLEVBRGtCO0FBRS9CTCxNQUFBQSxVQUYrQjtBQUcvQnFCLE1BQUFBLFlBQVksRUFBRSxLQUhpQjtBQUkvQkUsTUFBQUEsZUFBZSxFQUFFO0FBSmMsS0FBckIsQ0FBZDtBQU1IOztBQUVELFNBQU8xQixLQUFQO0FBQ0g7O0FBRUQsZUFBZVMsUUFBZixDQUF3QkQsRUFBeEIsRUFBNEI7QUFDeEIsUUFBTVIsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY08sUUFBZCxDQUF1Qm5CLEVBQXZCLENBQXBCO0FBQ0EsU0FBT1IsS0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgT3JkZXIgPSByZXF1aXJlKFwiLi9vcmRlci5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlT3JkZXIsXG4gICAgdXBkYXRlT3JkZXJJdGVtLFxuICAgIHVwZGF0ZU9yZGVyLFxuICAgIGdldE9yZGVyQnlJZCxcbiAgICBnZXRPd25PcmRlcnMsXG4gICAgZ2V0Q29tcGFueU9yZGVycyxcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9yZGVyKHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0X29yX2NyZWF0ZShwYXJhbXMuY3VzdG9tZXJfaWQsIHBhcmFtcy5jb21wYW55X2lkKTtcblxuICAgIC8vIGluc2VydCB0aGUgaXRlbSB0byB0aGUgb3JkZXIgaXRlbSB0YWJsZVxuICAgIGNvbnN0IG9yZGVySXRlbSA9IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLmluc2VydCh7IGl0ZW06IHBhcmFtcy5pdGVtLmlkLCBvcmRlcjogb3JkZXIuaWQgfSk7XG5cbiAgICByZXR1cm4gb3JkZXJJdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVPcmRlckl0ZW0oaWQsIHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0T3JkZXIoaWQpO1xuXG4gICAgLy8gY2hlY2sgaXRlbSBxdWFudGl0eVxuICAgIGlmIChwYXJhbXMuaXRlbS5xdWFudGl0eSA8PSAwKSB7XG4gICAgICAgIC8vIHJlbW92ZSBmcm9tIGNhcnRcbiAgICAgICAgYXdhaXQgb3JkZXJcbiAgICAgICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgICAgIC5kZWxldGUoKVxuICAgICAgICAgICAgLndoZXJlKHsgaXRlbTogcGFyYW1zLml0ZW0uaWQgfSk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG9yZGVySXRlbSA9IGF3YWl0IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLnBhdGNoKHtcbiAgICAgICAgICAgIHF1YW50aXR5OiBwYXJhbXMuaXRlbS5xdWFudGl0eSxcbiAgICAgICAgfSlcbiAgICAgICAgLndoZXJlKHtcbiAgICAgICAgICAgIGl0ZW06IHBhcmFtcy5pdGVtLmlkLFxuICAgICAgICB9KVxuICAgICAgICAucmV0dXJuaW5nKFwiKlwiKTtcblxuICAgIHJldHVybiBvcmRlckl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZU9yZGVyKGlkLCB1c2VyLCBwYXJhbXMpIHtcbiAgICBsZXQgb3JkZXIgPSBhd2FpdCBnZXRPcmRlcihpZCkud2l0aEdyYXBoRmV0Y2hlZChcImNvbXBhbnlcIik7XG5cbiAgICBpZiAob3JkZXIuY29tcGFueS5pZCAhPT0gdXNlci5jb21wYW55LmlkKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFwiVW5hdGhvcml6ZWRcIik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICAvLyBha2EgdXBkYXRlIG9yZGVyIHRhYmxlXG4gICAgb3JkZXIgPSBhd2FpdCBPcmRlci5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPcmRlckJ5SWQoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IGdldE9yZGVyKGlkKS53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIik7XG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPd25PcmRlcnMoaWQpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IGN1c3RvbWVyX2lkOiBpZCB9KVxuICAgICAgICAub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q29tcGFueU9yZGVycyhwYXJhbXMpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpLndoZXJlKHBhcmFtcykub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cbi8vID09PT09PT09PT09PT09PT09PT09PT09aGVscGVycz09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRfb3JfY3JlYXRlKGlkLCBjb21wYW55X2lkKSB7XG4gICAgLy8gY2hlY2tzIGZvciB0aGUgZXhpc3RlbmNlIG9mIGEgY3VzdG9tZXIgb3JkZXJcbiAgICAvLyBpZiBpdCBleGlzdHMgYWRkIHRoZSBuZXcgaXRlbXMgb24gaXRcbiAgICAvLyBpZiBpdCBkb2VzIG5vdCBleGlzdCBpdCBjcmVhdGVzIG9uZVxuXG4gICAgbGV0IG9yZGVyID0gYXdhaXQgT3JkZXIucXVlcnkoKVxuICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgY3VzdG9tZXJfaWQ6IGlkLFxuICAgICAgICAgICAgb3JkZXJfc3RhdHVzOiBcIk5ld1wiLFxuICAgICAgICB9KVxuICAgICAgICAuZmlyc3QoKTtcblxuICAgIGlmICghb3JkZXIpIHtcbiAgICAgICAgLy8gY3JlYXRlIG9uZVxuICAgICAgICBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuaW5zZXJ0KHtcbiAgICAgICAgICAgIGN1c3RvbWVyX2lkOiBpZCxcbiAgICAgICAgICAgIGNvbXBhbnlfaWQsXG4gICAgICAgICAgICBvcmRlcl9zdGF0dXM6IFwiTmV3XCIsXG4gICAgICAgICAgICBwdXJjaGFzZV9zdGF0dXM6IFwidW5wYWlkXCIsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBvcmRlcjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0T3JkZXIoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuZmluZEJ5SWQoaWQpO1xuICAgIHJldHVybiBvcmRlcjtcbn1cbiJdfQ==",
            "originalCode": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n    createOrder,\n    updateOrderItem,\n    updateOrder,\n    getOrderById,\n    getOwnOrders,\n    getCompanyOrders,\n};\n\nasync function createOrder(params) {\n    const order = await get_or_create(params.customer_id, params.company_id);\n\n    // insert the item to the order item table\n    const orderItem = order\n        .$relatedQuery(\"items\")\n        .insert({ item: params.item.id, order: order.id });\n\n    return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n    const order = await getOrder(id);\n\n    // check item quantity\n    if (params.item.quantity <= 0) {\n        // remove from cart\n        await order\n            .$relatedQuery(\"items\")\n            .delete()\n            .where({ item: params.item.id });\n\n        return;\n    }\n\n    const orderItem = await order\n        .$relatedQuery(\"items\")\n        .patch({\n            quantity: params.item.quantity,\n        })\n        .where({\n            item: params.item.id,\n        })\n        .returning(\"*\");\n\n    return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n    let order = await getOrder(id).withGraphFetched(\"company\");\n\n    if (order.company.id !== user.company.id) {\n        const error = new Error(\"Unathorized\");\n        throw error;\n    }\n    // aka update order table\n    order = await Order.query().patchAndFetchById(id, params);\n\n    return order;\n}\n\nasync function getOrderById(id) {\n    const order = await getOrder(id).withGraphFetched(\"items\");\n    return order;\n}\n\nasync function getOwnOrders(id) {\n    const orders = await Order.query()\n        .where({ customer_id: id })\n        .orderBy(\"created_at\");\n    return orders;\n}\n\nasync function getCompanyOrders(params) {\n    const orders = await Order.query().where(params).orderBy(\"created_at\");\n    return orders;\n}\n// =======================helpers==========================\nasync function get_or_create(id, company_id) {\n    // checks for the existence of a customer order\n    // if it exists add the new items on it\n    // if it does not exist it creates one\n\n    let order = await Order.query()\n        .where({\n            customer_id: id,\n            order_status: \"New\",\n        })\n        .first();\n\n    if (!order) {\n        // create one\n        order = await Order.query().insert({\n            customer_id: id,\n            company_id,\n            order_status: \"New\",\n            purchase_status: \"unpaid\",\n        });\n    }\n\n    return order;\n}\n\nasync function getOrder(id) {\n    const order = await Order.query().findById(id);\n    return order;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2d/orderservice_2dd8ed46d0ebb5dcc0edc8f1fb86b7ac.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2966",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10175,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10172,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 253,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 543,
                    "endOffset": 993,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 995,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1324,
                    "endOffset": 1437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1439,
                    "endOffset": 1584,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1586,
                    "endOffset": 1720,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get_or_create",
                "ranges": [
                  {
                    "startOffset": 1783,
                    "endOffset": 2270,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrder",
                "ranges": [
                  {
                    "startOffset": 2272,
                    "endOffset": 2369,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n  static get tableName() {\n    return tableNames.order;\n  }\n\n  static get relationMappings() {\n    const Company = require(\"../company.model\");\n\n    const User = require(\"../../user/user.model\");\n\n    const OrderItem = require(\"./orderItem/orderItem.model\");\n\n    return {\n      items: {\n        relation: Model.HasManyRelation,\n        modelClass: OrderItem,\n        join: {\n          from: `${tableNames.order}.id`,\n          to: `${tableNames.orderItem}.order_id`\n        }\n      },\n      customer: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.order}.customer_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Company,\n        join: {\n          from: `${tableNames.order}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Order;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJkYiIsIk9yZGVyIiwidGFibGVOYW1lIiwib3JkZXIiLCJyZWxhdGlvbk1hcHBpbmdzIiwiQ29tcGFueSIsIlVzZXIiLCJPcmRlckl0ZW0iLCJpdGVtcyIsInJlbGF0aW9uIiwiSGFzTWFueVJlbGF0aW9uIiwibW9kZWxDbGFzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJvcmRlckl0ZW0iLCJjdXN0b21lciIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwidXNlciIsImNvbXBhbnkiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsS0FBTixTQUFvQkosS0FBcEIsQ0FBMEI7QUFDdEIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLEtBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUMsT0FBTyxHQUFHUCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVEsSUFBSSxHQUFHUixPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsVUFBTVMsU0FBUyxHQUFHVCxPQUFPLENBQUMsNkJBQUQsQ0FBekI7O0FBRUEsV0FBTztBQUNIVSxNQUFBQSxLQUFLLEVBQUU7QUFDSEMsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNhLGVBRGI7QUFFSEMsUUFBQUEsVUFBVSxFQUFFSixTQUZUO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWQsVUFBVSxDQUFDSSxLQUFNLEtBRHhCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZixVQUFVLENBQUNnQixTQUFVO0FBRjFCO0FBSEgsT0FESjtBQVVIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEVjtBQUVOTixRQUFBQSxVQUFVLEVBQUVMLElBRk47QUFHTk0sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sY0FEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ21CLElBQUs7QUFGckI7QUFIQSxPQVZQO0FBa0JIQyxNQUFBQSxPQUFPLEVBQUU7QUFDTFYsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEWDtBQUVMTixRQUFBQSxVQUFVLEVBQUVOLE9BRlA7QUFHTE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sYUFEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ29CLE9BQVE7QUFGeEI7QUFIRDtBQWxCTixLQUFQO0FBMkJIOztBQXJDcUI7O0FBd0MxQnRCLEtBQUssQ0FBQ3VCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLEtBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IHRhYmxlTmFtZXMgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29uc3RhbnRzL3RhYmxlTmFtZXNcIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcblxuY2xhc3MgT3JkZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLm9yZGVyO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uLy4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgT3JkZXJJdGVtID0gcmVxdWlyZShcIi4vb3JkZXJJdGVtL29yZGVySXRlbS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuSGFzTWFueVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IE9yZGVySXRlbSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMub3JkZXJJdGVtfS5vcmRlcl9pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGN1c3RvbWVyOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkJlbG9uZ3NUb09uZVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IFVzZXIsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLm9yZGVyfS5jdXN0b21lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPcmRlcjtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n    static get tableName() {\n        return tableNames.order;\n    }\n\n    static get relationMappings() {\n        const Company = require(\"../company.model\");\n        const User = require(\"../../user/user.model\");\n        const OrderItem = require(\"./orderItem/orderItem.model\");\n\n        return {\n            items: {\n                relation: Model.HasManyRelation,\n                modelClass: OrderItem,\n                join: {\n                    from: `${tableNames.order}.id`,\n                    to: `${tableNames.orderItem}.order_id`,\n                },\n            },\n\n            customer: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.order}.customer_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Company,\n                join: {\n                    from: `${tableNames.order}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Order;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/66/ordermodel_662f5b9ea6475bcabfd0d4f0bf405dda.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2967",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5243,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5240,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Order",
                "ranges": [
                  {
                    "startOffset": 230,
                    "endOffset": 230,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 267,
                    "endOffset": 317,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 328,
                    "endOffset": 1185,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst role = require(\"../../../../utils/role\");\n\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n  orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVySXRlbS5yb3V0ZXMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhdXRoIiwiQXV0aCIsInJvbGUiLCJvcmRlclNlcnZpY2UiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInB1dCIsImN1c3RvbWVyIiwidXBkYXRlT3JkZXJJdGVtIiwicmVxIiwicmVzIiwibmV4dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJGLE9BQU8sQ0FBQywrQkFBRCxDQUE5Qjs7QUFDQSxNQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyx3QkFBRCxDQUFwQjs7QUFDQSxNQUFNSSxZQUFZLEdBQUdKLE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFFQSxNQUFNSyxNQUFNLEdBQUdOLE9BQU8sQ0FBQ08sTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQk4sSUFBSSxDQUFDQyxJQUFJLENBQUNNLFFBQU4sQ0FBcEIsRUFBcUNDLGVBQXJDOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxHQUE5QixFQUFtQ0MsSUFBbkMsRUFBeUM7QUFDckNULEVBQUFBLFlBQVksQ0FBQ00sZUFBYjtBQUNIOztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCByb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi4vb3JkZXIuc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wdXQoXCIvXCIsIEF1dGgocm9sZS5jdXN0b21lciksIHVwZGF0ZU9yZGVySXRlbSk7XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVySXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZS51cGRhdGVPcmRlckl0ZW0oKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst role = require(\"../../../../utils/role\");\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n    orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/orderItemroutes_440b1db2888128c60482407cf8bcef31.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2968",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/orderItem/orderItem.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2184,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2181,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 406,
                    "endOffset": 484,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        }
      ]
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1609772028328,
        "runtime": 760,
        "slow": false,
        "start": 1609772027568
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/test/app.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "app"
          ],
          "duration": 41,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "app responds with a not found message",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "responds with a not found message"
        },
        {
          "ancestorTitles": [
            "GET /"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET / responds with a json message",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "responds with a json message"
        }
      ],
      "failureMessage": null,
      "v8Coverage": [
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst morgan = require(\"morgan\");\n\nconst compression = require(\"compression\");\n\nconst helmet = require(\"helmet\");\n\nconst cors = require(\"cors\"); // Swagger stuff\n\n\nrequire(\"rootpath\")();\n\nconst swaggerUi = require(\"swagger-ui-express\");\n\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\n\nconst api = require(\"./api\");\n\nconst app = express();\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\napp.get(\"/\", (req, res) => {\n  res.json({\n    message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\"\n  });\n});\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vcmdhbiIsImNvbXByZXNzaW9uIiwiaGVsbWV0IiwiY29ycyIsInN3YWdnZXJVaSIsInN3YWdnZXJEb2MiLCJjb25maWciLCJtaWRkbGV3YXJlcyIsImFwaSIsImFwcCIsInVzZSIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJtZXNzYWdlIiwic2VydmUiLCJzZXR1cCIsIm5vdEZvdW5kIiwiZXJyb3JIYW5kbGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBM0I7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCLEMsQ0FFQTs7O0FBQ0FBLE9BQU8sQ0FBQyxVQUFELENBQVA7O0FBQ0EsTUFBTUssU0FBUyxHQUFHTCxPQUFPLENBQUMsb0JBQUQsQ0FBekI7O0FBQ0EsTUFBTU0sVUFBVSxHQUFHTixPQUFPLENBQUMsc0JBQUQsQ0FBMUI7O0FBRUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JPLE1BQWxCOztBQUVBLE1BQU1DLFdBQVcsR0FBR1IsT0FBTyxDQUFDLGVBQUQsQ0FBM0I7O0FBQ0EsTUFBTVMsR0FBRyxHQUFHVCxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQSxNQUFNVSxHQUFHLEdBQUdYLE9BQU8sRUFBbkI7QUFFQVcsR0FBRyxDQUFDQyxHQUFKLENBQVFWLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQVMsR0FBRyxDQUFDQyxHQUFKLENBQVFSLE1BQU0sRUFBZDtBQUNBTyxHQUFHLENBQUNDLEdBQUosQ0FBUVAsSUFBSSxFQUFaO0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRVCxXQUFXLEVBQW5CO0FBQ0FRLEdBQUcsQ0FBQ0MsR0FBSixDQUFRWixPQUFPLENBQUNhLElBQVIsRUFBUjtBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxHQUFSLEVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTO0FBQ0xJLElBQUFBLE9BQU8sRUFBRTtBQURKLEdBQVQ7QUFHSCxDQUpEO0FBTUFOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJGLEdBQW5CO0FBQ0FDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUJOLFNBQVMsQ0FBQ1ksS0FBL0IsRUFBc0NaLFNBQVMsQ0FBQ2EsS0FBVixDQUFnQlosVUFBaEIsQ0FBdEM7QUFFQUksR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1csUUFBcEI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVFILFdBQVcsQ0FBQ1ksWUFBcEI7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoXCJtb3JnYW5cIik7XG5jb25zdCBjb21wcmVzc2lvbiA9IHJlcXVpcmUoXCJjb21wcmVzc2lvblwiKTtcbmNvbnN0IGhlbG1ldCA9IHJlcXVpcmUoXCJoZWxtZXRcIik7XG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XG5cbi8vIFN3YWdnZXIgc3R1ZmZcbnJlcXVpcmUoXCJyb290cGF0aFwiKSgpO1xuY29uc3Qgc3dhZ2dlclVpID0gcmVxdWlyZShcInN3YWdnZXItdWktZXhwcmVzc1wiKTtcbmNvbnN0IHN3YWdnZXJEb2MgPSByZXF1aXJlKFwiLi4vZG9jcy9zd2FnZ2VyLmpzb25cIik7XG5cbnJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKCk7XG5cbmNvbnN0IG1pZGRsZXdhcmVzID0gcmVxdWlyZShcIi4vbWlkZGxld2FyZXNcIik7XG5jb25zdCBhcGkgPSByZXF1aXJlKFwiLi9hcGlcIik7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xuYXBwLnVzZShoZWxtZXQoKSk7XG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGNvbXByZXNzaW9uKCkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbmFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogXCLwn6aE8J+MiOKcqPCfkYvwn4yO8J+MjfCfjI/inKjwn4yI8J+mhFwiLFxuICAgIH0pO1xufSk7XG5cbmFwcC51c2UoXCIvYXBpL3YxXCIsIGFwaSk7XG5hcHAudXNlKFwiL2FwaS1kb2NzXCIsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2MpKTtcblxuYXBwLnVzZShtaWRkbGV3YXJlcy5ub3RGb3VuZCk7XG5hcHAudXNlKG1pZGRsZXdhcmVzLmVycm9ySGFuZGxlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
            "originalCode": "const express = require(\"express\");\nconst morgan = require(\"morgan\");\nconst compression = require(\"compression\");\nconst helmet = require(\"helmet\");\nconst cors = require(\"cors\");\n\n// Swagger stuff\nrequire(\"rootpath\")();\nconst swaggerUi = require(\"swagger-ui-express\");\nconst swaggerDoc = require(\"../docs/swagger.json\");\n\nrequire(\"dotenv\").config();\n\nconst middlewares = require(\"./middlewares\");\nconst api = require(\"./api\");\n\nconst app = express();\n\napp.use(morgan(\"dev\"));\napp.use(helmet());\napp.use(cors());\napp.use(compression());\napp.use(express.json());\n\napp.get(\"/\", (req, res) => {\n    res.json({\n        message: \"🦄🌈✨👋🌎🌍🌏✨🌈🦄\",\n    });\n});\n\napp.use(\"/api/v1\", api);\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDoc));\n\napp.use(middlewares.notFound);\napp.use(middlewares.errorHandler);\n\nmodule.exports = app;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/68/app_6855482f668a469a3eba3734dab1ce4c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2126",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/app.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4132,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4129,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 669,
                    "endOffset": 739,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "function notFound(req, res, next) {\n  res.status(404);\n  const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n  next(error);\n}\n/* eslint-disable no-unused-vars */\n\n\nfunction errorHandler(err, req, res, next) {\n  /* eslint-enable no-unused-vars */\n  const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n  res.status(statusCode);\n  if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n  res.json({\n    message: err.message,\n    stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack\n  });\n}\n\nmodule.exports = {\n  notFound,\n  errorHandler\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm5vdEZvdW5kIiwicmVxIiwicmVzIiwibmV4dCIsInN0YXR1cyIsImVycm9yIiwiRXJyb3IiLCJvcmlnaW5hbFVybCIsImVycm9ySGFuZGxlciIsImVyciIsInN0YXR1c0NvZGUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSIsImpzb24iLCJzdGFjayIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCQyxHQUF2QixFQUE0QkMsSUFBNUIsRUFBa0M7QUFDOUJELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVg7QUFDQSxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsS0FBSixDQUFXLG9CQUFtQkwsR0FBRyxDQUFDTSxXQUFZLEVBQTlDLENBQWQ7QUFDQUosRUFBQUEsSUFBSSxDQUFDRSxLQUFELENBQUo7QUFDSDtBQUVEOzs7QUFDQSxTQUFTRyxZQUFULENBQXNCQyxHQUF0QixFQUEyQlIsR0FBM0IsRUFBZ0NDLEdBQWhDLEVBQXFDQyxJQUFyQyxFQUEyQztBQUN2QztBQUNBLFFBQU1PLFVBQVUsR0FBR1IsR0FBRyxDQUFDUSxVQUFKLEtBQW1CLEdBQW5CLEdBQXlCUixHQUFHLENBQUNRLFVBQTdCLEdBQTBDLEdBQTdEO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXTSxVQUFYO0FBQ0EsTUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixHQUFHLENBQUNPLE9BQWhCO0FBQzNDZCxFQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUztBQUNMRCxJQUFBQSxPQUFPLEVBQUVQLEdBQUcsQ0FBQ08sT0FEUjtBQUVMRSxJQUFBQSxLQUFLLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQXpCLEdBQXdDLElBQXhDLEdBQStDSixHQUFHLENBQUNTO0FBRnJELEdBQVQ7QUFJSDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JwQixFQUFBQSxRQURhO0FBRWJRLEVBQUFBO0FBRmEsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBub3RGb3VuZChyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcy5zdGF0dXMoNDA0KTtcbiAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihg8J+UjSAtIE5vdCBGb3VuZCAtICR7cmVxLm9yaWdpbmFsVXJsfWApO1xuICAgIG5leHQoZXJyb3IpO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuZnVuY3Rpb24gZXJyb3JIYW5kbGVyKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG4gICAgY29uc3Qgc3RhdHVzQ29kZSA9IHJlcy5zdGF0dXNDb2RlICE9PSAyMDAgPyByZXMuc3RhdHVzQ29kZSA6IDUwMDtcbiAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIGNvbnNvbGUubG9nKGVyci5tZXNzYWdlKTtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgICBzdGFjazogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gXCLwn6WeXCIgOiBlcnIuc3RhY2ssXG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5vdEZvdW5kLFxuICAgIGVycm9ySGFuZGxlcixcbn07XG4iXX0=",
            "originalCode": "function notFound(req, res, next) {\n    res.status(404);\n    const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);\n    next(error);\n}\n\n/* eslint-disable no-unused-vars */\nfunction errorHandler(err, req, res, next) {\n    /* eslint-enable no-unused-vars */\n    const statusCode = res.statusCode !== 200 ? res.statusCode : 500;\n    res.status(statusCode);\n    if (process.env.NODE_ENV !== \"production\") console.log(err.message);\n    res.json({\n        message: err.message,\n        stack: process.env.NODE_ENV === \"production\" ? \"🥞\" : err.stack,\n    });\n}\n\nmodule.exports = {\n    notFound,\n    errorHandler,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0d/middlewares_0d2bc57a77c05a727da8aec38de48282.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2259",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/middlewares.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3010,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3007,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "notFound",
                "ranges": [
                  {
                    "startOffset": 89,
                    "endOffset": 226,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "errorHandler",
                "ranges": [
                  {
                    "startOffset": 265,
                    "endOffset": 626,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\nrouter.get(\"/\", (req, res) => {\n  res.json({\n    message: \"API - 👋🌎🌍🌏\"\n  });\n});\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwianNvbiIsIm1lc3NhZ2UiLCJ1c2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFFQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFDTEMsSUFBQUEsT0FBTyxFQUFFO0FBREosR0FBVDtBQUdILENBSkQ7QUFNQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsV0FBWCxFQUF3QlIsT0FBTyxDQUFDLG9CQUFELENBQS9CO0FBQ0FDLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLFVBQVgsRUFBdUJSLE9BQU8sQ0FBQywwQkFBRCxDQUE5QjtBQUVBUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6IFwiQVBJIC0g8J+Ri/CfjI7wn4yN8J+Mj1wiLFxuICAgIH0pO1xufSk7XG5cbnJvdXRlci51c2UoXCIvYWNjb3VudHNcIiwgcmVxdWlyZShcIi4vYXV0aC9hdXRoLnJvdXRlc1wiKSk7XG5yb3V0ZXIudXNlKFwiL2NvbXBhbnlcIiwgcmVxdWlyZShcIi4vY29tcGFueS9jb21wYW55LnJvdXRlc1wiKSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
            "originalCode": "const express = require(\"express\");\n\nconst router = express.Router();\n\nrouter.get(\"/\", (req, res) => {\n    res.json({\n        message: \"API - 👋🌎🌍🌏\",\n    });\n});\n\nrouter.use(\"/accounts\", require(\"./auth/auth.routes\"));\nrouter.use(\"/company\", require(\"./company/company.routes\"));\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/46/index_46150bc44a91011b69db233a13fb0837.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2260",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/index.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1667,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1664,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 175,
                    "endOffset": 241,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst {\n  signinSchema,\n  signupSchema,\n  updateSchema,\n  verifyEmailSchema\n} = require(\"./auth.validators\");\n\nconst authService = require(\"./auth.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\nmodule.exports = router;\n\nfunction login(req, res, next) {\n  const {\n    email,\n    password\n  } = req.body;\n  authService.login({\n    email,\n    password\n  }).then(({\n    user,\n    token\n  }) => {\n    res.json({\n      user,\n      token\n    });\n  }).catch(next);\n}\n\nfunction register(req, res, next) {\n  req.body.role = Role.owner;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n  req.body.role = Role.customer;\n  authService.register(req.body, req.get(\"origin\")).then(({\n    user,\n    token\n  }) => {\n    return res.json({\n      user,\n      token,\n      message: \"Registration successfull, please check your email for verification instructions\"\n    });\n  }).catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n  authService.verifyEmail(req.body).then(() => res.json({\n    message: \"Verification successfull\"\n  })).catch(next);\n}\n\nfunction getAll(req, res, next) {\n  authService.getAll().then(accounts => res.json(accounts)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  // users can get their own account and admin can get any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.getById(req.params.id).then(account => account ? res.json(account) : res.sendStatus(404)).catch(next);\n}\n\nfunction create(req, res, next) {\n  authService.create(req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // users can update their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.update(req.params.id, req.body).then(account => res.json(account)).catch(next);\n}\n\nfunction _delete(req, res, next) {\n  // users can delete their accounts and admin can update any account\n  if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n    return res.status(401).json({\n      message: \"Unathorized\"\n    });\n  }\n\n  authService.delete(req.param.id).then(() => res.json({\n    message: \"Account deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\nconst router = express.Router();\nconst {\n    signinSchema,\n    signupSchema,\n    updateSchema,\n    verifyEmailSchema,\n} = require(\"./auth.validators\");\nconst authService = require(\"./auth.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\n\nrouter.post(\"/login\", signinSchema, login);\nrouter.post(\"/register-customer\", signupSchema, registerCustomer);\nrouter.post(\"/register-owner\", signupSchema, register);\nrouter.post(\"/verify-email\", verifyEmailSchema, verifyEmail);\nrouter.get(\"/\", Auth(Role.admin), getAll);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.post(\"/create-staff\", Auth(Role.owner), signupSchema, create);\nrouter.put(\"/:id\", Auth(), updateSchema, update);\nrouter.delete(\"/:id\", Auth(), _delete);\n\nmodule.exports = router;\n\nfunction login(req, res, next) {\n    const { email, password } = req.body;\n    authService\n        .login({ email, password })\n        .then(({ user, token }) => {\n            res.json({ user, token });\n        })\n        .catch(next);\n}\n\nfunction register(req, res, next) {\n    req.body.role = Role.owner;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction registerCustomer(req, res, next) {\n    req.body.role = Role.customer;\n    authService\n        .register(req.body, req.get(\"origin\"))\n        .then(({ user, token }) => {\n            return res.json({\n                user,\n                token,\n                message:\n                    \"Registration successfull, please check your email for verification instructions\",\n            });\n        })\n        .catch(next);\n}\n\nfunction verifyEmail(req, res, next) {\n    authService\n        .verifyEmail(req.body)\n        .then(() => res.json({ message: \"Verification successfull\" }))\n        .catch(next);\n}\n\nfunction getAll(req, res, next) {\n    authService\n        .getAll()\n        .then((accounts) => res.json(accounts))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    // users can get their own account and admin can get any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .getById(req.params.id)\n        .then((account) => (account ? res.json(account) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction create(req, res, next) {\n    authService\n        .create(req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // users can update their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .update(req.params.id, req.body)\n        .then((account) => res.json(account))\n        .catch(next);\n}\n\nfunction _delete(req, res, next) {\n    // users can delete their accounts and admin can update any account\n    if (Number(req.params.id) !== req.user.id && req.user.role !== Role.admin) {\n        return res.status(401).json({ message: \"Unathorized\" });\n    }\n\n    authService\n        .delete(req.param.id)\n        .then(() =>\n            res.json({\n                message: \"Account deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/75/authroutes_75bf7888c8e4ac0a10e44194cc103f96.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2261",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 15260,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 15257,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 919,
                    "endOffset": 1157,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 1159,
                    "endOffset": 1486,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "registerCustomer",
                "ranges": [
                  {
                    "startOffset": 1488,
                    "endOffset": 1826,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1828,
                    "endOffset": 1985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 1987,
                    "endOffset": 2095,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2097,
                    "endOffset": 2472,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 2474,
                    "endOffset": 2588,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2590,
                    "endOffset": 2944,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2946,
                    "endOffset": 3350,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n  const schema = Joi.object({\n    firstName: Joi.string().required(),\n    lastName: Joi.string().required(),\n    phoneNumber: Joi.string().min(10).max(15).required(),\n    role: Joi.string().min(5).required(),\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required(),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n  const schema = Joi.object({\n    email: Joi.string().email().required(),\n    password: Joi.string().min(8).required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    firstName: Joi.string().empty(\"\"),\n    lastName: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    role: Joi.string().min(5).empty(\"\"),\n    phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n    password: Joi.string().min(8).empty(\"\"),\n    confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\")\n  }; //  TODO figure out how admin can update role\n\n  const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n  validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n  const schema = Joi.object({\n    token: Joi.string().required()\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsInNpZ251cFNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJmaXJzdE5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImxhc3ROYW1lIiwicGhvbmVOdW1iZXIiLCJtaW4iLCJtYXgiLCJyb2xlIiwiZW1haWwiLCJwYXNzd29yZCIsImNvbmZpcm1QYXNzd29yZCIsInZhbGlkIiwicmVmIiwic2lnbmluU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSIsIndpdGgiLCJ2ZXJpZnlFbWFpbFNjaGVtYSIsInRva2VuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUNBLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLG9DQUFELENBQS9COztBQUVBRSxPQUFPLENBQUNDLFlBQVIsR0FBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QkMsSUFBQUEsU0FBUyxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYUMsUUFBYixFQURXO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRlk7QUFHdEJFLElBQUFBLFdBQVcsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsRUFBakIsRUFBcUJDLEdBQXJCLENBQXlCLEVBQXpCLEVBQTZCSixRQUE3QixFQUhTO0FBSXRCSyxJQUFBQSxJQUFJLEVBQUVqQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFKZ0I7QUFLdEJNLElBQUFBLEtBQUssRUFBRWxCLEdBQUcsQ0FBQ1csTUFBSixHQUFhTyxLQUFiLEdBQXFCTixRQUFyQixFQUxlO0FBTXRCTyxJQUFBQSxRQUFRLEVBQUVuQixHQUFHLENBQUNXLE1BQUosR0FBYUksR0FBYixDQUFpQixDQUFqQixFQUFvQkgsUUFBcEIsRUFOWTtBQU90QlEsSUFBQUEsZUFBZSxFQUFFcEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFVLEtBQWIsQ0FBbUJyQixHQUFHLENBQUNzQixHQUFKLENBQVEsVUFBUixDQUFuQixFQUF3Q1YsUUFBeEM7QUFQSyxHQUFYLENBQWY7QUFTQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FYRDs7QUFhQUwsT0FBTyxDQUFDb0IsWUFBUixHQUF1QixDQUFDbEIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTUMsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBVztBQUN0QlMsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJOLFFBQXJCLEVBRGU7QUFFdEJPLElBQUFBLFFBQVEsRUFBRW5CLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CSCxRQUFwQjtBQUZZLEdBQVgsQ0FBZjtBQUlBVixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNxQixZQUFSLEdBQXVCLENBQUNuQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNa0IsV0FBVyxHQUFHO0FBQ2hCZixJQUFBQSxTQUFTLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhZSxLQUFiLENBQW1CLEVBQW5CLENBREs7QUFFaEJiLElBQUFBLFFBQVEsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFlLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGTTtBQUdoQlIsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFPLEtBQWIsR0FBcUJRLEtBQXJCLENBQTJCLEVBQTNCLENBSFM7QUFJaEJULElBQUFBLElBQUksRUFBRWpCLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLENBQWpCLEVBQW9CVyxLQUFwQixDQUEwQixFQUExQixDQUpVO0FBS2hCWixJQUFBQSxXQUFXLEVBQUVkLEdBQUcsQ0FBQ1csTUFBSixHQUFhSSxHQUFiLENBQWlCLEVBQWpCLEVBQXFCQyxHQUFyQixDQUF5QixFQUF6QixFQUE2QlUsS0FBN0IsQ0FBbUMsRUFBbkMsQ0FMRztBQU1oQlAsSUFBQUEsUUFBUSxFQUFFbkIsR0FBRyxDQUFDVyxNQUFKLEdBQWFJLEdBQWIsQ0FBaUIsQ0FBakIsRUFBb0JXLEtBQXBCLENBQTBCLEVBQTFCLENBTk07QUFPaEJOLElBQUFBLGVBQWUsRUFBRXBCLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CckIsR0FBRyxDQUFDc0IsR0FBSixDQUFRLFVBQVIsQ0FBbkIsRUFBd0NJLEtBQXhDLENBQThDLEVBQTlDO0FBUEQsR0FBcEIsQ0FEdUMsQ0FXdkM7O0FBQ0EsUUFBTWxCLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdnQixXQUFYLEVBQXdCRSxJQUF4QixDQUE2QixVQUE3QixFQUF5QyxpQkFBekMsQ0FBZjtBQUVBekIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FmRDs7QUFpQkFMLE9BQU8sQ0FBQ3lCLGlCQUFSLEdBQTRCLENBQUN2QixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCb0IsSUFBQUEsS0FBSyxFQUFFN0IsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWI7QUFEZSxHQUFYLENBQWY7QUFHQVYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FMRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5zaWdudXBTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgZmlyc3ROYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5yZXF1aXJlZCgpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLnJlcXVpcmVkKCksXG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgICAgICBjb25maXJtUGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS52YWxpZChKb2kucmVmKFwicGFzc3dvcmRcIikpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMuc2lnbmluU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIGVtYWlsOiBKb2kuc3RyaW5nKCkuZW1haWwoKS5yZXF1aXJlZCgpLFxuICAgICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxuICAgIH0pO1xuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnVwZGF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYVJ1bGVzID0ge1xuICAgICAgICBmaXJzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgbGFzdE5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZW1haWw6IEpvaS5zdHJpbmcoKS5lbWFpbCgpLmVtcHR5KFwiXCIpLFxuICAgICAgICByb2xlOiBKb2kuc3RyaW5nKCkubWluKDUpLmVtcHR5KFwiXCIpLFxuICAgICAgICBwaG9uZU51bWJlcjogSm9pLnN0cmluZygpLm1pbigxMCkubWF4KDE1KS5lbXB0eShcIlwiKSxcbiAgICAgICAgcGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS5taW4oOCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGNvbmZpcm1QYXNzd29yZDogSm9pLnN0cmluZygpLnZhbGlkKEpvaS5yZWYoXCJwYXNzd29yZFwiKSkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIC8vICBUT0RPIGZpZ3VyZSBvdXQgaG93IGFkbWluIGNhbiB1cGRhdGUgcm9sZVxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpLndpdGgoXCJwYXNzd29yZFwiLCBcImNvbmZpcm1QYXNzd29yZFwiKTtcblxuICAgIHZhbGlkYXRlUmVxdWVzdChyZXEsIG5leHQsIHNjaGVtYSk7XG59O1xuXG5leHBvcnRzLnZlcmlmeUVtYWlsU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIHRva2VuOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.signupSchema = (req, res, next) => {\n    const schema = Joi.object({\n        firstName: Joi.string().required(),\n        lastName: Joi.string().required(),\n        phoneNumber: Joi.string().min(10).max(15).required(),\n        role: Joi.string().min(5).required(),\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.signinSchema = (req, res, next) => {\n    const schema = Joi.object({\n        email: Joi.string().email().required(),\n        password: Joi.string().min(8).required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        firstName: Joi.string().empty(\"\"),\n        lastName: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        role: Joi.string().min(5).empty(\"\"),\n        phoneNumber: Joi.string().min(10).max(15).empty(\"\"),\n        password: Joi.string().min(8).empty(\"\"),\n        confirmPassword: Joi.string().valid(Joi.ref(\"password\")).empty(\"\"),\n    };\n\n    //  TODO figure out how admin can update role\n    const schema = Joi.object(schemaRules).with(\"password\", \"confirmPassword\");\n\n    validateRequest(req, next, schema);\n};\n\nexports.verifyEmailSchema = (req, res, next) => {\n    const schema = Joi.object({\n        token: Joi.string().required(),\n    });\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/93/authvalidators_93d8fdb0df4bea4d1ddc0a198e2ff769.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2262",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7592,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7589,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.signupSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 651,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.signinSchema",
                "ranges": [
                  {
                    "startOffset": 677,
                    "endOffset": 863,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 889,
                    "endOffset": 1438,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.verifyEmailSchema",
                "ranges": [
                  {
                    "startOffset": 1469,
                    "endOffset": 1601,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n  const options = {\n    abortEarly: false,\n    // include all errors\n    allowUnknown: true,\n    // ignore unknown props\n    stripUnknown: true // remove unknown props\n\n  };\n  const {\n    error,\n    value\n  } = schema.validate(req.body, options);\n\n  if (error) {\n    next(`Validation error: ${error.details.map(x => x.message).join(\", \")}`);\n  } else {\n    req.body = value;\n    next();\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRlUmVxdWVzdC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidmFsaWRhdGVSZXF1ZXN0IiwicmVxIiwibmV4dCIsInNjaGVtYSIsIm9wdGlvbnMiLCJhYm9ydEVhcmx5IiwiYWxsb3dVbmtub3duIiwic3RyaXBVbmtub3duIiwiZXJyb3IiLCJ2YWx1ZSIsInZhbGlkYXRlIiwiYm9keSIsImRldGFpbHMiLCJtYXAiLCJ4IiwibWVzc2FnZSIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLGVBQWpCOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQ0MsTUFBcEMsRUFBNEM7QUFDeEMsUUFBTUMsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLFVBQVUsRUFBRSxLQURBO0FBQ087QUFDbkJDLElBQUFBLFlBQVksRUFBRSxJQUZGO0FBRVE7QUFDcEJDLElBQUFBLFlBQVksRUFBRSxJQUhGLENBR1E7O0FBSFIsR0FBaEI7QUFNQSxRQUFNO0FBQUVDLElBQUFBLEtBQUY7QUFBU0MsSUFBQUE7QUFBVCxNQUFtQk4sTUFBTSxDQUFDTyxRQUFQLENBQWdCVCxHQUFHLENBQUNVLElBQXBCLEVBQTBCUCxPQUExQixDQUF6Qjs7QUFDQSxNQUFJSSxLQUFKLEVBQVc7QUFDUE4sSUFBQUEsSUFBSSxDQUNDLHFCQUFvQk0sS0FBSyxDQUFDSSxPQUFOLENBQ2hCQyxHQURnQixDQUNYQyxDQUFELElBQU9BLENBQUMsQ0FBQ0MsT0FERyxFQUVoQkMsSUFGZ0IsQ0FFWCxJQUZXLENBRUwsRUFIaEIsQ0FBSjtBQUtILEdBTkQsTUFNTztBQUNIZixJQUFBQSxHQUFHLENBQUNVLElBQUosR0FBV0YsS0FBWDtBQUNBUCxJQUFBQSxJQUFJO0FBQ1A7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gdmFsaWRhdGVSZXF1ZXN0O1xuXG5mdW5jdGlvbiB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpIHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBhYm9ydEVhcmx5OiBmYWxzZSwgLy8gaW5jbHVkZSBhbGwgZXJyb3JzXG4gICAgICAgIGFsbG93VW5rbm93bjogdHJ1ZSwgLy8gaWdub3JlIHVua25vd24gcHJvcHNcbiAgICAgICAgc3RyaXBVbmtub3duOiB0cnVlLCAvLyByZW1vdmUgdW5rbm93biBwcm9wc1xuICAgIH07XG5cbiAgICBjb25zdCB7IGVycm9yLCB2YWx1ZSB9ID0gc2NoZW1hLnZhbGlkYXRlKHJlcS5ib2R5LCBvcHRpb25zKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChcbiAgICAgICAgICAgIGBWYWxpZGF0aW9uIGVycm9yOiAke2Vycm9yLmRldGFpbHNcbiAgICAgICAgICAgICAgICAubWFwKCh4KSA9PiB4Lm1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgLmpvaW4oXCIsIFwiKX1gXG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmJvZHkgPSB2YWx1ZTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH1cbn1cbiJdfQ==",
            "originalCode": "module.exports = validateRequest;\n\nfunction validateRequest(req, next, schema) {\n    const options = {\n        abortEarly: false, // include all errors\n        allowUnknown: true, // ignore unknown props\n        stripUnknown: true, // remove unknown props\n    };\n\n    const { error, value } = schema.validate(req.body, options);\n    if (error) {\n        next(\n            `Validation error: ${error.details\n                .map((x) => x.message)\n                .join(\", \")}`\n        );\n    } else {\n        req.body = value;\n        next();\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/45/validateRequest_45057a96b73bd940f5249869883efa4a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2315",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/validateRequest.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2528,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2525,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "validateRequest",
                "ranges": [
                  {
                    "startOffset": 124,
                    "endOffset": 562,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const User = require(\"../user/user.model\");\n\nconst jwt = require(\"../../utils/jwt\");\n\nconst bcrypt = require(\"bcrypt\");\n\nconst crypto = require(\"crypto\");\n\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n  /**\n   * refreshtoken\n   * revoketoken\n   * forgotPassword\n   * validateResetToken\n   * validateResetToken\n   * resetPassword\n   */\n  login,\n  register,\n  verifyEmail,\n  create,\n  update,\n  getAll,\n  getById,\n  delete: _delete\n};\n\nasync function login({\n  email,\n  password\n}) {\n  const account = await getAccount({\n    email\n  });\n\n  if (!account || // !account.isVerified ||\n  !(await bcrypt.compare(password, account.password))) {\n    const error = new Error(\"Email or password is incorrect\");\n    throw error;\n  }\n\n  const token = await jwt.sign(account.toJSON());\n  return {\n    user: basicDetails(account),\n    token\n  };\n}\n\nasync function register(params, origin) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    // send already registered error in email to prevent account enumeration\n    // await sendAlreadyRegisteredEmail(params.email, origin);\n    const error = new Error('Email \"' + params.email + '\" is already registered');\n    throw error;\n  }\n\n  const account = await insertUser(params); // send email;\n  // await sendVerificationEmail(account, origin);\n\n  const token = await jwt.sign(account);\n  return {\n    user: account,\n    token\n  };\n}\n\nasync function verifyEmail({\n  token\n}) {\n  const account = await getAccount({\n    verificationToken: token\n  });\n  if (!account) throw \"Verification failed\";\n  await account.$query().patch({\n    verified: Date.now(),\n    isVerified: true,\n    verificationToken: null\n  });\n}\n\nasync function create(params) {\n  // validate\n  if (await getAccount({\n    email: params.email\n  })) {\n    throw 'Email \"' + params.email + '\" is already registered';\n  }\n\n  const account = await insertUser(params); // TODO? bind to company here.\n\n  return basicDetails(account);\n}\n\nasync function update(id, params) {\n  const account = await getAccount({\n    id\n  }); // validate if email was changed\n\n  if (params.email && account.email !== params.email && (await getAccount({\n    email: params.email\n  }))) {\n    const error = new Error(`Email ${params.email} is already taken`);\n    throw error;\n  } // hash password if it was entered\n\n\n  if (params.password) {\n    params.password = await hash(params.password);\n  }\n\n  const updatedUser = await User.query().patchAndFetchById(id, { ...params\n  });\n  return basicDetails(updatedUser);\n} // TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\n\n\nasync function getAll() {\n  const accounts = await User.query();\n  return accounts.map(x => basicDetails(x));\n}\n\nasync function getById(id) {\n  const account = await getAccount({\n    id\n  });\n  return basicDetails(account);\n} // TODO MAKE IT ACCEPT AN ARRAY OF ID\n\n\nasync function _delete(id) {\n  await User.query().deleteById(id);\n}\n/**==================== Helpers ====================== */\n\n\nasync function getAccount(param) {\n  const account = await User.query().where({ ...param\n  }).first();\n  return account;\n}\n\nasync function insertUser(params) {\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    role,\n    phoneNumber\n  } = params; // hash password and verification token\n\n  const hashedPassword = await hash(password, 10);\n  const verificationToken = randomTokenString(); // create account\n\n  const account = await User.query().insert({\n    email,\n    firstName,\n    lastName,\n    password: hashedPassword,\n    phoneNumber,\n    role: role,\n    active: true,\n    isVerified: false,\n    verified: new Date().toISOString(),\n    verificationToken\n  });\n  return basicDetails(account);\n}\n\nasync function hash(password) {\n  return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n  return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  } = account;\n  return {\n    id,\n    firstName,\n    lastName,\n    email,\n    role,\n    created,\n    updated,\n    isVerified\n  };\n}\n\nasync function sendVerificationEmail(account, origin) {\n  let message;\n\n  if (origin) {\n    const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n    message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n  } else {\n    message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n  }\n\n  await sendEmail({\n    to: account.email,\n    subject: \"Sign-up verification API - Verify Email\",\n    html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`\n  });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n  let message;\n\n  if (origin) {\n    message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n  } else {\n    message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n  }\n\n  await sendEmail({\n    to: email,\n    subject: \"Sign-up Verification API - Email Already Registered\",\n    html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguc2VydmljZS5qcyJdLCJuYW1lcyI6WyJVc2VyIiwicmVxdWlyZSIsImp3dCIsImJjcnlwdCIsImNyeXB0byIsInNlbmRFbWFpbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJsb2dpbiIsInJlZ2lzdGVyIiwidmVyaWZ5RW1haWwiLCJjcmVhdGUiLCJ1cGRhdGUiLCJnZXRBbGwiLCJnZXRCeUlkIiwiZGVsZXRlIiwiX2RlbGV0ZSIsImVtYWlsIiwicGFzc3dvcmQiLCJhY2NvdW50IiwiZ2V0QWNjb3VudCIsImNvbXBhcmUiLCJlcnJvciIsIkVycm9yIiwidG9rZW4iLCJzaWduIiwidG9KU09OIiwidXNlciIsImJhc2ljRGV0YWlscyIsInBhcmFtcyIsIm9yaWdpbiIsImluc2VydFVzZXIiLCJ2ZXJpZmljYXRpb25Ub2tlbiIsIiRxdWVyeSIsInBhdGNoIiwidmVyaWZpZWQiLCJEYXRlIiwibm93IiwiaXNWZXJpZmllZCIsImlkIiwiaGFzaCIsInVwZGF0ZWRVc2VyIiwicXVlcnkiLCJwYXRjaEFuZEZldGNoQnlJZCIsImFjY291bnRzIiwibWFwIiwieCIsImRlbGV0ZUJ5SWQiLCJwYXJhbSIsIndoZXJlIiwiZmlyc3QiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInJvbGUiLCJwaG9uZU51bWJlciIsImhhc2hlZFBhc3N3b3JkIiwicmFuZG9tVG9rZW5TdHJpbmciLCJpbnNlcnQiLCJhY3RpdmUiLCJ0b0lTT1N0cmluZyIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJjcmVhdGVkIiwidXBkYXRlZCIsInNlbmRWZXJpZmljYXRpb25FbWFpbCIsIm1lc3NhZ2UiLCJ2ZXJpZnlVcmwiLCJ0byIsInN1YmplY3QiLCJodG1sIiwic2VuZEFscmVhZHlSZWdpc3RlcmVkRW1haWwiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQW5COztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2I7Ozs7Ozs7O0FBUUFDLEVBQUFBLEtBVGE7QUFVYkMsRUFBQUEsUUFWYTtBQVdiQyxFQUFBQSxXQVhhO0FBWWJDLEVBQUFBLE1BWmE7QUFhYkMsRUFBQUEsTUFiYTtBQWNiQyxFQUFBQSxNQWRhO0FBZWJDLEVBQUFBLE9BZmE7QUFnQmJDLEVBQUFBLE1BQU0sRUFBRUM7QUFoQkssQ0FBakI7O0FBbUJBLGVBQWVSLEtBQWYsQ0FBcUI7QUFBRVMsRUFBQUEsS0FBRjtBQUFTQyxFQUFBQTtBQUFULENBQXJCLEVBQTBDO0FBQ3RDLFFBQU1DLE9BQU8sR0FBRyxNQUFNQyxVQUFVLENBQUM7QUFBRUgsSUFBQUE7QUFBRixHQUFELENBQWhDOztBQUVBLE1BQ0ksQ0FBQ0UsT0FBRCxJQUNBO0FBQ0EsSUFBRSxNQUFNaEIsTUFBTSxDQUFDa0IsT0FBUCxDQUFlSCxRQUFmLEVBQXlCQyxPQUFPLENBQUNELFFBQWpDLENBQVIsQ0FISixFQUlFO0FBQ0UsVUFBTUksS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxnQ0FBVixDQUFkO0FBQ0EsVUFBTUQsS0FBTjtBQUNIOztBQUVELFFBQU1FLEtBQUssR0FBRyxNQUFNdEIsR0FBRyxDQUFDdUIsSUFBSixDQUFTTixPQUFPLENBQUNPLE1BQVIsRUFBVCxDQUFwQjtBQUVBLFNBQU87QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxZQUFZLENBQUNULE9BQUQsQ0FEZjtBQUVISyxJQUFBQTtBQUZHLEdBQVA7QUFJSDs7QUFFRCxlQUFlZixRQUFmLENBQXdCb0IsTUFBeEIsRUFBZ0NDLE1BQWhDLEVBQXdDO0FBQ3BDO0FBQ0EsTUFBSSxNQUFNVixVQUFVLENBQUM7QUFBRUgsSUFBQUEsS0FBSyxFQUFFWSxNQUFNLENBQUNaO0FBQWhCLEdBQUQsQ0FBcEIsRUFBK0M7QUFDM0M7QUFDQTtBQUNBLFVBQU1LLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQ1YsWUFBWU0sTUFBTSxDQUFDWixLQUFuQixHQUEyQix5QkFEakIsQ0FBZDtBQUlBLFVBQU1LLEtBQU47QUFDSDs7QUFFRCxRQUFNSCxPQUFPLEdBQUcsTUFBTVksVUFBVSxDQUFDRixNQUFELENBQWhDLENBWm9DLENBY3BDO0FBQ0E7O0FBRUEsUUFBTUwsS0FBSyxHQUFHLE1BQU10QixHQUFHLENBQUN1QixJQUFKLENBQVNOLE9BQVQsQ0FBcEI7QUFFQSxTQUFPO0FBQ0hRLElBQUFBLElBQUksRUFBRVIsT0FESDtBQUVISyxJQUFBQTtBQUZHLEdBQVA7QUFJSDs7QUFFRCxlQUFlZCxXQUFmLENBQTJCO0FBQUVjLEVBQUFBO0FBQUYsQ0FBM0IsRUFBc0M7QUFDbEMsUUFBTUwsT0FBTyxHQUFHLE1BQU1DLFVBQVUsQ0FBQztBQUFFWSxJQUFBQSxpQkFBaUIsRUFBRVI7QUFBckIsR0FBRCxDQUFoQztBQUVBLE1BQUksQ0FBQ0wsT0FBTCxFQUFjLE1BQU0scUJBQU47QUFFZCxRQUFNQSxPQUFPLENBQUNjLE1BQVIsR0FBaUJDLEtBQWpCLENBQXVCO0FBQ3pCQyxJQUFBQSxRQUFRLEVBQUVDLElBQUksQ0FBQ0MsR0FBTCxFQURlO0FBRXpCQyxJQUFBQSxVQUFVLEVBQUUsSUFGYTtBQUd6Qk4sSUFBQUEsaUJBQWlCLEVBQUU7QUFITSxHQUF2QixDQUFOO0FBS0g7O0FBRUQsZUFBZXJCLE1BQWYsQ0FBc0JrQixNQUF0QixFQUE4QjtBQUMxQjtBQUNBLE1BQUksTUFBTVQsVUFBVSxDQUFDO0FBQUVILElBQUFBLEtBQUssRUFBRVksTUFBTSxDQUFDWjtBQUFoQixHQUFELENBQXBCLEVBQStDO0FBQzNDLFVBQU0sWUFBWVksTUFBTSxDQUFDWixLQUFuQixHQUEyQix5QkFBakM7QUFDSDs7QUFFRCxRQUFNRSxPQUFPLEdBQUcsTUFBTVksVUFBVSxDQUFDRixNQUFELENBQWhDLENBTjBCLENBUTFCOztBQUVBLFNBQU9ELFlBQVksQ0FBQ1QsT0FBRCxDQUFuQjtBQUNIOztBQUVELGVBQWVQLE1BQWYsQ0FBc0IyQixFQUF0QixFQUEwQlYsTUFBMUIsRUFBa0M7QUFDOUIsUUFBTVYsT0FBTyxHQUFHLE1BQU1DLFVBQVUsQ0FBQztBQUFFbUIsSUFBQUE7QUFBRixHQUFELENBQWhDLENBRDhCLENBRzlCOztBQUNBLE1BQ0lWLE1BQU0sQ0FBQ1osS0FBUCxJQUNBRSxPQUFPLENBQUNGLEtBQVIsS0FBa0JZLE1BQU0sQ0FBQ1osS0FEekIsS0FFQyxNQUFNRyxVQUFVLENBQUM7QUFBRUgsSUFBQUEsS0FBSyxFQUFFWSxNQUFNLENBQUNaO0FBQWhCLEdBQUQsQ0FGakIsQ0FESixFQUlFO0FBQ0UsVUFBTUssS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVyxTQUFRTSxNQUFNLENBQUNaLEtBQU0sbUJBQWhDLENBQWQ7QUFDQSxVQUFNSyxLQUFOO0FBQ0gsR0FYNkIsQ0FhOUI7OztBQUNBLE1BQUlPLE1BQU0sQ0FBQ1gsUUFBWCxFQUFxQjtBQUNqQlcsSUFBQUEsTUFBTSxDQUFDWCxRQUFQLEdBQWtCLE1BQU1zQixJQUFJLENBQUNYLE1BQU0sQ0FBQ1gsUUFBUixDQUE1QjtBQUNIOztBQUVELFFBQU11QixXQUFXLEdBQUcsTUFBTXpDLElBQUksQ0FBQzBDLEtBQUwsR0FBYUMsaUJBQWIsQ0FBK0JKLEVBQS9CLEVBQW1DLEVBQUUsR0FBR1Y7QUFBTCxHQUFuQyxDQUExQjtBQUVBLFNBQU9ELFlBQVksQ0FBQ2EsV0FBRCxDQUFuQjtBQUNILEMsQ0FFRDs7O0FBQ0EsZUFBZTVCLE1BQWYsR0FBd0I7QUFDcEIsUUFBTStCLFFBQVEsR0FBRyxNQUFNNUMsSUFBSSxDQUFDMEMsS0FBTCxFQUF2QjtBQUNBLFNBQU9FLFFBQVEsQ0FBQ0MsR0FBVCxDQUFjQyxDQUFELElBQU9sQixZQUFZLENBQUNrQixDQUFELENBQWhDLENBQVA7QUFDSDs7QUFFRCxlQUFlaEMsT0FBZixDQUF1QnlCLEVBQXZCLEVBQTJCO0FBQ3ZCLFFBQU1wQixPQUFPLEdBQUcsTUFBTUMsVUFBVSxDQUFDO0FBQUVtQixJQUFBQTtBQUFGLEdBQUQsQ0FBaEM7QUFDQSxTQUFPWCxZQUFZLENBQUNULE9BQUQsQ0FBbkI7QUFDSCxDLENBRUQ7OztBQUNBLGVBQWVILE9BQWYsQ0FBdUJ1QixFQUF2QixFQUEyQjtBQUN2QixRQUFNdkMsSUFBSSxDQUFDMEMsS0FBTCxHQUFhSyxVQUFiLENBQXdCUixFQUF4QixDQUFOO0FBQ0g7QUFFRDs7O0FBQ0EsZUFBZW5CLFVBQWYsQ0FBMEI0QixLQUExQixFQUFpQztBQUM3QixRQUFNN0IsT0FBTyxHQUFHLE1BQU1uQixJQUFJLENBQUMwQyxLQUFMLEdBQ2pCTyxLQURpQixDQUNYLEVBQUUsR0FBR0Q7QUFBTCxHQURXLEVBRWpCRSxLQUZpQixFQUF0QjtBQUdBLFNBQU8vQixPQUFQO0FBQ0g7O0FBRUQsZUFBZVksVUFBZixDQUEwQkYsTUFBMUIsRUFBa0M7QUFDOUIsUUFBTTtBQUFFc0IsSUFBQUEsU0FBRjtBQUFhQyxJQUFBQSxRQUFiO0FBQXVCbkMsSUFBQUEsS0FBdkI7QUFBOEJDLElBQUFBLFFBQTlCO0FBQXdDbUMsSUFBQUEsSUFBeEM7QUFBOENDLElBQUFBO0FBQTlDLE1BQThEekIsTUFBcEUsQ0FEOEIsQ0FHOUI7O0FBQ0EsUUFBTTBCLGNBQWMsR0FBRyxNQUFNZixJQUFJLENBQUN0QixRQUFELEVBQVcsRUFBWCxDQUFqQztBQUNBLFFBQU1jLGlCQUFpQixHQUFHd0IsaUJBQWlCLEVBQTNDLENBTDhCLENBTzlCOztBQUNBLFFBQU1yQyxPQUFPLEdBQUcsTUFBTW5CLElBQUksQ0FBQzBDLEtBQUwsR0FBYWUsTUFBYixDQUFvQjtBQUN0Q3hDLElBQUFBLEtBRHNDO0FBRXRDa0MsSUFBQUEsU0FGc0M7QUFHdENDLElBQUFBLFFBSHNDO0FBSXRDbEMsSUFBQUEsUUFBUSxFQUFFcUMsY0FKNEI7QUFLdENELElBQUFBLFdBTHNDO0FBTXRDRCxJQUFBQSxJQUFJLEVBQUVBLElBTmdDO0FBT3RDSyxJQUFBQSxNQUFNLEVBQUUsSUFQOEI7QUFRdENwQixJQUFBQSxVQUFVLEVBQUUsS0FSMEI7QUFTdENILElBQUFBLFFBQVEsRUFBRSxJQUFJQyxJQUFKLEdBQVd1QixXQUFYLEVBVDRCO0FBVXRDM0IsSUFBQUE7QUFWc0MsR0FBcEIsQ0FBdEI7QUFhQSxTQUFPSixZQUFZLENBQUNULE9BQUQsQ0FBbkI7QUFDSDs7QUFFRCxlQUFlcUIsSUFBZixDQUFvQnRCLFFBQXBCLEVBQThCO0FBQzFCLFNBQU8sTUFBTWYsTUFBTSxDQUFDcUMsSUFBUCxDQUFZdEIsUUFBWixFQUFzQixFQUF0QixDQUFiO0FBQ0g7O0FBRUQsU0FBU3NDLGlCQUFULEdBQTZCO0FBQ3pCLFNBQU9wRCxNQUFNLENBQUN3RCxXQUFQLENBQW1CLEVBQW5CLEVBQXVCQyxRQUF2QixDQUFnQyxLQUFoQyxDQUFQO0FBQ0g7O0FBRUQsU0FBU2pDLFlBQVQsQ0FBc0JULE9BQXRCLEVBQStCO0FBQzNCLFFBQU07QUFDRm9CLElBQUFBLEVBREU7QUFFRlksSUFBQUEsU0FGRTtBQUdGQyxJQUFBQSxRQUhFO0FBSUZuQyxJQUFBQSxLQUpFO0FBS0ZvQyxJQUFBQSxJQUxFO0FBTUZTLElBQUFBLE9BTkU7QUFPRkMsSUFBQUEsT0FQRTtBQVFGekIsSUFBQUE7QUFSRSxNQVNGbkIsT0FUSjtBQVVBLFNBQU87QUFDSG9CLElBQUFBLEVBREc7QUFFSFksSUFBQUEsU0FGRztBQUdIQyxJQUFBQSxRQUhHO0FBSUhuQyxJQUFBQSxLQUpHO0FBS0hvQyxJQUFBQSxJQUxHO0FBTUhTLElBQUFBLE9BTkc7QUFPSEMsSUFBQUEsT0FQRztBQVFIekIsSUFBQUE7QUFSRyxHQUFQO0FBVUg7O0FBRUQsZUFBZTBCLHFCQUFmLENBQXFDN0MsT0FBckMsRUFBOENXLE1BQTlDLEVBQXNEO0FBQ2xELE1BQUltQyxPQUFKOztBQUNBLE1BQUluQyxNQUFKLEVBQVk7QUFDUixVQUFNb0MsU0FBUyxHQUFJLEdBQUVwQyxNQUFPLDRCQUEyQlgsT0FBTyxDQUFDYSxpQkFBa0IsRUFBakY7QUFDQWlDLElBQUFBLE9BQU8sR0FBSTtzQkFDR0MsU0FBVSxLQUFJQSxTQUFVO1NBRHRDO0FBR0gsR0FMRCxNQUtPO0FBQ0hELElBQUFBLE9BQU8sR0FBSTs4QkFDVzlDLE9BQU8sQ0FBQ2EsaUJBQWtCLGFBRGhEO0FBRUg7O0FBRUQsUUFBTTNCLFNBQVMsQ0FBQztBQUNaOEQsSUFBQUEsRUFBRSxFQUFFaEQsT0FBTyxDQUFDRixLQURBO0FBRVptRCxJQUFBQSxPQUFPLEVBQUUseUNBRkc7QUFHWkMsSUFBQUEsSUFBSSxFQUFHOztVQUVMSixPQUFRO0FBTEUsR0FBRCxDQUFmO0FBT0g7O0FBRUQsZUFBZUssMEJBQWYsQ0FBMENyRCxLQUExQyxFQUFpRGEsTUFBakQsRUFBeUQ7QUFDckQsTUFBSW1DLE9BQUo7O0FBQ0EsTUFBSW5DLE1BQUosRUFBWTtBQUNSbUMsSUFBQUEsT0FBTyxHQUFJLGdFQUErRG5DLE1BQU8sc0RBQWpGO0FBQ0gsR0FGRCxNQUVPO0FBQ0htQyxJQUFBQSxPQUFPLEdBQUksK0dBQVg7QUFDSDs7QUFFRCxRQUFNNUQsU0FBUyxDQUFDO0FBQ1o4RCxJQUFBQSxFQUFFLEVBQUVsRCxLQURRO0FBRVptRCxJQUFBQSxPQUFPLEVBQUUscURBRkc7QUFHWkMsSUFBQUEsSUFBSSxFQUFHO3VDQUN3QnBELEtBQU07aUJBQzVCZ0QsT0FBUTtBQUxMLEdBQUQsQ0FBZjtBQU9IIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXNlciA9IHJlcXVpcmUoXCIuLi91c2VyL3VzZXIubW9kZWxcIik7XG5jb25zdCBqd3QgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvand0XCIpO1xuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdFwiKTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBzZW5kRW1haWwgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZW1haWxcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIC8qKlxuICAgICAqIHJlZnJlc2h0b2tlblxuICAgICAqIHJldm9rZXRva2VuXG4gICAgICogZm9yZ290UGFzc3dvcmRcbiAgICAgKiB2YWxpZGF0ZVJlc2V0VG9rZW5cbiAgICAgKiB2YWxpZGF0ZVJlc2V0VG9rZW5cbiAgICAgKiByZXNldFBhc3N3b3JkXG4gICAgICovXG4gICAgbG9naW4sXG4gICAgcmVnaXN0ZXIsXG4gICAgdmVyaWZ5RW1haWwsXG4gICAgY3JlYXRlLFxuICAgIHVwZGF0ZSxcbiAgICBnZXRBbGwsXG4gICAgZ2V0QnlJZCxcbiAgICBkZWxldGU6IF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBsb2dpbih7IGVtYWlsLCBwYXNzd29yZCB9KSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IGdldEFjY291bnQoeyBlbWFpbCB9KTtcblxuICAgIGlmIChcbiAgICAgICAgIWFjY291bnQgfHxcbiAgICAgICAgLy8gIWFjY291bnQuaXNWZXJpZmllZCB8fFxuICAgICAgICAhKGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCBhY2NvdW50LnBhc3N3b3JkKSlcbiAgICApIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoXCJFbWFpbCBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3RcIik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgand0LnNpZ24oYWNjb3VudC50b0pTT04oKSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VyOiBiYXNpY0RldGFpbHMoYWNjb3VudCksXG4gICAgICAgIHRva2VuLFxuICAgIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKHBhcmFtcywgb3JpZ2luKSB7XG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoYXdhaXQgZ2V0QWNjb3VudCh7IGVtYWlsOiBwYXJhbXMuZW1haWwgfSkpIHtcbiAgICAgICAgLy8gc2VuZCBhbHJlYWR5IHJlZ2lzdGVyZWQgZXJyb3IgaW4gZW1haWwgdG8gcHJldmVudCBhY2NvdW50IGVudW1lcmF0aW9uXG4gICAgICAgIC8vIGF3YWl0IHNlbmRBbHJlYWR5UmVnaXN0ZXJlZEVtYWlsKHBhcmFtcy5lbWFpbCwgb3JpZ2luKTtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICAgICAnRW1haWwgXCInICsgcGFyYW1zLmVtYWlsICsgJ1wiIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCdcbiAgICAgICAgKTtcblxuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG5cbiAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgaW5zZXJ0VXNlcihwYXJhbXMpO1xuXG4gICAgLy8gc2VuZCBlbWFpbDtcbiAgICAvLyBhd2FpdCBzZW5kVmVyaWZpY2F0aW9uRW1haWwoYWNjb3VudCwgb3JpZ2luKTtcblxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgand0LnNpZ24oYWNjb3VudCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VyOiBhY2NvdW50LFxuICAgICAgICB0b2tlbixcbiAgICB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlFbWFpbCh7IHRva2VuIH0pIHtcbiAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgZ2V0QWNjb3VudCh7IHZlcmlmaWNhdGlvblRva2VuOiB0b2tlbiB9KTtcblxuICAgIGlmICghYWNjb3VudCkgdGhyb3cgXCJWZXJpZmljYXRpb24gZmFpbGVkXCI7XG5cbiAgICBhd2FpdCBhY2NvdW50LiRxdWVyeSgpLnBhdGNoKHtcbiAgICAgICAgdmVyaWZpZWQ6IERhdGUubm93KCksXG4gICAgICAgIGlzVmVyaWZpZWQ6IHRydWUsXG4gICAgICAgIHZlcmlmaWNhdGlvblRva2VuOiBudWxsLFxuICAgIH0pO1xufVxuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGUocGFyYW1zKSB7XG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoYXdhaXQgZ2V0QWNjb3VudCh7IGVtYWlsOiBwYXJhbXMuZW1haWwgfSkpIHtcbiAgICAgICAgdGhyb3cgJ0VtYWlsIFwiJyArIHBhcmFtcy5lbWFpbCArICdcIiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQnO1xuICAgIH1cblxuICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCBpbnNlcnRVc2VyKHBhcmFtcyk7XG5cbiAgICAvLyBUT0RPPyBiaW5kIHRvIGNvbXBhbnkgaGVyZS5cblxuICAgIHJldHVybiBiYXNpY0RldGFpbHMoYWNjb3VudCk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZShpZCwgcGFyYW1zKSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IGdldEFjY291bnQoeyBpZCB9KTtcblxuICAgIC8vIHZhbGlkYXRlIGlmIGVtYWlsIHdhcyBjaGFuZ2VkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMuZW1haWwgJiZcbiAgICAgICAgYWNjb3VudC5lbWFpbCAhPT0gcGFyYW1zLmVtYWlsICYmXG4gICAgICAgIChhd2FpdCBnZXRBY2NvdW50KHsgZW1haWw6IHBhcmFtcy5lbWFpbCB9KSlcbiAgICApIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoYEVtYWlsICR7cGFyYW1zLmVtYWlsfSBpcyBhbHJlYWR5IHRha2VuYCk7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cblxuICAgIC8vIGhhc2ggcGFzc3dvcmQgaWYgaXQgd2FzIGVudGVyZWRcbiAgICBpZiAocGFyYW1zLnBhc3N3b3JkKSB7XG4gICAgICAgIHBhcmFtcy5wYXNzd29yZCA9IGF3YWl0IGhhc2gocGFyYW1zLnBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkVXNlciA9IGF3YWl0IFVzZXIucXVlcnkoKS5wYXRjaEFuZEZldGNoQnlJZChpZCwgeyAuLi5wYXJhbXMgfSk7XG5cbiAgICByZXR1cm4gYmFzaWNEZXRhaWxzKHVwZGF0ZWRVc2VyKTtcbn1cblxuLy8gVE9ETyBNQUtFIFNPIElUIENBTiBRVUVSWSBGT1IgRElGRkVSRU5UIFRZUEVTIE9GIFVTRVJTXG5hc3luYyBmdW5jdGlvbiBnZXRBbGwoKSB7XG4gICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBVc2VyLnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGFjY291bnRzLm1hcCgoeCkgPT4gYmFzaWNEZXRhaWxzKHgpKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QnlJZChpZCkge1xuICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCBnZXRBY2NvdW50KHsgaWQgfSk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhhY2NvdW50KTtcbn1cblxuLy8gVE9ETyBNQUtFIElUIEFDQ0VQVCBBTiBBUlJBWSBPRiBJRFxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShpZCkge1xuICAgIGF3YWl0IFVzZXIucXVlcnkoKS5kZWxldGVCeUlkKGlkKTtcbn1cblxuLyoqPT09PT09PT09PT09PT09PT09PT0gSGVscGVycyA9PT09PT09PT09PT09PT09PT09PT09ICovXG5hc3luYyBmdW5jdGlvbiBnZXRBY2NvdW50KHBhcmFtKSB7XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IFVzZXIucXVlcnkoKVxuICAgICAgICAud2hlcmUoeyAuLi5wYXJhbSB9KVxuICAgICAgICAuZmlyc3QoKTtcbiAgICByZXR1cm4gYWNjb3VudDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gaW5zZXJ0VXNlcihwYXJhbXMpIHtcbiAgICBjb25zdCB7IGZpcnN0TmFtZSwgbGFzdE5hbWUsIGVtYWlsLCBwYXNzd29yZCwgcm9sZSwgcGhvbmVOdW1iZXIgfSA9IHBhcmFtcztcblxuICAgIC8vIGhhc2ggcGFzc3dvcmQgYW5kIHZlcmlmaWNhdGlvbiB0b2tlblxuICAgIGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgaGFzaChwYXNzd29yZCwgMTApO1xuICAgIGNvbnN0IHZlcmlmaWNhdGlvblRva2VuID0gcmFuZG9tVG9rZW5TdHJpbmcoKTtcblxuICAgIC8vIGNyZWF0ZSBhY2NvdW50XG4gICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IFVzZXIucXVlcnkoKS5pbnNlcnQoe1xuICAgICAgICBlbWFpbCxcbiAgICAgICAgZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZSxcbiAgICAgICAgcGFzc3dvcmQ6IGhhc2hlZFBhc3N3b3JkLFxuICAgICAgICBwaG9uZU51bWJlcixcbiAgICAgICAgcm9sZTogcm9sZSxcbiAgICAgICAgYWN0aXZlOiB0cnVlLFxuICAgICAgICBpc1ZlcmlmaWVkOiBmYWxzZSxcbiAgICAgICAgdmVyaWZpZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgdmVyaWZpY2F0aW9uVG9rZW4sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gYmFzaWNEZXRhaWxzKGFjY291bnQpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBoYXNoKHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCAxMCk7XG59XG5cbmZ1bmN0aW9uIHJhbmRvbVRva2VuU3RyaW5nKCkge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoNDApLnRvU3RyaW5nKFwiaGV4XCIpO1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMoYWNjb3VudCkge1xuICAgIGNvbnN0IHtcbiAgICAgICAgaWQsXG4gICAgICAgIGZpcnN0TmFtZSxcbiAgICAgICAgbGFzdE5hbWUsXG4gICAgICAgIGVtYWlsLFxuICAgICAgICByb2xlLFxuICAgICAgICBjcmVhdGVkLFxuICAgICAgICB1cGRhdGVkLFxuICAgICAgICBpc1ZlcmlmaWVkLFxuICAgIH0gPSBhY2NvdW50O1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICBmaXJzdE5hbWUsXG4gICAgICAgIGxhc3ROYW1lLFxuICAgICAgICBlbWFpbCxcbiAgICAgICAgcm9sZSxcbiAgICAgICAgY3JlYXRlZCxcbiAgICAgICAgdXBkYXRlZCxcbiAgICAgICAgaXNWZXJpZmllZCxcbiAgICB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiBzZW5kVmVyaWZpY2F0aW9uRW1haWwoYWNjb3VudCwgb3JpZ2luKSB7XG4gICAgbGV0IG1lc3NhZ2U7XG4gICAgaWYgKG9yaWdpbikge1xuICAgICAgICBjb25zdCB2ZXJpZnlVcmwgPSBgJHtvcmlnaW59L2F1dGgvdmVyaWZ5LWVtYWlsP3Rva2VuPSR7YWNjb3VudC52ZXJpZmljYXRpb25Ub2tlbn1gO1xuICAgICAgICBtZXNzYWdlID0gYDxwPiBQbGVhc2UgY2xpY2sgdGhlIGJlbG93IGxpbmsgdG8gdmVyaWZ5IHlvdXIgZW1haWwgYWRkcmVzczo8L3A+XG4gICAgICAgIDxwPjxhIGhyZWY9XCIke3ZlcmlmeVVybH1cIj4ke3ZlcmlmeVVybH08L2E+PC9wPlxuICAgICAgICBgO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG1lc3NhZ2UgPSBgPHA+UGxlYXNlIHVzZSB0aGUgYmVsb3cgdG9rZW4gdG8gdmVyaWZ5IHlvdXIgZW1haWwgYWRkcmVzcyB3aXRoIHRoZSA8Y29kZT4vYXV0aC92ZXJpZnktZW1haWw8L2NvZGU+IGFwaSByb3V0ZTo8L3A+XG4gICAgICAgICAgICAgICAgICAgPHA+PGNvZGU+JHthY2NvdW50LnZlcmlmaWNhdGlvblRva2VufTwvY29kZT48L3A+YDtcbiAgICB9XG5cbiAgICBhd2FpdCBzZW5kRW1haWwoe1xuICAgICAgICB0bzogYWNjb3VudC5lbWFpbCxcbiAgICAgICAgc3ViamVjdDogXCJTaWduLXVwIHZlcmlmaWNhdGlvbiBBUEkgLSBWZXJpZnkgRW1haWxcIixcbiAgICAgICAgaHRtbDogYDxoND5WZXJpZnkgRW1haWw8L2g0PlxuICAgICAgICA8cD5UaGFua3MgZm9yIHJlZ2lzdGVyaW5nITwvcD5cbiAgICAgICAgJHttZXNzYWdlfWAsXG4gICAgfSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHNlbmRBbHJlYWR5UmVnaXN0ZXJlZEVtYWlsKGVtYWlsLCBvcmlnaW4pIHtcbiAgICBsZXQgbWVzc2FnZTtcbiAgICBpZiAob3JpZ2luKSB7XG4gICAgICAgIG1lc3NhZ2UgPSBgPHA+SWYgeW91IGRvbid0IGtub3cgeW91ciBwYXNzd29yZCBwbGVhc2UgdmlzaXQgdGhlIDxhIGhyZWY9XCIke29yaWdpbn0vYXV0aC9mb3Jnb3QtcGFzc3dvcmRcIj5mb3Jnb3QgcGFzc3dvcmQ8L2E+IHBhZ2UuPC9wPmA7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbWVzc2FnZSA9IGA8cD5JZiB5b3UgZG9uJ3Qga25vdyB5b3VyIHBhc3N3b3JkIHlvdSBjYW4gcmVzZXQgaXQgdmlhIHRoZSA8Y29kZT4vYXV0aC9mb3Jnb3QtcGFzc3dvcmQ8L2NvZGU+IGFwaSByb3V0ZS48L3A+YDtcbiAgICB9XG5cbiAgICBhd2FpdCBzZW5kRW1haWwoe1xuICAgICAgICB0bzogZW1haWwsXG4gICAgICAgIHN1YmplY3Q6IFwiU2lnbi11cCBWZXJpZmljYXRpb24gQVBJIC0gRW1haWwgQWxyZWFkeSBSZWdpc3RlcmVkXCIsXG4gICAgICAgIGh0bWw6IGA8aDQ+RW1haWwgQWxyZWFkeSBSZWdpc3RlcmVkPC9oND5cbiAgICAgICAgICAgICAgIDxwPllvdXIgZW1haWwgPHN0cm9uZz4ke2VtYWlsfTwvc3Ryb25nPiBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQuPC9wPlxuICAgICAgICAgICAgICAgJHttZXNzYWdlfWAsXG4gICAgfSk7XG59XG4iXX0=",
            "originalCode": "const User = require(\"../user/user.model\");\nconst jwt = require(\"../../utils/jwt\");\nconst bcrypt = require(\"bcrypt\");\nconst crypto = require(\"crypto\");\nconst sendEmail = require(\"../../utils/email\");\n\nmodule.exports = {\n    /**\n     * refreshtoken\n     * revoketoken\n     * forgotPassword\n     * validateResetToken\n     * validateResetToken\n     * resetPassword\n     */\n    login,\n    register,\n    verifyEmail,\n    create,\n    update,\n    getAll,\n    getById,\n    delete: _delete,\n};\n\nasync function login({ email, password }) {\n    const account = await getAccount({ email });\n\n    if (\n        !account ||\n        // !account.isVerified ||\n        !(await bcrypt.compare(password, account.password))\n    ) {\n        const error = new Error(\"Email or password is incorrect\");\n        throw error;\n    }\n\n    const token = await jwt.sign(account.toJSON());\n\n    return {\n        user: basicDetails(account),\n        token,\n    };\n}\n\nasync function register(params, origin) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        // send already registered error in email to prevent account enumeration\n        // await sendAlreadyRegisteredEmail(params.email, origin);\n        const error = new Error(\n            'Email \"' + params.email + '\" is already registered'\n        );\n\n        throw error;\n    }\n\n    const account = await insertUser(params);\n\n    // send email;\n    // await sendVerificationEmail(account, origin);\n\n    const token = await jwt.sign(account);\n\n    return {\n        user: account,\n        token,\n    };\n}\n\nasync function verifyEmail({ token }) {\n    const account = await getAccount({ verificationToken: token });\n\n    if (!account) throw \"Verification failed\";\n\n    await account.$query().patch({\n        verified: Date.now(),\n        isVerified: true,\n        verificationToken: null,\n    });\n}\n\nasync function create(params) {\n    // validate\n    if (await getAccount({ email: params.email })) {\n        throw 'Email \"' + params.email + '\" is already registered';\n    }\n\n    const account = await insertUser(params);\n\n    // TODO? bind to company here.\n\n    return basicDetails(account);\n}\n\nasync function update(id, params) {\n    const account = await getAccount({ id });\n\n    // validate if email was changed\n    if (\n        params.email &&\n        account.email !== params.email &&\n        (await getAccount({ email: params.email }))\n    ) {\n        const error = new Error(`Email ${params.email} is already taken`);\n        throw error;\n    }\n\n    // hash password if it was entered\n    if (params.password) {\n        params.password = await hash(params.password);\n    }\n\n    const updatedUser = await User.query().patchAndFetchById(id, { ...params });\n\n    return basicDetails(updatedUser);\n}\n\n// TODO MAKE SO IT CAN QUERY FOR DIFFERENT TYPES OF USERS\nasync function getAll() {\n    const accounts = await User.query();\n    return accounts.map((x) => basicDetails(x));\n}\n\nasync function getById(id) {\n    const account = await getAccount({ id });\n    return basicDetails(account);\n}\n\n// TODO MAKE IT ACCEPT AN ARRAY OF ID\nasync function _delete(id) {\n    await User.query().deleteById(id);\n}\n\n/**==================== Helpers ====================== */\nasync function getAccount(param) {\n    const account = await User.query()\n        .where({ ...param })\n        .first();\n    return account;\n}\n\nasync function insertUser(params) {\n    const { firstName, lastName, email, password, role, phoneNumber } = params;\n\n    // hash password and verification token\n    const hashedPassword = await hash(password, 10);\n    const verificationToken = randomTokenString();\n\n    // create account\n    const account = await User.query().insert({\n        email,\n        firstName,\n        lastName,\n        password: hashedPassword,\n        phoneNumber,\n        role: role,\n        active: true,\n        isVerified: false,\n        verified: new Date().toISOString(),\n        verificationToken,\n    });\n\n    return basicDetails(account);\n}\n\nasync function hash(password) {\n    return await bcrypt.hash(password, 10);\n}\n\nfunction randomTokenString() {\n    return crypto.randomBytes(40).toString(\"hex\");\n}\n\nfunction basicDetails(account) {\n    const {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    } = account;\n    return {\n        id,\n        firstName,\n        lastName,\n        email,\n        role,\n        created,\n        updated,\n        isVerified,\n    };\n}\n\nasync function sendVerificationEmail(account, origin) {\n    let message;\n    if (origin) {\n        const verifyUrl = `${origin}/auth/verify-email?token=${account.verificationToken}`;\n        message = `<p> Please click the below link to verify your email address:</p>\n        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n        `;\n    } else {\n        message = `<p>Please use the below token to verify your email address with the <code>/auth/verify-email</code> api route:</p>\n                   <p><code>${account.verificationToken}</code></p>`;\n    }\n\n    await sendEmail({\n        to: account.email,\n        subject: \"Sign-up verification API - Verify Email\",\n        html: `<h4>Verify Email</h4>\n        <p>Thanks for registering!</p>\n        ${message}`,\n    });\n}\n\nasync function sendAlreadyRegisteredEmail(email, origin) {\n    let message;\n    if (origin) {\n        message = `<p>If you don't know your password please visit the <a href=\"${origin}/auth/forgot-password\">forgot password</a> page.</p>`;\n    } else {\n        message = `<p>If you don't know your password you can reset it via the <code>/auth/forgot-password</code> api route.</p>`;\n    }\n\n    await sendEmail({\n        to: email,\n        subject: \"Sign-up Verification API - Email Already Registered\",\n        html: `<h4>Email Already Registered</h4>\n               <p>Your email <strong>${email}</strong> is already registered.</p>\n               ${message}`,\n    });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/15/authservice_15139629ee8738726404e916e3a02258.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2316",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 22003,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 22000,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "login",
                "ranges": [
                  {
                    "startOffset": 546,
                    "endOffset": 944,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "register",
                "ranges": [
                  {
                    "startOffset": 946,
                    "endOffset": 1502,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "verifyEmail",
                "ranges": [
                  {
                    "startOffset": 1504,
                    "endOffset": 1779,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1781,
                    "endOffset": 2062,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2064,
                    "endOffset": 2621,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAll",
                "ranges": [
                  {
                    "startOffset": 2682,
                    "endOffset": 2793,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 2795,
                    "endOffset": 2907,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 2948,
                    "endOffset": 3015,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAccount",
                "ranges": [
                  {
                    "startOffset": 3076,
                    "endOffset": 3198,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "insertUser",
                "ranges": [
                  {
                    "startOffset": 3200,
                    "endOffset": 3791,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "hash",
                "ranges": [
                  {
                    "startOffset": 3793,
                    "endOffset": 3868,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "randomTokenString",
                "ranges": [
                  {
                    "startOffset": 3870,
                    "endOffset": 3951,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 3953,
                    "endOffset": 4226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendVerificationEmail",
                "ranges": [
                  {
                    "startOffset": 4228,
                    "endOffset": 4965,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendAlreadyRegisteredEmail",
                "ranges": [
                  {
                    "startOffset": 4967,
                    "endOffset": 5605,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst db = require(\"../../db\");\n\nclass User extends Model {\n  static get tableName() {\n    return tableNames.user;\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiVXNlciIsInRhYmxlTmFtZSIsInVzZXIiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLDRCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsSUFBTixTQUFtQkosS0FBbkIsQ0FBeUI7QUFDckIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLElBQWxCO0FBQ0g7O0FBSG9COztBQU16Qk4sS0FBSyxDQUFDTyxJQUFOLENBQVdKLEVBQVg7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vZGJcIik7XG5cbmNsYXNzIFVzZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLnVzZXI7XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyO1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst db = require(\"../../db\");\n\nclass User extends Model {\n    static get tableName() {\n        return tableNames.user;\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = User;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/65/usermodel_65a16864dea2cc43f1cea59fb9ce1a95.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2317",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/user/user.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1454,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1451,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "User",
                "ranges": [
                  {
                    "startOffset": 224,
                    "endOffset": 224,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 260,
                    "endOffset": 309,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  user: \"user\",\n  address: \"address\",\n  company: \"company\",\n  accounts: \"accounts\",\n  category: \"category\",\n  menu: \"menu\",\n  item: \"item\",\n  order: \"order\",\n  orderItem: \"orderItem\",\n  payments: \"payments\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlTmFtZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInVzZXIiLCJhZGRyZXNzIiwiY29tcGFueSIsImFjY291bnRzIiwiY2F0ZWdvcnkiLCJtZW51IiwiaXRlbSIsIm9yZGVyIiwib3JkZXJJdGVtIiwicGF5bWVudHMiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLE1BRE87QUFFYkMsRUFBQUEsT0FBTyxFQUFFLFNBRkk7QUFHYkMsRUFBQUEsT0FBTyxFQUFFLFNBSEk7QUFJYkMsRUFBQUEsUUFBUSxFQUFFLFVBSkc7QUFLYkMsRUFBQUEsUUFBUSxFQUFFLFVBTEc7QUFNYkMsRUFBQUEsSUFBSSxFQUFFLE1BTk87QUFPYkMsRUFBQUEsSUFBSSxFQUFFLE1BUE87QUFRYkMsRUFBQUEsS0FBSyxFQUFFLE9BUk07QUFTYkMsRUFBQUEsU0FBUyxFQUFFLFdBVEU7QUFVYkMsRUFBQUEsUUFBUSxFQUFFO0FBVkcsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICB1c2VyOiBcInVzZXJcIixcbiAgICBhZGRyZXNzOiBcImFkZHJlc3NcIixcbiAgICBjb21wYW55OiBcImNvbXBhbnlcIixcbiAgICBhY2NvdW50czogXCJhY2NvdW50c1wiLFxuICAgIGNhdGVnb3J5OiBcImNhdGVnb3J5XCIsXG4gICAgbWVudTogXCJtZW51XCIsXG4gICAgaXRlbTogXCJpdGVtXCIsXG4gICAgb3JkZXI6IFwib3JkZXJcIixcbiAgICBvcmRlckl0ZW06IFwib3JkZXJJdGVtXCIsXG4gICAgcGF5bWVudHM6IFwicGF5bWVudHNcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    user: \"user\",\n    address: \"address\",\n    company: \"company\",\n    accounts: \"accounts\",\n    category: \"category\",\n    menu: \"menu\",\n    item: \"item\",\n    order: \"order\",\n    orderItem: \"orderItem\",\n    payments: \"payments\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/d1/tableNames_d158fb35bde4ba2feb47fa73fcd1c0db.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2530",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/constants/tableNames.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1435,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1432,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Knex = require(\"knex\");\n\nconst {\n  Model\n} = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\n\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\nconst db = Knex(connectionConfig);\nModel.knex(db);\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIktuZXgiLCJyZXF1aXJlIiwiTW9kZWwiLCJrbmV4RmlsZSIsImVudmlyb25tZW50IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiY29ubmVjdGlvbkNvbmZpZyIsImRiIiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQVlELE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1FLFFBQVEsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBeEI7O0FBQ0EsTUFBTUcsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixhQUE1QztBQUNBLE1BQU1DLGdCQUFnQixHQUFHTCxRQUFRLENBQUNDLFdBQUQsQ0FBakM7QUFFQSxNQUFNSyxFQUFFLEdBQUdULElBQUksQ0FBQ1EsZ0JBQUQsQ0FBZjtBQUVBTixLQUFLLENBQUNRLElBQU4sQ0FBV0QsRUFBWDtBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJILEVBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgS25leCA9IHJlcXVpcmUoXCJrbmV4XCIpO1xuY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcblxuY29uc3Qga25leEZpbGUgPSByZXF1aXJlKFwiLi4va25leGZpbGVcIik7XG5jb25zdCBlbnZpcm9ubWVudCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8IFwiZGV2ZWxvcG1lbnRcIjtcbmNvbnN0IGNvbm5lY3Rpb25Db25maWcgPSBrbmV4RmlsZVtlbnZpcm9ubWVudF07XG5cbmNvbnN0IGRiID0gS25leChjb25uZWN0aW9uQ29uZmlnKTtcblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG4iXX0=",
            "originalCode": "const Knex = require(\"knex\");\nconst { Model } = require(\"objection\");\n\nconst knexFile = require(\"../knexfile\");\nconst environment = process.env.NODE_ENV || \"development\";\nconst connectionConfig = knexFile[environment];\n\nconst db = Knex(connectionConfig);\n\nModel.knex(db);\n\nmodule.exports = db;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/06/db_061f2ffe7a9d03a98dba0f960ecba1d1.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2531",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/db.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1629,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1626,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n  test: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB_TEST,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  development: {\n    client: \"pg\",\n    connection: {\n      // host: \"127.0.0.1\",\n      database: process.env.POSTGRES_DB,\n      user: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  },\n  production: {\n    client: \"pg\",\n    connection: process.env.DATABASE_URL,\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      directory: __dirname + \"/db/migrations\"\n    },\n    seeds: {\n      directory: __dirname + \"/db/seeds\"\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhmaWxlLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIiwidGVzdCIsImNsaWVudCIsImNvbm5lY3Rpb24iLCJkYXRhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJQT1NUR1JFU19EQl9URVNUIiwidXNlciIsIlBPU1RHUkVTX1VTRVIiLCJwYXNzd29yZCIsIlBPU1RHUkVTX1BBU1NXT1JEIiwibWlncmF0aW9ucyIsImRpcmVjdG9yeSIsIl9fZGlybmFtZSIsInNlZWRzIiwiZGV2ZWxvcG1lbnQiLCJQT1NUR1JFU19EQiIsInByb2R1Y3Rpb24iLCJEQVRBQkFTRV9VUkwiLCJwb29sIiwibWluIiwibWF4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxNQUFNLEVBQUUsSUFETjtBQUVGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxnQkFGZDtBQUdSQyxNQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxhQUhWO0FBSVJDLE1BQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLO0FBSmQsS0FGVjtBQVFGQyxJQUFBQSxVQUFVLEVBQUU7QUFDUkMsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEZixLQVJWO0FBWUZDLElBQUFBLEtBQUssRUFBRTtBQUNIRixNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURwQjtBQVpMLEdBRE87QUFrQmJFLEVBQUFBLFdBQVcsRUFBRTtBQUNUZCxJQUFBQSxNQUFNLEVBQUUsSUFEQztBQUVUQyxJQUFBQSxVQUFVLEVBQUU7QUFDUjtBQUNBQyxNQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVyxXQUZkO0FBR1JULE1BQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGFBSFY7QUFJUkMsTUFBQUEsUUFBUSxFQUFFTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUs7QUFKZCxLQUZIO0FBUVRDLElBQUFBLFVBQVUsRUFBRTtBQUNSQyxNQUFBQSxTQUFTLEVBQUVDLFNBQVMsR0FBRztBQURmLEtBUkg7QUFZVEMsSUFBQUEsS0FBSyxFQUFFO0FBQ0hGLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRHBCO0FBWkUsR0FsQkE7QUFtQ2JJLEVBQUFBLFVBQVUsRUFBRTtBQUNSaEIsSUFBQUEsTUFBTSxFQUFFLElBREE7QUFFUkMsSUFBQUEsVUFBVSxFQUFFRSxPQUFPLENBQUNDLEdBQVIsQ0FBWWEsWUFGaEI7QUFHUkMsSUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLE1BQUFBLEdBQUcsRUFBRSxDQURIO0FBRUZDLE1BQUFBLEdBQUcsRUFBRTtBQUZILEtBSEU7QUFPUlYsSUFBQUEsVUFBVSxFQUFFO0FBQ1JDLE1BQUFBLFNBQVMsRUFBRUMsU0FBUyxHQUFHO0FBRGYsS0FQSjtBQVdSQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEYsTUFBQUEsU0FBUyxFQUFFQyxTQUFTLEdBQUc7QUFEcEI7QUFYQztBQW5DQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVwZGF0ZSB3aXRoIHlvdXIgY29uZmlnIHNldHRpbmdzLlxucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdGVzdDoge1xuICAgICAgICBjbGllbnQ6IFwicGdcIixcbiAgICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICAgICAgLy8gaG9zdDogXCIxMjcuMC4wLjFcIixcbiAgICAgICAgICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5QT1NUR1JFU19EQl9URVNULFxuICAgICAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfVVNFUixcbiAgICAgICAgICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5QT1NUR1JFU19QQVNTV09SRCxcbiAgICAgICAgfSxcbiAgICAgICAgbWlncmF0aW9uczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9taWdyYXRpb25zXCIsXG4gICAgICAgIH0sXG5cbiAgICAgICAgc2VlZHM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvc2VlZHNcIixcbiAgICAgICAgfSxcbiAgICB9LFxuXG4gICAgZGV2ZWxvcG1lbnQ6IHtcbiAgICAgICAgY2xpZW50OiBcInBnXCIsXG4gICAgICAgIGNvbm5lY3Rpb246IHtcbiAgICAgICAgICAgIC8vIGhvc3Q6IFwiMTI3LjAuMC4xXCIsXG4gICAgICAgICAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfREIsXG4gICAgICAgICAgICB1c2VyOiBwcm9jZXNzLmVudi5QT1NUR1JFU19VU0VSLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBPU1RHUkVTX1BBU1NXT1JELFxuICAgICAgICB9LFxuICAgICAgICBtaWdyYXRpb25zOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL21pZ3JhdGlvbnNcIixcbiAgICAgICAgfSxcblxuICAgICAgICBzZWVkczoge1xuICAgICAgICAgICAgZGlyZWN0b3J5OiBfX2Rpcm5hbWUgKyBcIi9kYi9zZWVkc1wiLFxuICAgICAgICB9LFxuICAgIH0sXG5cbiAgICBwcm9kdWN0aW9uOiB7XG4gICAgICAgIGNsaWVudDogXCJwZ1wiLFxuICAgICAgICBjb25uZWN0aW9uOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsXG4gICAgICAgIHBvb2w6IHtcbiAgICAgICAgICAgIG1pbjogMixcbiAgICAgICAgICAgIG1heDogMTAsXG4gICAgICAgIH0sXG4gICAgICAgIG1pZ3JhdGlvbnM6IHtcbiAgICAgICAgICAgIGRpcmVjdG9yeTogX19kaXJuYW1lICsgXCIvZGIvbWlncmF0aW9uc1wiLFxuICAgICAgICB9LFxuXG4gICAgICAgIHNlZWRzOiB7XG4gICAgICAgICAgICBkaXJlY3Rvcnk6IF9fZGlybmFtZSArIFwiL2RiL3NlZWRzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4iXX0=",
            "originalCode": "// Update with your config settings.\nrequire(\"dotenv\").config();\n\nmodule.exports = {\n    test: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB_TEST,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    development: {\n        client: \"pg\",\n        connection: {\n            // host: \"127.0.0.1\",\n            database: process.env.POSTGRES_DB,\n            user: process.env.POSTGRES_USER,\n            password: process.env.POSTGRES_PASSWORD,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n\n    production: {\n        client: \"pg\",\n        connection: process.env.DATABASE_URL,\n        pool: {\n            min: 2,\n            max: 10,\n        },\n        migrations: {\n            directory: __dirname + \"/db/migrations\",\n        },\n\n        seeds: {\n            directory: __dirname + \"/db/seeds\",\n        },\n    },\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e2/knexfile_e268b34e213dcf9ff4bbc9c1fff3199f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2763",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/knexfile.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4994,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4991,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n  return new Promise((resolve, reject) => {\n    jwt.sign(payload, process.env.JWT_SECRET, {\n      expiresIn: \"3h\"\n    }, (error, token) => {\n      if (error) return reject(error);\n      return resolve(token);\n    });\n  });\n}\n\nmodule.exports = {\n  sign\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwic2lnbiIsInBheWxvYWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiZXhwaXJlc0luIiwiZXJyb3IiLCJ0b2tlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUEsU0FBU0MsSUFBVCxDQUFjQyxPQUFkLEVBQXVCO0FBQ25CLFNBQU8sSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUNwQ04sSUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQ0lDLE9BREosRUFFSUksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBRmhCLEVBR0k7QUFDSUMsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FISixFQU1JLENBQUNDLEtBQUQsRUFBUUMsS0FBUixLQUFrQjtBQUNkLFVBQUlELEtBQUosRUFBVyxPQUFPTCxNQUFNLENBQUNLLEtBQUQsQ0FBYjtBQUNYLGFBQU9OLE9BQU8sQ0FBQ08sS0FBRCxDQUFkO0FBQ0gsS0FUTDtBQVdILEdBWk0sQ0FBUDtBQWFIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlosRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XG5cbmZ1bmN0aW9uIHNpZ24ocGF5bG9hZCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGp3dC5zaWduKFxuICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZXhwaXJlc0luOiBcIjNoXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgKGVycm9yLCB0b2tlbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUodG9rZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBzaWduLFxufTtcbiJdfQ==",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\n\nfunction sign(payload) {\n    return new Promise((resolve, reject) => {\n        jwt.sign(\n            payload,\n            process.env.JWT_SECRET,\n            {\n                expiresIn: \"3h\",\n            },\n            (error, token) => {\n                if (error) return reject(error);\n                return resolve(token);\n            }\n        );\n    });\n}\n\nmodule.exports = {\n    sign,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/a2/jwt_a2ecd03f3666d6bdf618e5bb010e6f13.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2815",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/jwt.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1961,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sign",
                "ranges": [
                  {
                    "startOffset": 127,
                    "endOffset": 376,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const nodemailer = require(\"nodemailer\");\n\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({\n  to,\n  subject,\n  html,\n  from = config[\"emailFrom\"]\n}) {\n  const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n  await transporter.sendMail({\n    from,\n    to,\n    subject,\n    html\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbIm5vZGVtYWlsZXIiLCJyZXF1aXJlIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlbmRFbWFpbCIsInRvIiwic3ViamVjdCIsImh0bWwiLCJmcm9tIiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJzZW5kTWFpbCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxTQUFqQjs7QUFFQSxlQUFlQSxTQUFmLENBQXlCO0FBQUVDLEVBQUFBLEVBQUY7QUFBTUMsRUFBQUEsT0FBTjtBQUFlQyxFQUFBQSxJQUFmO0FBQXFCQyxFQUFBQSxJQUFJLEdBQUdQLE1BQU0sQ0FBQyxXQUFEO0FBQWxDLENBQXpCLEVBQTRFO0FBQ3hFLFFBQU1RLFdBQVcsR0FBR1YsVUFBVSxDQUFDVyxlQUFYLENBQTJCVCxNQUFNLENBQUMsYUFBRCxDQUFqQyxDQUFwQjtBQUNBLFFBQU1RLFdBQVcsQ0FBQ0UsUUFBWixDQUFxQjtBQUFFSCxJQUFBQSxJQUFGO0FBQVFILElBQUFBLEVBQVI7QUFBWUMsSUFBQUEsT0FBWjtBQUFxQkMsSUFBQUE7QUFBckIsR0FBckIsQ0FBTjtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZW1haWxlciA9IHJlcXVpcmUoXCJub2RlbWFpbGVyXCIpO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZShcIi4uL2NvbmZpZy5qc29uXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNlbmRFbWFpbDtcblxuYXN5bmMgZnVuY3Rpb24gc2VuZEVtYWlsKHsgdG8sIHN1YmplY3QsIGh0bWwsIGZyb20gPSBjb25maWdbXCJlbWFpbEZyb21cIl0gfSkge1xuICAgIGNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoY29uZmlnW1wic210cE9wdGlvbnNcIl0pO1xuICAgIGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHsgZnJvbSwgdG8sIHN1YmplY3QsIGh0bWwgfSk7XG59XG4iXX0=",
            "originalCode": "const nodemailer = require(\"nodemailer\");\nconst config = require(\"../config.json\");\n\nmodule.exports = sendEmail;\n\nasync function sendEmail({ to, subject, html, from = config[\"emailFrom\"] }) {\n    const transporter = nodemailer.createTransport(config[\"smtpOptions\"]);\n    await transporter.sendMail({ from, to, subject, html });\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/email_4444491566e111edc26f59e95bae5b33.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2906",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/email.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1859,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1856,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "sendEmail",
                "ranges": [
                  {
                    "startOffset": 204,
                    "endOffset": 441,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const jwt = require(\"jsonwebtoken\");\n\nconst User = require(\"../api/user/user.model\");\n\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n  auth,\n  isOwner\n};\n\nfunction auth(roles = []) {\n  if (typeof roles === \"string\") {\n    roles = [roles];\n  }\n\n  return async (req, res, next) => {\n    let token;\n\n    if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer \")) {\n      token = req.headers.authorization.split(\"Bearer \")[1];\n    } else {\n      return res.status(403).json({\n        message: \"Token not found, access denied\"\n      });\n    } // verify token and account\n\n\n    try {\n      const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n      const user = await User.query().where({\n        id: decodedToken.id\n      }).first();\n\n      if (!user || roles.length && !roles.includes(decodedToken.role)) {\n        // account does not exist or role not authorized\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      } // authentication and authorization successful\n\n\n      req.user = decodedToken;\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nfunction isOwner() {\n  return async (req, res, next) => {\n    try {\n      const bool = await Company.query().where({\n        owner_id: req.user.id,\n        company_id: req.params.company_id\n      }).first();\n\n      if (!bool) {\n        return res.status(401).json({\n          message: \"Unauthorized\"\n        });\n      }\n\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJDb21wYW55IiwibW9kdWxlIiwiZXhwb3J0cyIsImF1dGgiLCJpc093bmVyIiwicm9sZXMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInN0YXJ0c1dpdGgiLCJzcGxpdCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZGVjb2RlZFRva2VuIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJ1c2VyIiwicXVlcnkiLCJ3aGVyZSIsImlkIiwiZmlyc3QiLCJsZW5ndGgiLCJpbmNsdWRlcyIsInJvbGUiLCJlcnJvciIsImJvb2wiLCJvd25lcl9pZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsOEJBQUQsQ0FBdkI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQURhO0FBRWJDLEVBQUFBO0FBRmEsQ0FBakI7O0FBS0EsU0FBU0QsSUFBVCxDQUFjRSxLQUFLLEdBQUcsRUFBdEIsRUFBMEI7QUFDdEIsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzNCQSxJQUFBQSxLQUFLLEdBQUcsQ0FBQ0EsS0FBRCxDQUFSO0FBQ0g7O0FBRUQsU0FBTyxPQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUlDLEtBQUo7O0FBQ0EsUUFDSUgsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosSUFDQUwsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLFVBQTFCLENBQXFDLFNBQXJDLENBRkosRUFHRTtBQUNFSCxNQUFBQSxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxhQUFaLENBQTBCRSxLQUExQixDQUFnQyxTQUFoQyxFQUEyQyxDQUEzQyxDQUFSO0FBQ0gsS0FMRCxNQUtPO0FBQ0gsYUFBT04sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLFFBQUFBLE9BQU8sRUFBRTtBQURlLE9BQXJCLENBQVA7QUFHSCxLQVg0QixDQWE3Qjs7O0FBQ0EsUUFBSTtBQUNBLFlBQU1DLFlBQVksR0FBR3BCLEdBQUcsQ0FBQ3FCLE1BQUosQ0FBV1QsS0FBWCxFQUFrQlUsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLENBQXJCO0FBRUEsWUFBTUMsSUFBSSxHQUFHLE1BQU12QixJQUFJLENBQUN3QixLQUFMLEdBQ2RDLEtBRGMsQ0FDUjtBQUFFQyxRQUFBQSxFQUFFLEVBQUVSLFlBQVksQ0FBQ1E7QUFBbkIsT0FEUSxFQUVkQyxLQUZjLEVBQW5COztBQUlBLFVBQUksQ0FBQ0osSUFBRCxJQUFVakIsS0FBSyxDQUFDc0IsTUFBTixJQUFnQixDQUFDdEIsS0FBSyxDQUFDdUIsUUFBTixDQUFlWCxZQUFZLENBQUNZLElBQTVCLENBQS9CLEVBQW1FO0FBQy9EO0FBQ0EsZUFBT3RCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSCxPQVZELENBWUE7OztBQUNBVixNQUFBQSxHQUFHLENBQUNnQixJQUFKLEdBQVdMLFlBQVg7QUFDQVQsTUFBQUEsSUFBSTtBQUNQLEtBZkQsQ0FlRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaENEO0FBaUNIOztBQUVELFNBQVMxQixPQUFULEdBQW1CO0FBQ2YsU0FBTyxPQUFPRSxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCLEtBQTBCO0FBQzdCLFFBQUk7QUFDQSxZQUFNdUIsSUFBSSxHQUFHLE1BQU0vQixPQUFPLENBQUN1QixLQUFSLEdBQ2RDLEtBRGMsQ0FDUjtBQUNIUSxRQUFBQSxRQUFRLEVBQUUxQixHQUFHLENBQUNnQixJQUFKLENBQVNHLEVBRGhCO0FBRUhRLFFBQUFBLFVBQVUsRUFBRTNCLEdBQUcsQ0FBQzRCLE1BQUosQ0FBV0Q7QUFGcEIsT0FEUSxFQUtkUCxLQUxjLEVBQW5COztBQU9BLFVBQUksQ0FBQ0ssSUFBTCxFQUFXO0FBQ1AsZUFBT3hCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYLFNBQXJCLENBQVA7QUFDSDs7QUFDRFIsTUFBQUEsSUFBSTtBQUNQLEtBWkQsQ0FZRSxPQUFPc0IsS0FBUCxFQUFjO0FBQ1p0QixNQUFBQSxJQUFJLENBQUNzQixLQUFELENBQUo7QUFDSDtBQUNKLEdBaEJEO0FBaUJIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKFwiLi4vYXBpL3VzZXIvdXNlci5tb2RlbFwiKTtcbmNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vYXBpL2NvbXBhbnkvY29tcGFueS5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYXV0aCxcbiAgICBpc093bmVyLFxufTtcblxuZnVuY3Rpb24gYXV0aChyb2xlcyA9IFtdKSB7XG4gICAgaWYgKHR5cGVvZiByb2xlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByb2xlcyA9IFtyb2xlc107XG4gICAgfVxuXG4gICAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICBsZXQgdG9rZW47XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24gJiZcbiAgICAgICAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3RhcnRzV2l0aChcIkJlYXJlciBcIilcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoXCJCZWFyZXIgXCIpWzFdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlRva2VuIG5vdCBmb3VuZCwgYWNjZXNzIGRlbmllZFwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB2ZXJpZnkgdG9rZW4gYW5kIGFjY291bnRcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xuXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5xdWVyeSgpXG4gICAgICAgICAgICAgICAgLndoZXJlKHsgaWQ6IGRlY29kZWRUb2tlbi5pZCB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIXVzZXIgfHwgKHJvbGVzLmxlbmd0aCAmJiAhcm9sZXMuaW5jbHVkZXMoZGVjb2RlZFRva2VuLnJvbGUpKSkge1xuICAgICAgICAgICAgICAgIC8vIGFjY291bnQgZG9lcyBub3QgZXhpc3Qgb3Igcm9sZSBub3QgYXV0aG9yaXplZFxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdXRob3JpemVkXCIgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGF1dGhlbnRpY2F0aW9uIGFuZCBhdXRob3JpemF0aW9uIHN1Y2Nlc3NmdWxcbiAgICAgICAgICAgIHJlcS51c2VyID0gZGVjb2RlZFRva2VuO1xuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBpc093bmVyKCkge1xuICAgIHJldHVybiBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGJvb2wgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KClcbiAgICAgICAgICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgICAgICAgICBvd25lcl9pZDogcmVxLnVzZXIuaWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5maXJzdCgpO1xuXG4gICAgICAgICAgICBpZiAoIWJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuIl19",
            "originalCode": "const jwt = require(\"jsonwebtoken\");\nconst User = require(\"../api/user/user.model\");\nconst Company = require(\"../api/company/company.model\");\n\nmodule.exports = {\n    auth,\n    isOwner,\n};\n\nfunction auth(roles = []) {\n    if (typeof roles === \"string\") {\n        roles = [roles];\n    }\n\n    return async (req, res, next) => {\n        let token;\n        if (\n            req.headers.authorization &&\n            req.headers.authorization.startsWith(\"Bearer \")\n        ) {\n            token = req.headers.authorization.split(\"Bearer \")[1];\n        } else {\n            return res.status(403).json({\n                message: \"Token not found, access denied\",\n            });\n        }\n\n        // verify token and account\n        try {\n            const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\n\n            const user = await User.query()\n                .where({ id: decodedToken.id })\n                .first();\n\n            if (!user || (roles.length && !roles.includes(decodedToken.role))) {\n                // account does not exist or role not authorized\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            // authentication and authorization successful\n            req.user = decodedToken;\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n\nfunction isOwner() {\n    return async (req, res, next) => {\n        try {\n            const bool = await Company.query()\n                .where({\n                    owner_id: req.user.id,\n                    company_id: req.params.company_id,\n                })\n                .first();\n\n            if (!bool) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            next();\n        } catch (error) {\n            next(error);\n        }\n    };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c1/auth_c11b599cb8ed1c90504edcca0550628f.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2940",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/auth.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7297,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7294,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "auth",
                "ranges": [
                  {
                    "startOffset": 275,
                    "endOffset": 1253,
                    "count": 28
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 1250,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 1255,
                    "endOffset": 1643,
                    "count": 3
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 1285,
                    "endOffset": 1640,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../constants/tableNames\");\n\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n  static get tableName() {\n    return tableNames.company;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const User = require(\"../user/user.model\");\n\n    const Account = require(\"./accounts/accounts.model\");\n\n    const Menu = require(\"./menu/menu.model\");\n\n    return {\n      owner: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.company}.owner_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      accounts: {\n        relation: Model.HasManyRelation,\n        modelClass: Account,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.accounts}.company_id`\n        }\n      },\n      menus: {\n        relation: Model.HasManyRelation,\n        modelClass: Menu,\n        join: {\n          from: `${tableNames.company}.id`,\n          to: `${tableNames.menu}.company_id`\n        }\n      }\n    };\n  }\n\n}\n\nmodule.exports = Company;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsInNjaGVtYSIsIkNvbXBhbnkiLCJ0YWJsZU5hbWUiLCJjb21wYW55IiwianNvblNjaGVtYSIsInJlbGF0aW9uTWFwcGluZ3MiLCJVc2VyIiwiQWNjb3VudCIsIk1lbnUiLCJvd25lciIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsInVzZXIiLCJhY2NvdW50cyIsIkhhc01hbnlSZWxhdGlvbiIsIm1lbnVzIiwibWVudSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyw0QkFBRCxDQUExQjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxNQUFNRyxPQUFOLFNBQXNCSixLQUF0QixDQUE0QjtBQUN4QixhQUFXSyxTQUFYLEdBQXVCO0FBQ25CLFdBQU9ILFVBQVUsQ0FBQ0ksT0FBbEI7QUFDSDs7QUFFRCxhQUFXQyxVQUFYLEdBQXdCO0FBQ3BCLFdBQU9KLE1BQVA7QUFDSDs7QUFFRCxhQUFXSyxnQkFBWCxHQUE4QjtBQUMxQjtBQUNBLFVBQU1DLElBQUksR0FBR1IsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLFVBQU1TLE9BQU8sR0FBR1QsT0FBTyxDQUFDLDJCQUFELENBQXZCOztBQUNBLFVBQU1VLElBQUksR0FBR1YsT0FBTyxDQUFDLG1CQUFELENBQXBCOztBQUVBLFdBQU87QUFDSFcsTUFBQUEsS0FBSyxFQUFFO0FBQ0hDLFFBQUFBLFFBQVEsRUFBRWIsS0FBSyxDQUFDYyxvQkFEYjtBQUVIQyxRQUFBQSxVQUFVLEVBQUVOLElBRlQ7QUFHSE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZixVQUFVLENBQUNJLE9BQVEsV0FEMUI7QUFFRlksVUFBQUEsRUFBRSxFQUFHLEdBQUVoQixVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEgsT0FESjtBQVNIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURWO0FBRU5OLFFBQUFBLFVBQVUsRUFBRUwsT0FGTjtBQUdOTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ2tCLFFBQVM7QUFGekI7QUFIQSxPQVRQO0FBaUJIRSxNQUFBQSxLQUFLLEVBQUU7QUFDSFQsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNxQixlQURiO0FBRUhOLFFBQUFBLFVBQVUsRUFBRUosSUFGVDtBQUdISyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ0ksT0FBUSxLQUQxQjtBQUVGWSxVQUFBQSxFQUFFLEVBQUcsR0FBRWhCLFVBQVUsQ0FBQ3FCLElBQUs7QUFGckI7QUFISDtBQWpCSixLQUFQO0FBMEJIOztBQXpDdUI7O0FBNEM1QkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckIsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2NvbXBhbnkuc2NoZW1hLmpzb25cIik7XG5cbmNsYXNzIENvbXBhbnkgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLmNvbXBhbnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgQWNjb3VudCA9IHJlcXVpcmUoXCIuL2FjY291bnRzL2FjY291bnRzLm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvd25lcjoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBVc2VyLFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5vd25lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFjY291bnRzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBBY2NvdW50LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmFjY291bnRzfS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1lbnVzOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkhhc01hbnlSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBNZW51LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLm1lbnV9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wYW55O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../constants/tableNames\");\nconst schema = require(\"./company.schema.json\");\n\nclass Company extends Model {\n    static get tableName() {\n        return tableNames.company;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const User = require(\"../user/user.model\");\n        const Account = require(\"./accounts/accounts.model\");\n        const Menu = require(\"./menu/menu.model\");\n\n        return {\n            owner: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.company}.owner_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            accounts: {\n                relation: Model.HasManyRelation,\n                modelClass: Account,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.accounts}.company_id`,\n                },\n            },\n            menus: {\n                relation: Model.HasManyRelation,\n                modelClass: Menu,\n                join: {\n                    from: `${tableNames.company}.id`,\n                    to: `${tableNames.menu}.company_id`,\n                },\n            },\n        };\n    }\n}\n\nmodule.exports = Company;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8b/companymodel_8b713279ce3af8b604431fcbf24964b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2941",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5514,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5511,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Company",
                "ranges": [
                  {
                    "startOffset": 241,
                    "endOffset": 241,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 280,
                    "endOffset": 332,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 343,
                    "endOffset": 384,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 395,
                    "endOffset": 1298,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = {\n  admin: \"admin\",\n  owner: \"owner\",\n  customer: \"customer\",\n  staff: \"staff\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFkbWluIiwib3duZXIiLCJjdXN0b21lciIsInN0YWZmIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLEtBQUssRUFBRSxPQURNO0FBRWJDLEVBQUFBLEtBQUssRUFBRSxPQUZNO0FBR2JDLEVBQUFBLFFBQVEsRUFBRSxVQUhHO0FBSWJDLEVBQUFBLEtBQUssRUFBRTtBQUpNLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYWRtaW46IFwiYWRtaW5cIixcbiAgICBvd25lcjogXCJvd25lclwiLFxuICAgIGN1c3RvbWVyOiBcImN1c3RvbWVyXCIsXG4gICAgc3RhZmY6IFwic3RhZmZcIixcbn07XG4iXX0=",
            "originalCode": "module.exports = {\n    admin: \"admin\",\n    owner: \"owner\",\n    customer: \"customer\",\n    staff: \"staff\",\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/c3/role_c386996d0c7428ed82a7fa0a3ec37236.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2942",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/role.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 789,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 786,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./company.validators\");\n\nconst companyService = require(\"./company.service\");\n\nconst {\n  auth: Auth\n} = require(\"../../_middlewares/auth\");\n\nconst Role = require(\"../../utils/role\");\n\nconst {\n  scopedItems\n} = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\n\nconst Menu = require(\"./menu/menu.routes\");\n\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/1/accounts\n\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.owner_id = req.user.id;\n  companyService.create(req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n  companyService.getAllCompanies().then(companies => {\n    res.json(scopedItems(req.user, companies));\n  }).catch(next);\n}\n\nfunction getMyCompanies(req, res, next) {\n  companyService.getMyCompanies(req.user.id).then(companies => companies ? res.json(companies) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyById(req, res, next) {\n  // owner can get his company and the admin can get any company\n  companyService.getCompanyById(req.params.id).then(company => {\n    if (company.owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    res.json(company);\n  }).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company\n  companyService.updateCompany({\n    id: req.params.id,\n    owner_id: req.user.id\n  }, req.body).then(company => res.json(company)).catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n  // only owner delete can delete their company\n  companyService._delete({\n    id: parseInt(req.params.id),\n    owner_id: req.user.id\n  }).then(() => {\n    res.json({\n      id: parseInt(req.params.id)\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./company.validators\");\nconst companyService = require(\"./company.service\");\nconst { auth: Auth } = require(\"../../_middlewares/auth\");\nconst Role = require(\"../../utils/role\");\nconst { scopedItems } = require(\"../../utils/permissions\");\n\nconst Account = require(\"./accounts/accounts.routes\");\nconst Menu = require(\"./menu/menu.routes\");\nconst Order = require(\"./order/order.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/1/accounts\nrouter.use(\"/:company_id/accounts\", Account);\nrouter.use(\"/:company_id/menu\", Menu);\nrouter.use(\"/:company_id/order\", Order);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.get(\"/\", Auth([Role.admin]), getAllCompanies);\nrouter.get(\"/mine\", Auth([Role.owner]), getMyCompanies);\nrouter.get(\"/:id\", Auth([Role.admin, Role.owner]), getCompanyById);\nrouter.delete(\"/:id\", Auth([Role.admin, Role.owner]), _deleteCompany);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.owner_id = req.user.id;\n    companyService\n        .create(req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction getAllCompanies(req, res, next) {\n    companyService\n        .getAllCompanies()\n        .then((companies) => {\n            res.json(scopedItems(req.user, companies));\n        })\n        .catch(next);\n}\nfunction getMyCompanies(req, res, next) {\n    companyService\n        .getMyCompanies(req.user.id)\n        .then((companies) =>\n            companies ? res.json(companies) : res.sendStatus(404)\n        )\n        .catch(next);\n}\nfunction getCompanyById(req, res, next) {\n    // owner can get his company and the admin can get any company\n    companyService\n        .getCompanyById(req.params.id)\n        .then((company) => {\n            if (\n                company.owner_id !== req.user.id &&\n                req.user.role !== Role.admin\n            ) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n\n            res.json(company);\n        })\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company\n    companyService\n        .updateCompany({ id: req.params.id, owner_id: req.user.id }, req.body)\n        .then((company) => res.json(company))\n        .catch(next);\n}\n\nfunction _deleteCompany(req, res, next) {\n    // only owner delete can delete their company\n    companyService\n        ._delete({ id: parseInt(req.params.id), owner_id: req.user.id })\n        .then(() => {\n            res.json({ id: parseInt(req.params.id) });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2a/companyroutes_2accae81b914ebc49b8ad824faf130cd.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2943",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 11663,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 11660,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 1186,
                    "endOffset": 1338,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1340,
                    "endOffset": 1505,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1507,
                    "endOffset": 1681,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1683,
                    "endOffset": 2058,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 2060,
                    "endOffset": 2281,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteCompany",
                "ranges": [
                  {
                    "startOffset": 2283,
                    "endOffset": 2553,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    logo_url: Joi.string(),\n    website_url: Joi.string(),\n    email: Joi.string().email().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    email: Joi.string().email().empty(\"\"),\n    owner: Joi.number().empty(\"\"),\n    logo_url: Joi.string().empty(\"\"),\n    website_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkudmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJkZXNjcmlwdGlvbiIsImxvZ29fdXJsIiwid2Vic2l0ZV91cmwiLCJlbWFpbCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiLCJvd25lciIsIm51bWJlciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyxvQ0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsUUFBUSxFQUFFZCxHQUFHLENBQUNXLE1BQUosRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosRUFKUztBQUt0QkssSUFBQUEsS0FBSyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFLLEtBQWIsR0FBcUJKLFFBQXJCO0FBTGUsR0FBWCxDQUFmO0FBT0FWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQ7O0FBV0FMLE9BQU8sQ0FBQ2MsWUFBUixHQUF1QixDQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNVyxXQUFXLEdBQUc7QUFDaEJSLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQk4sSUFBQUEsV0FBVyxFQUFFYixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQixDQUZHO0FBR2hCSCxJQUFBQSxLQUFLLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYUssS0FBYixHQUFxQkcsS0FBckIsQ0FBMkIsRUFBM0IsQ0FIUztBQUloQkMsSUFBQUEsS0FBSyxFQUFFcEIsR0FBRyxDQUFDcUIsTUFBSixHQUFhRixLQUFiLENBQW1CLEVBQW5CLENBSlM7QUFLaEJMLElBQUFBLFFBQVEsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFRLEtBQWIsQ0FBbUIsRUFBbkIsQ0FMTTtBQU1oQkosSUFBQUEsV0FBVyxFQUFFZixHQUFHLENBQUNXLE1BQUosR0FBYVEsS0FBYixDQUFtQixFQUFuQjtBQU5HLEdBQXBCO0FBU0EsUUFBTVgsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV1MsV0FBWCxDQUFmO0FBRUFoQixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQWJEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBsb2dvX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICB3ZWJzaXRlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIG93bmVyOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIGxvZ29fdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgICAgIHdlYnNpdGVfdXJsOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        logo_url: Joi.string(),\n        website_url: Joi.string(),\n        email: Joi.string().email().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        email: Joi.string().email().empty(\"\"),\n        owner: Joi.number().empty(\"\"),\n        logo_url: Joi.string().empty(\"\"),\n        website_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/3c/companyvalidators_3ce01f397e22205413767a4933ebdfd8.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2944",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4153,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4150,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 213,
                    "endOffset": 489,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 515,
                    "endOffset": 878,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Company = require(\"../company/company.model\");\n\nconst error = require(\"../../utils/error\");\n\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n  create,\n  updateCompany,\n  getAllCompanies,\n  getMyCompanies,\n  getCompanyById,\n  _delete\n};\n\nasync function create(params) {\n  // validate if company name exists\n  if (await getCompany({\n    name: params.name\n  })) {\n    error('Name \"' + params.name + '\" is already registered');\n  }\n\n  const company = await Company.query().insert(params);\n  return company;\n}\n\nasync function updateCompany(queryParams, params) {\n  const company = await getCompany({ ...queryParams\n  });\n\n  if (!company) {\n    error(\"Unauthorized\");\n  } // validate if name was changed\n\n\n  if (params.name && company.name !== params.name && (await getCompany({\n    name: params.name\n  }))) {\n    error(`Name ${params.name} is already taken`);\n  }\n\n  const updatedCompany = await Company.query().patchAndFetchById(queryParams.id, { ...params\n  });\n  return updatedCompany;\n}\n\nasync function getAllCompanies() {\n  const companies = await Company.query();\n  return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n  const companies = await Company.query().where({\n    owner_id: ownerId\n  });\n  return companies;\n}\n\nasync function getCompanyById(id) {\n  const company = await getCompany({\n    id\n  });\n  return company;\n}\n\nasync function _delete(queryParams) {\n  const tobeDeleted = await getCompany(queryParams);\n\n  if (tobeDeleted) {\n    return await Company.query().delete().where({ ...queryParams\n    });\n  }\n\n  return error(\"Forbidden\");\n} // async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCompany(param) {\n  const company = await Company.query().where({ ...param\n  }).first();\n  return company;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJDb21wYW55IiwicmVxdWlyZSIsImVycm9yIiwiY3JlYXRlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlIiwidXBkYXRlQ29tcGFueSIsImdldEFsbENvbXBhbmllcyIsImdldE15Q29tcGFuaWVzIiwiZ2V0Q29tcGFueUJ5SWQiLCJfZGVsZXRlIiwicGFyYW1zIiwiZ2V0Q29tcGFueSIsIm5hbWUiLCJjb21wYW55IiwicXVlcnkiLCJpbnNlcnQiLCJxdWVyeVBhcmFtcyIsInVwZGF0ZWRDb21wYW55IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJpZCIsImNvbXBhbmllcyIsIm93bmVySWQiLCJ3aGVyZSIsIm93bmVyX2lkIiwidG9iZURlbGV0ZWQiLCJkZWxldGUiLCJwYXJhbSIsImZpcnN0Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQywwQkFBRCxDQUF2Qjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUFyQjs7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsTUFEYTtBQUViQyxFQUFBQSxhQUZhO0FBR2JDLEVBQUFBLGVBSGE7QUFJYkMsRUFBQUEsY0FKYTtBQUtiQyxFQUFBQSxjQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsTUFBZixDQUFzQk0sTUFBdEIsRUFBOEI7QUFDMUI7QUFDQSxNQUFJLE1BQU1DLFVBQVUsQ0FBQztBQUFFQyxJQUFBQSxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0U7QUFBZixHQUFELENBQXBCLEVBQTZDO0FBQ3pDWixJQUFBQSxLQUFLLENBQUMsV0FBV1UsTUFBTSxDQUFDRSxJQUFsQixHQUF5Qix5QkFBMUIsQ0FBTDtBQUNIOztBQUVELFFBQU1DLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQWdCQyxNQUFoQixDQUF1QkwsTUFBdkIsQ0FBdEI7QUFDQSxTQUFPRyxPQUFQO0FBQ0g7O0FBRUQsZUFBZVIsYUFBZixDQUE2QlcsV0FBN0IsRUFBMENOLE1BQTFDLEVBQWtEO0FBQzlDLFFBQU1HLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUMsRUFBRSxHQUFHSztBQUFMLEdBQUQsQ0FBaEM7O0FBRUEsTUFBSSxDQUFDSCxPQUFMLEVBQWM7QUFDVmIsSUFBQUEsS0FBSyxDQUFDLGNBQUQsQ0FBTDtBQUNILEdBTDZDLENBTzlDOzs7QUFDQSxNQUNJVSxNQUFNLENBQUNFLElBQVAsSUFDQUMsT0FBTyxDQUFDRCxJQUFSLEtBQWlCRixNQUFNLENBQUNFLElBRHhCLEtBRUMsTUFBTUQsVUFBVSxDQUFDO0FBQUVDLElBQUFBLElBQUksRUFBRUYsTUFBTSxDQUFDRTtBQUFmLEdBQUQsQ0FGakIsQ0FESixFQUlFO0FBQ0VaLElBQUFBLEtBQUssQ0FBRSxRQUFPVSxNQUFNLENBQUNFLElBQUssbUJBQXJCLENBQUw7QUFDSDs7QUFFRCxRQUFNSyxjQUFjLEdBQUcsTUFBTW5CLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JJLGlCQUFoQixDQUN6QkYsV0FBVyxDQUFDRyxFQURhLEVBRXpCLEVBQ0ksR0FBR1Q7QUFEUCxHQUZ5QixDQUE3QjtBQU9BLFNBQU9PLGNBQVA7QUFDSDs7QUFFRCxlQUFlWCxlQUFmLEdBQWlDO0FBQzdCLFFBQU1jLFNBQVMsR0FBRyxNQUFNdEIsT0FBTyxDQUFDZ0IsS0FBUixFQUF4QjtBQUNBLFNBQU9NLFNBQVA7QUFDSDs7QUFFRCxlQUFlYixjQUFmLENBQThCYyxPQUE5QixFQUF1QztBQUNuQyxRQUFNRCxTQUFTLEdBQUcsTUFBTXRCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FBZ0JRLEtBQWhCLENBQXNCO0FBQzFDQyxJQUFBQSxRQUFRLEVBQUVGO0FBRGdDLEdBQXRCLENBQXhCO0FBR0EsU0FBT0QsU0FBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsQ0FBOEJXLEVBQTlCLEVBQWtDO0FBQzlCLFFBQU1OLE9BQU8sR0FBRyxNQUFNRixVQUFVLENBQUM7QUFBRVEsSUFBQUE7QUFBRixHQUFELENBQWhDO0FBQ0EsU0FBT04sT0FBUDtBQUNIOztBQUVELGVBQWVKLE9BQWYsQ0FBdUJPLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU1RLFdBQVcsR0FBRyxNQUFNYixVQUFVLENBQUNLLFdBQUQsQ0FBcEM7O0FBRUEsTUFBSVEsV0FBSixFQUFpQjtBQUNiLFdBQU8sTUFBTTFCLE9BQU8sQ0FBQ2dCLEtBQVIsR0FDUlcsTUFEUSxHQUVSSCxLQUZRLENBRUYsRUFBRSxHQUFHTjtBQUFMLEtBRkUsQ0FBYjtBQUdIOztBQUVELFNBQU9oQixLQUFLLENBQUMsV0FBRCxDQUFaO0FBQ0gsQyxDQUVEO0FBQ0E7QUFDQTtBQUVBO0FBRUE7OztBQUVBLGVBQWVXLFVBQWYsQ0FBMEJlLEtBQTFCLEVBQWlDO0FBQzdCLFFBQU1iLE9BQU8sR0FBRyxNQUFNZixPQUFPLENBQUNnQixLQUFSLEdBQ2pCUSxLQURpQixDQUNYLEVBQUUsR0FBR0k7QUFBTCxHQURXLEVBRWpCQyxLQUZpQixFQUF0QjtBQUdBLFNBQU9kLE9BQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vY29tcGFueS9jb21wYW55Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5jb25zdCBjcmVhdGVFcnJvciA9IHJlcXVpcmUoXCJodHRwLWVycm9yc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlLFxuICAgIHVwZGF0ZUNvbXBhbnksXG4gICAgZ2V0QWxsQ29tcGFuaWVzLFxuICAgIGdldE15Q29tcGFuaWVzLFxuICAgIGdldENvbXBhbnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGUocGFyYW1zKSB7XG4gICAgLy8gdmFsaWRhdGUgaWYgY29tcGFueSBuYW1lIGV4aXN0c1xuICAgIGlmIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpIHtcbiAgICAgICAgZXJyb3IoJ05hbWUgXCInICsgcGFyYW1zLm5hbWUgKyAnXCIgaXMgYWxyZWFkeSByZWdpc3RlcmVkJyk7XG4gICAgfVxuXG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5pbnNlcnQocGFyYW1zKTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlQ29tcGFueShxdWVyeVBhcmFtcywgcGFyYW1zKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyAuLi5xdWVyeVBhcmFtcyB9KTtcblxuICAgIGlmICghY29tcGFueSkge1xuICAgICAgICBlcnJvcihcIlVuYXV0aG9yaXplZFwiKTtcbiAgICB9XG5cbiAgICAvLyB2YWxpZGF0ZSBpZiBuYW1lIHdhcyBjaGFuZ2VkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjb21wYW55Lm5hbWUgIT09IHBhcmFtcy5uYW1lICYmXG4gICAgICAgIChhd2FpdCBnZXRDb21wYW55KHsgbmFtZTogcGFyYW1zLm5hbWUgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBOYW1lICR7cGFyYW1zLm5hbWV9IGlzIGFscmVhZHkgdGFrZW5gKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkQ29tcGFueSA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS5wYXRjaEFuZEZldGNoQnlJZChcbiAgICAgICAgcXVlcnlQYXJhbXMuaWQsXG4gICAgICAgIHtcbiAgICAgICAgICAgIC4uLnBhcmFtcyxcbiAgICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gdXBkYXRlZENvbXBhbnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbmllcygpIHtcbiAgICBjb25zdCBjb21wYW5pZXMgPSBhd2FpdCBDb21wYW55LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNvbXBhbmllcztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TXlDb21wYW5pZXMob3duZXJJZCkge1xuICAgIGNvbnN0IGNvbXBhbmllcyA9IGF3YWl0IENvbXBhbnkucXVlcnkoKS53aGVyZSh7XG4gICAgICAgIG93bmVyX2lkOiBvd25lcklkLFxuICAgIH0pO1xuICAgIHJldHVybiBjb21wYW5pZXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnlCeUlkKGlkKSB7XG4gICAgY29uc3QgY29tcGFueSA9IGF3YWl0IGdldENvbXBhbnkoeyBpZCB9KTtcbiAgICByZXR1cm4gY29tcGFueTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGNvbnN0IHRvYmVEZWxldGVkID0gYXdhaXQgZ2V0Q29tcGFueShxdWVyeVBhcmFtcyk7XG5cbiAgICBpZiAodG9iZURlbGV0ZWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IENvbXBhbnkucXVlcnkoKVxuICAgICAgICAgICAgLmRlbGV0ZSgpXG4gICAgICAgICAgICAud2hlcmUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXJyb3IoXCJGb3JiaWRkZW5cIik7XG59XG5cbi8vIGFzeW5jIGZ1bmN0aW9uIF9zb2Z0RGVsZXRlKGlkKSB7XG4vL21hcmsgYXMgaW5hY3RpdmVcbi8vICBhd2FpdCBDb21wYW55LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbnkocGFyYW0pIHtcbiAgICBjb25zdCBjb21wYW55ID0gYXdhaXQgQ29tcGFueS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBjb21wYW55O1xufVxuIl19",
            "originalCode": "const Company = require(\"../company/company.model\");\nconst error = require(\"../../utils/error\");\nconst createError = require(\"http-errors\");\n\nmodule.exports = {\n    create,\n    updateCompany,\n    getAllCompanies,\n    getMyCompanies,\n    getCompanyById,\n    _delete,\n};\n\nasync function create(params) {\n    // validate if company name exists\n    if (await getCompany({ name: params.name })) {\n        error('Name \"' + params.name + '\" is already registered');\n    }\n\n    const company = await Company.query().insert(params);\n    return company;\n}\n\nasync function updateCompany(queryParams, params) {\n    const company = await getCompany({ ...queryParams });\n\n    if (!company) {\n        error(\"Unauthorized\");\n    }\n\n    // validate if name was changed\n    if (\n        params.name &&\n        company.name !== params.name &&\n        (await getCompany({ name: params.name }))\n    ) {\n        error(`Name ${params.name} is already taken`);\n    }\n\n    const updatedCompany = await Company.query().patchAndFetchById(\n        queryParams.id,\n        {\n            ...params,\n        }\n    );\n\n    return updatedCompany;\n}\n\nasync function getAllCompanies() {\n    const companies = await Company.query();\n    return companies;\n}\n\nasync function getMyCompanies(ownerId) {\n    const companies = await Company.query().where({\n        owner_id: ownerId,\n    });\n    return companies;\n}\n\nasync function getCompanyById(id) {\n    const company = await getCompany({ id });\n    return company;\n}\n\nasync function _delete(queryParams) {\n    const tobeDeleted = await getCompany(queryParams);\n\n    if (tobeDeleted) {\n        return await Company.query()\n            .delete()\n            .where({ ...queryParams });\n    }\n\n    return error(\"Forbidden\");\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await Company.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCompany(param) {\n    const company = await Company.query()\n        .where({ ...param })\n        .first();\n    return company;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/10/companyservice_103976749abb46712c9f5147304425bb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2945",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7967,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 7964,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 615,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateCompany",
                "ranges": [
                  {
                    "startOffset": 617,
                    "endOffset": 1096,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanies",
                "ranges": [
                  {
                    "startOffset": 1098,
                    "endOffset": 1197,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMyCompanies",
                "ranges": [
                  {
                    "startOffset": 1199,
                    "endOffset": 1339,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyById",
                "ranges": [
                  {
                    "startOffset": 1341,
                    "endOffset": 1446,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1448,
                    "endOffset": 1669,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompany",
                "ranges": [
                  {
                    "startOffset": 1808,
                    "endOffset": 1933,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "module.exports = message => {\n  const error = new Error(message);\n  throw error;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9yLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQkMsT0FBRCxJQUFhO0FBQzFCLFFBQU1DLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQVVGLE9BQVYsQ0FBZDtBQUNBLFFBQU1DLEtBQU47QUFDSCxDQUhEIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAobWVzc2FnZSkgPT4ge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIHRocm93IGVycm9yO1xufTtcbiJdfQ==",
            "originalCode": "module.exports = (message) => {\n    const error = new Error(message);\n    throw error;\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/fa/error_fa67f28dedb39797d87045fcac49c533.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2946",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/error.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 690,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 687,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.module.exports",
                "ranges": [
                  {
                    "startOffset": 106,
                    "endOffset": 171,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n  if (user.role == role.admin) return items;\n  return items.filter(item => item.owner_id == user.id);\n}\n\nmodule.exports = {\n  scopedItems\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcm1pc3Npb25zLmpzIl0sIm5hbWVzIjpbInJvbGUiLCJyZXF1aXJlIiwic2NvcGVkSXRlbXMiLCJ1c2VyIiwiaXRlbXMiLCJhZG1pbiIsImZpbHRlciIsIml0ZW0iLCJvd25lcl9pZCIsImlkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxTQUFTQyxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsS0FBM0IsRUFBa0M7QUFDOUIsTUFBSUQsSUFBSSxDQUFDSCxJQUFMLElBQWFBLElBQUksQ0FBQ0ssS0FBdEIsRUFBNkIsT0FBT0QsS0FBUDtBQUM3QixTQUFPQSxLQUFLLENBQUNFLE1BQU4sQ0FBY0MsSUFBRCxJQUFVQSxJQUFJLENBQUNDLFFBQUwsSUFBaUJMLElBQUksQ0FBQ00sRUFBN0MsQ0FBUDtBQUNIOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYlQsRUFBQUE7QUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvbGUgPSByZXF1aXJlKFwiLi9yb2xlXCIpO1xuXG5mdW5jdGlvbiBzY29wZWRJdGVtcyh1c2VyLCBpdGVtcykge1xuICAgIGlmICh1c2VyLnJvbGUgPT0gcm9sZS5hZG1pbikgcmV0dXJuIGl0ZW1zO1xuICAgIHJldHVybiBpdGVtcy5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0ub3duZXJfaWQgPT0gdXNlci5pZCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHNjb3BlZEl0ZW1zLFxufTtcbiJdfQ==",
            "originalCode": "const role = require(\"./role\");\n\nfunction scopedItems(user, items) {\n    if (user.role == role.admin) return items;\n    return items.filter((item) => item.owner_id == user.id);\n}\n\nmodule.exports = {\n    scopedItems,\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/08/permissions_089e905c4105820f9841c9d528f11f86.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2949",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/permissions.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1344,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1341,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "scopedItems",
                "ranges": [
                  {
                    "startOffset": 122,
                    "endOffset": 261,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Account = require(\"./accounts.model\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n  mergeParams: true\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n  try {\n    const {\n      owner_id\n    } = req.body;\n\n    if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n      return res.status(401).json({\n        message: \"Unathorized\"\n      });\n    }\n\n    const accounts = await Account.query().where({\n      company_id: req.params.company_id,\n      owner_id\n    });\n\n    if (!accounts) {\n      res.status(404);\n    }\n\n    res.json(accounts);\n  } catch (error) {\n    next(error);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJBY2NvdW50IiwicmVxdWlyZSIsIlJvbGUiLCJhdXRoIiwiQXV0aCIsInJvdXRlciIsIlJvdXRlciIsIm1lcmdlUGFyYW1zIiwiZ2V0IiwiYWRtaW4iLCJvd25lciIsImdldEFjY291bnRzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJvd25lcl9pZCIsImJvZHkiLCJ1c2VyIiwiaWQiLCJyb2xlIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJhY2NvdW50cyIsInF1ZXJ5Iiwid2hlcmUiLCJjb21wYW55X2lkIiwicGFyYW1zIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUUsRUFBQUEsSUFBSSxFQUFFQztBQUFSLElBQWlCSCxPQUFPLENBQUMsNEJBQUQsQ0FBOUI7O0FBRUEsTUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CSyxNQUFuQixDQUEwQjtBQUNyQ0MsRUFBQUEsV0FBVyxFQUFFO0FBRHdCLENBQTFCLENBQWY7O0FBSUFGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JKLElBQUksQ0FBQyxDQUFDRixJQUFJLENBQUNPLEtBQU4sRUFBYVAsSUFBSSxDQUFDUSxLQUFsQixDQUFELENBQXBCLEVBQWdEQyxXQUFoRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCOztBQUVBLGVBQWVNLFdBQWYsQ0FBMkJHLEdBQTNCLEVBQWdDQyxHQUFoQyxFQUFxQ0MsSUFBckMsRUFBMkM7QUFDdkMsTUFBSTtBQUNBLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFlSCxHQUFHLENBQUNJLElBQXpCOztBQUVBLFFBQUlELFFBQVEsS0FBS0gsR0FBRyxDQUFDSyxJQUFKLENBQVNDLEVBQXRCLElBQTRCTixHQUFHLENBQUNLLElBQUosQ0FBU0UsSUFBVCxLQUFrQm5CLElBQUksQ0FBQ08sS0FBdkQsRUFBOEQ7QUFDMUQsYUFBT00sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUMsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBckIsQ0FBUDtBQUNIOztBQUVELFVBQU1DLFFBQVEsR0FBRyxNQUFNekIsT0FBTyxDQUFDMEIsS0FBUixHQUFnQkMsS0FBaEIsQ0FBc0I7QUFDekNDLE1BQUFBLFVBQVUsRUFBRWQsR0FBRyxDQUFDZSxNQUFKLENBQVdELFVBRGtCO0FBRXpDWCxNQUFBQTtBQUZ5QyxLQUF0QixDQUF2Qjs7QUFLQSxRQUFJLENBQUNRLFFBQUwsRUFBZTtBQUNYVixNQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYO0FBQ0g7O0FBRURQLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRSxRQUFUO0FBQ0gsR0FqQkQsQ0FpQkUsT0FBT0ssS0FBUCxFQUFjO0FBQ1pkLElBQUFBLElBQUksQ0FBQ2MsS0FBRCxDQUFKO0FBQ0g7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFjY291bnQgPSByZXF1aXJlKFwiLi9hY2NvdW50cy5tb2RlbFwiKTtcbmNvbnN0IFJvbGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvcm9sZVwiKTtcbmNvbnN0IHsgYXV0aDogQXV0aCB9ID0gcmVxdWlyZShcIi4uLy4uLy4uL19taWRkbGV3YXJlcy9hdXRoXCIpO1xuXG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKFwiZXhwcmVzc1wiKS5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5nZXQoXCIvXCIsIEF1dGgoW1JvbGUuYWRtaW4sIFJvbGUub3duZXJdKSwgZ2V0QWNjb3VudHMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWNjb3VudHMocmVxLCByZXMsIG5leHQpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB7IG93bmVyX2lkIH0gPSByZXEuYm9keTtcblxuICAgICAgICBpZiAob3duZXJfaWQgIT09IHJlcS51c2VyLmlkICYmIHJlcS51c2VyLnJvbGUgIT09IFJvbGUuYWRtaW4pIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdGhvcml6ZWRcIiB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgQWNjb3VudC5xdWVyeSgpLndoZXJlKHtcbiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHJlcS5wYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgICAgIG93bmVyX2lkLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIWFjY291bnRzKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXMuanNvbihhY2NvdW50cyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgbmV4dChlcnJvcik7XG4gICAgfVxufVxuIl19",
            "originalCode": "const Account = require(\"./accounts.model\");\nconst Role = require(\"../../../utils/role\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\n\nconst router = require(\"express\").Router({\n    mergeParams: true,\n});\n\nrouter.get(\"/\", Auth([Role.admin, Role.owner]), getAccounts);\n\nmodule.exports = router;\n\nasync function getAccounts(req, res, next) {\n    try {\n        const { owner_id } = req.body;\n\n        if (owner_id !== req.user.id && req.user.role !== Role.admin) {\n            return res.status(401).json({ message: \"Unathorized\" });\n        }\n\n        const accounts = await Account.query().where({\n            company_id: req.params.company_id,\n            owner_id,\n        });\n\n        if (!accounts) {\n            res.status(404);\n        }\n\n        res.json(accounts);\n    } catch (error) {\n        next(error);\n    }\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/9b/accountsroutes_9b5521c435078c2c6c307235bad04141.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2950",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4064,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4061,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAccounts",
                "ranges": [
                  {
                    "startOffset": 402,
                    "endOffset": 886,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n  static get tableName() {\n    return tableNames.accounts;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n}\n\nmodule.exports = Account;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJzY2hlbWEiLCJBY2NvdW50IiwidGFibGVOYW1lIiwiYWNjb3VudHMiLCJqc29uU2NoZW1hIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUVBLE1BQU1HLE9BQU4sU0FBc0JKLEtBQXRCLENBQTRCO0FBQ3hCLGFBQVdLLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0gsVUFBVSxDQUFDSSxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0osTUFBUDtBQUNIOztBQVB1Qjs7QUFVNUJLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKFwib2JqZWN0aW9uXCIpO1xuY29uc3QgdGFibGVOYW1lcyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb25zdGFudHMvdGFibGVOYW1lc1wiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL2FjY291bnRzLnNjaGVtYS5qc29uXCIpO1xuXG5jbGFzcyBBY2NvdW50IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5hY2NvdW50cztcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IGpzb25TY2hlbWEoKSB7XG4gICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFjY291bnQ7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst schema = require(\"./accounts.schema.json\");\n\nclass Account extends Model {\n    static get tableName() {\n        return tableNames.accounts;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n}\n\nmodule.exports = Account;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/01/accountsmodel_01a1ad309c7db6ca01e6d4ebe4774684.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2951",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1669,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 1666,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Account",
                "ranges": [
                  {
                    "startOffset": 245,
                    "endOffset": 245,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 284,
                    "endOffset": 337,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 348,
                    "endOffset": 389,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./menu.validator\");\n\nconst Company = require(\"../company.model\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\n\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company/company_id/menu_id/category\n\nrouter.use(\"/:menu_id/category\", Category);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  req.body.company_id = req.params.company_id;\n  menuService.createMenu(req.body).then(menu => res.json(menu)).catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  menuService.getAllCompanyMenus({\n    company_id\n  }).then(menus => menus ? res.json(menus) : res.sendStatus(404)).catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n  menuService.getMenuById(req.params.id).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService.updateMenu(req.params.id, req.body);\n  }).then(menu => menu ? res.json(menu) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n  // only owner delete can delete their company menu\n  Company.query().where({\n    owner: req.user.id\n  }).first().then(company => {\n    if (!company) {\n      res.status(401);\n      error(\"Unathorized\");\n    }\n\n    return menuService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUucm91dGVzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY3JlYXRlU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwiQ29tcGFueSIsImF1dGgiLCJBdXRoIiwiUm9sZSIsIkNhdGVnb3J5IiwibWVudVNlcnZpY2UiLCJlcnJvciIsInJvdXRlciIsIlJvdXRlciIsIm1lcmdlUGFyYW1zIiwidXNlIiwicG9zdCIsIm93bmVyIiwiY3JlYXRlIiwiZ2V0IiwiZ2V0QWxsQ29tcGFueU1lbnVzIiwiZ2V0TWVudUJ5SWQiLCJwYXRjaCIsInVwZGF0ZSIsImRlbGV0ZSIsIl9kZWxldGVNZW51IiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJib2R5IiwiY29tcGFueV9pZCIsInBhcmFtcyIsImNyZWF0ZU1lbnUiLCJ0aGVuIiwibWVudSIsImpzb24iLCJjYXRjaCIsIm1lbnVzIiwic2VuZFN0YXR1cyIsImlkIiwicXVlcnkiLCJ3aGVyZSIsInVzZXIiLCJmaXJzdCIsImNvbXBhbnkiLCJzdGF0dXMiLCJ1cGRhdGVNZW51IiwiX2RlbGV0ZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBO0FBQWhCLElBQWlDRixPQUFPLENBQUMsa0JBQUQsQ0FBOUM7O0FBQ0EsTUFBTUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFSSxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJMLE9BQU8sQ0FBQyw0QkFBRCxDQUE5Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxNQUFNTyxRQUFRLEdBQUdQLE9BQU8sQ0FBQyw0QkFBRCxDQUF4Qjs7QUFFQSxNQUFNUSxXQUFXLEdBQUdSLE9BQU8sQ0FBQyxnQkFBRCxDQUEzQjs7QUFDQSxNQUFNUyxLQUFLLEdBQUdULE9BQU8sQ0FBQyxzQkFBRCxDQUFyQjs7QUFFQSxNQUFNVSxNQUFNLEdBQUdYLE9BQU8sQ0FBQ1ksTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWYsQyxDQUlBOztBQUNBRixNQUFNLENBQUNHLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ04sUUFBakM7QUFFQUcsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQlQsSUFBSSxDQUFDLENBQUNDLElBQUksQ0FBQ1MsS0FBTixDQUFELENBQXJCLEVBQXFDZCxZQUFyQyxFQUFtRGUsTUFBbkQ7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsa0JBQWhCO0FBQ0FSLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLE1BQVgsRUFBbUJFLFdBQW5CO0FBQ0FULE1BQU0sQ0FBQ1UsS0FBUCxDQUFhLE1BQWIsRUFBcUJmLElBQUksQ0FBQyxDQUFDQyxJQUFJLENBQUNTLEtBQU4sQ0FBRCxDQUF6QixFQUF5Q2IsWUFBekMsRUFBdURtQixNQUF2RDtBQUNBWCxNQUFNLENBQUNZLE1BQVAsQ0FBYyxNQUFkLEVBQXNCakIsSUFBSSxDQUFDLENBQUNDLElBQUksQ0FBQ1MsS0FBTixDQUFELENBQTFCLEVBQTBDUSxXQUExQztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLE1BQWpCOztBQUVBLFNBQVNNLE1BQVQsQ0FBZ0JVLEdBQWhCLEVBQXFCQyxHQUFyQixFQUEwQkMsSUFBMUIsRUFBZ0M7QUFDNUJGLEVBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxVQUFULEdBQXNCSixHQUFHLENBQUNLLE1BQUosQ0FBV0QsVUFBakM7QUFDQXRCLEVBQUFBLFdBQVcsQ0FDTndCLFVBREwsQ0FDZ0JOLEdBQUcsQ0FBQ0csSUFEcEIsRUFFS0ksSUFGTCxDQUVXQyxJQUFELElBQVVQLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRCxJQUFULENBRnBCLEVBR0tFLEtBSEwsQ0FHV1IsSUFIWDtBQUlIOztBQUVELFNBQVNWLGtCQUFULENBQTRCUSxHQUE1QixFQUFpQ0MsR0FBakMsRUFBc0NDLElBQXRDLEVBQTRDO0FBQ3hDLFFBQU07QUFBRUUsSUFBQUE7QUFBRixNQUFpQkosR0FBRyxDQUFDSyxNQUEzQjtBQUVBdkIsRUFBQUEsV0FBVyxDQUNOVSxrQkFETCxDQUN3QjtBQUFFWSxJQUFBQTtBQUFGLEdBRHhCLEVBRUtHLElBRkwsQ0FFV0ksS0FBRCxJQUFZQSxLQUFLLEdBQUdWLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRSxLQUFULENBQUgsR0FBcUJWLEdBQUcsQ0FBQ1csVUFBSixDQUFlLEdBQWYsQ0FGaEQsRUFHS0YsS0FITCxDQUdXUixJQUhYO0FBSUg7O0FBRUQsU0FBU1QsV0FBVCxDQUFxQk8sR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQztBQUNqQ3BCLEVBQUFBLFdBQVcsQ0FDTlcsV0FETCxDQUNpQk8sR0FBRyxDQUFDSyxNQUFKLENBQVdRLEVBRDVCLEVBRUtOLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdQLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRCxJQUFULENBQUgsR0FBb0JQLEdBQUcsQ0FBQ1csVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0YsS0FITCxDQUdXUixJQUhYO0FBSUg7O0FBRUQsU0FBU1AsTUFBVCxDQUFnQkssR0FBaEIsRUFBcUJDLEdBQXJCLEVBQTBCQyxJQUExQixFQUFnQztBQUM1QjtBQUVBekIsRUFBQUEsT0FBTyxDQUFDcUMsS0FBUixHQUNLQyxLQURMLENBQ1c7QUFBRTFCLElBQUFBLEtBQUssRUFBRVcsR0FBRyxDQUFDZ0IsSUFBSixDQUFTSDtBQUFsQixHQURYLEVBRUtJLEtBRkwsR0FHS1YsSUFITCxDQUdXVyxPQUFELElBQWE7QUFDZixRQUFJLENBQUNBLE9BQUwsRUFBYztBQUNWakIsTUFBQUEsR0FBRyxDQUFDa0IsTUFBSixDQUFXLEdBQVg7QUFDQXBDLE1BQUFBLEtBQUssQ0FBQyxhQUFELENBQUw7QUFDSDs7QUFFRCxXQUFPRCxXQUFXLENBQUNzQyxVQUFaLENBQXVCcEIsR0FBRyxDQUFDSyxNQUFKLENBQVdRLEVBQWxDLEVBQXNDYixHQUFHLENBQUNHLElBQTFDLENBQVA7QUFDSCxHQVZMLEVBV0tJLElBWEwsQ0FXV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdQLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRCxJQUFULENBQUgsR0FBb0JQLEdBQUcsQ0FBQ1csVUFBSixDQUFlLEdBQWYsQ0FYN0MsRUFZS0YsS0FaTCxDQVlXUixJQVpYO0FBYUg7O0FBRUQsU0FBU0wsV0FBVCxDQUFxQkcsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQztBQUNqQztBQUVBekIsRUFBQUEsT0FBTyxDQUFDcUMsS0FBUixHQUNLQyxLQURMLENBQ1c7QUFBRTFCLElBQUFBLEtBQUssRUFBRVcsR0FBRyxDQUFDZ0IsSUFBSixDQUFTSDtBQUFsQixHQURYLEVBRUtJLEtBRkwsR0FHS1YsSUFITCxDQUdXVyxPQUFELElBQWE7QUFDZixRQUFJLENBQUNBLE9BQUwsRUFBYztBQUNWakIsTUFBQUEsR0FBRyxDQUFDa0IsTUFBSixDQUFXLEdBQVg7QUFDQXBDLE1BQUFBLEtBQUssQ0FBQyxhQUFELENBQUw7QUFDSDs7QUFFRCxXQUFPRCxXQUFXLENBQUN1QyxPQUFaLENBQW9CO0FBQ3ZCUixNQUFBQSxFQUFFLEVBQUViLEdBQUcsQ0FBQ0ssTUFBSixDQUFXUSxFQURRO0FBRXZCVCxNQUFBQSxVQUFVLEVBQUVKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXRDtBQUZBLEtBQXBCLENBQVA7QUFJSCxHQWJMLEVBY0tHLElBZEwsQ0FjVSxNQUFNO0FBQ1JOLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUVJLE1BQUFBLEVBQUUsRUFBRWIsR0FBRyxDQUFDSyxNQUFKLENBQVdRO0FBQWpCLEtBQVQ7QUFDSCxHQWhCTCxFQWlCS0gsS0FqQkwsQ0FpQldSLElBakJYO0FBa0JIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuXG5jb25zdCB7IGNyZWF0ZVNjaGVtYSwgdXBkYXRlU2NoZW1hIH0gPSByZXF1aXJlKFwiLi9tZW51LnZhbGlkYXRvclwiKTtcbmNvbnN0IENvbXBhbnkgPSByZXF1aXJlKFwiLi4vY29tcGFueS5tb2RlbFwiKTtcbmNvbnN0IHsgYXV0aDogQXV0aCB9ID0gcmVxdWlyZShcIi4uLy4uLy4uL19taWRkbGV3YXJlcy9hdXRoXCIpO1xuY29uc3QgUm9sZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9yb2xlXCIpO1xuY29uc3QgQ2F0ZWdvcnkgPSByZXF1aXJlKFwiLi9jYXRlZ29yeS9jYXRlZ29yeS5yb3V0ZXNcIik7XG5cbmNvbnN0IG1lbnVTZXJ2aWNlID0gcmVxdWlyZShcIi4vbWVudS5zZXJ2aWNlXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKHtcbiAgICBtZXJnZVBhcmFtczogdHJ1ZSxcbn0pO1xuXG4vLyBhcGkvdjEvY29tcGFueS9jb21wYW55X2lkL21lbnVfaWQvY2F0ZWdvcnlcbnJvdXRlci51c2UoXCIvOm1lbnVfaWQvY2F0ZWdvcnlcIiwgQ2F0ZWdvcnkpO1xuXG5yb3V0ZXIucG9zdChcIi9cIiwgQXV0aChbUm9sZS5vd25lcl0pLCBjcmVhdGVTY2hlbWEsIGNyZWF0ZSk7XG5yb3V0ZXIuZ2V0KFwiL1wiLCBnZXRBbGxDb21wYW55TWVudXMpO1xucm91dGVyLmdldChcIi86aWRcIiwgZ2V0TWVudUJ5SWQpO1xucm91dGVyLnBhdGNoKFwiLzppZFwiLCBBdXRoKFtSb2xlLm93bmVyXSksIHVwZGF0ZVNjaGVtYSwgdXBkYXRlKTtcbnJvdXRlci5kZWxldGUoXCIvOmlkXCIsIEF1dGgoW1JvbGUub3duZXJdKSwgX2RlbGV0ZU1lbnUpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcblxuZnVuY3Rpb24gY3JlYXRlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgcmVxLmJvZHkuY29tcGFueV9pZCA9IHJlcS5wYXJhbXMuY29tcGFueV9pZDtcbiAgICBtZW51U2VydmljZVxuICAgICAgICAuY3JlYXRlTWVudShyZXEuYm9keSlcbiAgICAgICAgLnRoZW4oKG1lbnUpID0+IHJlcy5qc29uKG1lbnUpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldEFsbENvbXBhbnlNZW51cyhyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHsgY29tcGFueV9pZCB9ID0gcmVxLnBhcmFtcztcblxuICAgIG1lbnVTZXJ2aWNlXG4gICAgICAgIC5nZXRBbGxDb21wYW55TWVudXMoeyBjb21wYW55X2lkIH0pXG4gICAgICAgIC50aGVuKChtZW51cykgPT4gKG1lbnVzID8gcmVzLmpzb24obWVudXMpIDogcmVzLnNlbmRTdGF0dXMoNDA0KSkpXG4gICAgICAgIC5jYXRjaChuZXh0KTtcbn1cblxuZnVuY3Rpb24gZ2V0TWVudUJ5SWQocmVxLCByZXMsIG5leHQpIHtcbiAgICBtZW51U2VydmljZVxuICAgICAgICAuZ2V0TWVudUJ5SWQocmVxLnBhcmFtcy5pZClcbiAgICAgICAgLnRoZW4oKG1lbnUpID0+IChtZW51ID8gcmVzLmpzb24obWVudSkgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGUocmVxLCByZXMsIG5leHQpIHtcbiAgICAvLyBvbmx5IG93bmVyIGNhbiB1cGRhdGUgdGhlaXIgY29tcGFueSBtZW51XG5cbiAgICBDb21wYW55LnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgb3duZXI6IHJlcS51c2VyLmlkIH0pXG4gICAgICAgIC5maXJzdCgpXG4gICAgICAgIC50aGVuKChjb21wYW55KSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNvbXBhbnkpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMSk7XG4gICAgICAgICAgICAgICAgZXJyb3IoXCJVbmF0aG9yaXplZFwiKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG1lbnVTZXJ2aWNlLnVwZGF0ZU1lbnUocmVxLnBhcmFtcy5pZCwgcmVxLmJvZHkpO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbigobWVudSkgPT4gKG1lbnUgPyByZXMuanNvbihtZW51KSA6IHJlcy5zZW5kU3RhdHVzKDQwNCkpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIF9kZWxldGVNZW51KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8gb25seSBvd25lciBkZWxldGUgY2FuIGRlbGV0ZSB0aGVpciBjb21wYW55IG1lbnVcblxuICAgIENvbXBhbnkucXVlcnkoKVxuICAgICAgICAud2hlcmUoeyBvd25lcjogcmVxLnVzZXIuaWQgfSlcbiAgICAgICAgLmZpcnN0KClcbiAgICAgICAgLnRoZW4oKGNvbXBhbnkpID0+IHtcbiAgICAgICAgICAgIGlmICghY29tcGFueSkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAxKTtcbiAgICAgICAgICAgICAgICBlcnJvcihcIlVuYXRob3JpemVkXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbWVudVNlcnZpY2UuX2RlbGV0ZSh7XG4gICAgICAgICAgICAgICAgaWQ6IHJlcS5wYXJhbXMuaWQsXG4gICAgICAgICAgICAgICAgY29tcGFueV9pZDogcmVxLnBhcmFtcy5jb21wYW55X2lkLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHJlcy5qc29uKHsgaWQ6IHJlcS5wYXJhbXMuaWQgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChuZXh0KTtcbn1cbiJdfQ==",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./menu.validator\");\nconst Company = require(\"../company.model\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst Category = require(\"./category/category.routes\");\n\nconst menuService = require(\"./menu.service\");\nconst error = require(\"../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company/company_id/menu_id/category\nrouter.use(\"/:menu_id/category\", Category);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyMenus);\nrouter.get(\"/:id\", getMenuById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteMenu);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    req.body.company_id = req.params.company_id;\n    menuService\n        .createMenu(req.body)\n        .then((menu) => res.json(menu))\n        .catch(next);\n}\n\nfunction getAllCompanyMenus(req, res, next) {\n    const { company_id } = req.params;\n\n    menuService\n        .getAllCompanyMenus({ company_id })\n        .then((menus) => (menus ? res.json(menus) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getMenuById(req, res, next) {\n    menuService\n        .getMenuById(req.params.id)\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService.updateMenu(req.params.id, req.body);\n        })\n        .then((menu) => (menu ? res.json(menu) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction _deleteMenu(req, res, next) {\n    // only owner delete can delete their company menu\n\n    Company.query()\n        .where({ owner: req.user.id })\n        .first()\n        .then((company) => {\n            if (!company) {\n                res.status(401);\n                error(\"Unathorized\");\n            }\n\n            return menuService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/13/menuroutes_138af69f63d31c1d809ea7f466e071eb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2952",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10631,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10628,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 932,
                    "endOffset": 1091,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 1093,
                    "endOffset": 1312,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1314,
                    "endOffset": 1466,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1468,
                    "endOffset": 1843,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteMenu",
                "ranges": [
                  {
                    "startOffset": 1845,
                    "endOffset": 2285,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    cover_url: Joi.string()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    cover_url: Joi.string().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUudmFsaWRhdG9yLmpzIl0sIm5hbWVzIjpbIkpvaSIsInJlcXVpcmUiLCJ2YWxpZGF0ZVJlcXVlc3QiLCJleHBvcnRzIiwiY3JlYXRlU2NoZW1hIiwicmVxIiwicmVzIiwibmV4dCIsInNjaGVtYSIsIm9iamVjdCIsIm5hbWUiLCJzdHJpbmciLCJyZXF1aXJlZCIsImRlc2NyaXB0aW9uIiwiY292ZXJfdXJsIiwidXBkYXRlU2NoZW1hIiwic2NoZW1hUnVsZXMiLCJlbXB0eSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxZQUFSLEdBQXVCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJDLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFEZ0I7QUFFdEJDLElBQUFBLFdBQVcsRUFBRWIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFGUztBQUd0QkUsSUFBQUEsU0FBUyxFQUFFZCxHQUFHLENBQUNXLE1BQUo7QUFIVyxHQUFYLENBQWY7QUFLQVQsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FQRDs7QUFTQUwsT0FBTyxDQUFDWSxZQUFSLEdBQXVCLENBQUNWLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDLFFBQU1TLFdBQVcsR0FBRztBQUNoQk4sSUFBQUEsSUFBSSxFQUFFVixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixDQUFtQixFQUFuQixDQURVO0FBRWhCSixJQUFBQSxXQUFXLEVBQUViLEdBQUcsQ0FBQ1csTUFBSixHQUFhTSxLQUFiLENBQW1CLEVBQW5CLENBRkc7QUFHaEJILElBQUFBLFNBQVMsRUFBRWQsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFwQjtBQU1BLFFBQU1ULE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdPLFdBQVgsQ0FBZjtBQUVBZCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVZEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSm9pID0gcmVxdWlyZShcImpvaVwiKTtcbmNvbnN0IHZhbGlkYXRlUmVxdWVzdCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9fbWlkZGxld2FyZXMvdmFsaWRhdGVSZXF1ZXN0XCIpO1xuXG5leHBvcnRzLmNyZWF0ZVNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBjb3Zlcl91cmw6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICB9O1xuXG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdChzY2hlbWFSdWxlcyk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        description: Joi.string().required(),\n        cover_url: Joi.string(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        cover_url: Joi.string().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0b/menuvalidator_0bff2254f7ebb231be87a9bba47a9cd7.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2953",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.validator.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3165,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 216,
                    "endOffset": 418,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 444,
                    "endOffset": 689,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./category.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../utils/role\");\n\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\n\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n  mergeParams: true\n}); // api/v1/company_id/menu_id/category/category_id/item\n\nrouter.use(\"/:category_id/item\", Item);\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  // check if owner of company\n  const payload = req.body;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.createcategory(payload);\n  }).then(category => res.json(category)).catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n  const {\n    company_id\n  } = req.params;\n  categoryService.getAllCompanyCategorys({\n    company_id\n  }).then(categories => categories ? res.json(categories) : res.sendStatus(404)).catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n  categoryService.getCategoryById(req.params.id).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction update(req, res, next) {\n  // only owner can update their company category\n  const payload = req.body;\n  payload.menu_id = req.params.menu_id;\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService.updateCategory(req.params.id, payload);\n  }).then(category => category ? res.json(category) : res.sendStatus(404)).catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n  // only owner delete can delete their company category\n  isOwner(req.user.id, req.params.company_id).then(owner => {\n    if (!owner) {\n      return res.status(401).json({\n        message: \"Unauthorized\"\n      });\n    }\n\n    return categoryService._delete({\n      id: req.params.id,\n      company_id: req.params.company_id\n    });\n  }).then(() => {\n    res.json({\n      id: req.params.id\n    });\n  }).catch(next);\n} // =========================================\n\n\nasync function isOwner(owner_id, company_id) {\n  const bool = await Company.query().where({\n    owner_id,\n    id: company_id\n  }).first();\n  return bool;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
            "originalCode": "const express = require(\"express\");\n\nconst { createSchema, updateSchema } = require(\"./category.validators\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst Role = require(\"../../../../utils/role\");\nconst Company = require(\"../../company.model\");\n\nconst Item = require(\"./item/item.routes\");\n\nconst categoryService = require(\"./category.service\");\nconst error = require(\"../../../../utils/error\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\n// api/v1/company_id/menu_id/category/category_id/item\nrouter.use(\"/:category_id/item\", Item);\n\nrouter.post(\"/\", Auth([Role.owner]), createSchema, create);\nrouter.get(\"/\", getAllCompanyCategorys);\nrouter.get(\"/:id\", getCategoryById);\nrouter.patch(\"/:id\", Auth([Role.owner]), updateSchema, update);\nrouter.delete(\"/:id\", Auth([Role.owner]), _deleteCategory);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    // check if owner of company\n    const payload = req.body;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.createcategory(payload);\n        })\n        .then((category) => res.json(category))\n        .catch(next);\n}\n\nfunction getAllCompanyCategorys(req, res, next) {\n    const { company_id } = req.params;\n\n    categoryService\n        .getAllCompanyCategorys({ company_id })\n        .then((categories) =>\n            categories ? res.json(categories) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction getCategoryById(req, res, next) {\n    categoryService\n        .getCategoryById(req.params.id)\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction update(req, res, next) {\n    // only owner can update their company category\n    const payload = req.body;\n    payload.menu_id = req.params.menu_id;\n\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService.updateCategory(req.params.id, payload);\n        })\n        .then((category) =>\n            category ? res.json(category) : res.sendStatus(404)\n        )\n        .catch(next);\n}\n\nfunction _deleteCategory(req, res, next) {\n    // only owner delete can delete their company category\n    isOwner(req.user.id, req.params.company_id)\n        .then((owner) => {\n            if (!owner) {\n                return res.status(401).json({ message: \"Unauthorized\" });\n            }\n            return categoryService._delete({\n                id: req.params.id,\n                company_id: req.params.company_id,\n            });\n        })\n        .then(() => {\n            res.json({ id: req.params.id });\n        })\n        .catch(next);\n}\n\n// =========================================\nasync function isOwner(owner_id, company_id) {\n    const bool = await Company.query()\n        .where({ owner_id, id: company_id })\n        .first();\n\n    return bool;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/f9/categoryroutes_f95c539ef7b2381e749f49618b0199b4.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2954",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 12907,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 12904,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 962,
                    "endOffset": 1328,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 1330,
                    "endOffset": 1576,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1578,
                    "endOffset": 1754,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "update",
                "ranges": [
                  {
                    "startOffset": 1756,
                    "endOffset": 2229,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_deleteCategory",
                "ranges": [
                  {
                    "startOffset": 2231,
                    "endOffset": 2690,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "isOwner",
                "ranges": [
                  {
                    "startOffset": 2738,
                    "endOffset": 2893,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    menu_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    menu_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVTY2hlbWEiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2NoZW1hIiwib2JqZWN0IiwibmFtZSIsInN0cmluZyIsInJlcXVpcmVkIiwibWVudV9pZCIsIm51bWJlciIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsMENBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxPQUFPLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBRmEsR0FBWCxDQUFmO0FBSUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBTkQ7O0FBUUFMLE9BQU8sQ0FBQ1ksWUFBUixHQUF1QixDQUFDVixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNUyxXQUFXLEdBQUc7QUFDaEJOLElBQUFBLElBQUksRUFBRVYsR0FBRyxDQUFDVyxNQUFKLEdBQWFNLEtBQWIsQ0FBbUIsRUFBbkIsQ0FEVTtBQUVoQkosSUFBQUEsT0FBTyxFQUFFYixHQUFHLENBQUNjLE1BQUosR0FBYUcsS0FBYixDQUFtQixFQUFuQjtBQUZPLEdBQXBCO0FBS0EsUUFBTVQsTUFBTSxHQUFHUixHQUFHLENBQUNTLE1BQUosQ0FBV08sV0FBWCxDQUFmO0FBRUFkLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVEQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBKb2kgPSByZXF1aXJlKFwiam9pXCIpO1xuY29uc3QgdmFsaWRhdGVSZXF1ZXN0ID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL19taWRkbGV3YXJlcy92YWxpZGF0ZVJlcXVlc3RcIik7XG5cbmV4cG9ydHMuY3JlYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gSm9pLm9iamVjdCh7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWFSdWxlcyA9IHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLmVtcHR5KFwiXCIpLFxuICAgICAgICBtZW51X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        menu_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        menu_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/1b/categoryvalidators_1b6fa12bad6d90716c229117a118363b.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2955",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2827,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2824,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 219,
                    "endOffset": 388,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 414,
                    "endOffset": 616,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createSchema,\n  updateSchema\n} = require(\"./item.validators\");\n\nconst {\n  auth: Auth,\n  isOwner\n} = require(\"../../../../../_middlewares/auth\");\n\nconst Role = require(\"../../../../../utils/role\");\n\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\nmodule.exports = router;\n\nfunction create(req, res, next) {\n  itemService.createItem(req.body).then(item => res.status(201).json(item)).catch(next);\n}\n\nfunction getById(req, res, next) {\n  itemService.getItemById(req.params.id).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction updateItem(req, res, next) {\n  itemService.updateItem(req.params.id, req.body).then(item => item ? res.json(item) : res.sendStatus(404)).catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n  itemService.deleteItem({\n    id: req.params.id\n  }).then(() => res.json({\n    message: \"Item deleted successfully\",\n    id: req.params.id\n  })).catch(next);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ucm91dGVzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY3JlYXRlU2NoZW1hIiwidXBkYXRlU2NoZW1hIiwiYXV0aCIsIkF1dGgiLCJpc093bmVyIiwiUm9sZSIsIml0ZW1TZXJ2aWNlIiwicm91dGVyIiwiUm91dGVyIiwibWVyZ2VQYXJhbXMiLCJwb3N0Iiwib3duZXIiLCJjcmVhdGUiLCJnZXQiLCJnZXRCeUlkIiwicGF0Y2giLCJ1cGRhdGVJdGVtIiwiZGVsZXRlIiwiZGVsZXRlSXRlbSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY3JlYXRlSXRlbSIsImJvZHkiLCJ0aGVuIiwiaXRlbSIsInN0YXR1cyIsImpzb24iLCJjYXRjaCIsImdldEl0ZW1CeUlkIiwicGFyYW1zIiwiaWQiLCJzZW5kU3RhdHVzIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBO0FBQWhCLElBQWlDRixPQUFPLENBQUMsbUJBQUQsQ0FBOUM7O0FBQ0EsTUFBTTtBQUFFRyxFQUFBQSxJQUFJLEVBQUVDLElBQVI7QUFBY0MsRUFBQUE7QUFBZCxJQUEwQkwsT0FBTyxDQUFDLGtDQUFELENBQXZDOztBQUNBLE1BQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLDJCQUFELENBQXBCOztBQUNBLE1BQU1PLFdBQVcsR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQTNCOztBQUVBLE1BQU1RLE1BQU0sR0FBR1QsT0FBTyxDQUFDVSxNQUFSLENBQWU7QUFDMUJDLEVBQUFBLFdBQVcsRUFBRTtBQURhLENBQWYsQ0FBZjtBQUlBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCUCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBckIsRUFBcUNQLE9BQU8sRUFBNUMsRUFBZ0RKLFlBQWhELEVBQThEWSxNQUE5RDtBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxNQUFYLEVBQW1CVixJQUFJLEVBQXZCLEVBQTJCVyxPQUEzQjtBQUNBUCxNQUFNLENBQUNRLEtBQVAsQ0FBYSxNQUFiLEVBQXFCWixJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBekIsRUFBeUNQLE9BQU8sRUFBaEQsRUFBb0RILFlBQXBELEVBQWtFZSxVQUFsRTtBQUNBVCxNQUFNLENBQUNVLE1BQVAsQ0FBYyxNQUFkLEVBQXNCZCxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFOLENBQUQsQ0FBMUIsRUFBMENQLE9BQU8sRUFBakQsRUFBcURjLFVBQXJEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakI7O0FBRUEsU0FBU0ssTUFBVCxDQUFnQlMsR0FBaEIsRUFBcUJDLEdBQXJCLEVBQTBCQyxJQUExQixFQUFnQztBQUM1QmpCLEVBQUFBLFdBQVcsQ0FDTmtCLFVBREwsQ0FDZ0JILEdBQUcsQ0FBQ0ksSUFEcEIsRUFFS0MsSUFGTCxDQUVXQyxJQUFELElBQVVMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixJQUFyQixDQUZwQixFQUdLRyxLQUhMLENBR1dQLElBSFg7QUFJSDs7QUFFRCxTQUFTVCxPQUFULENBQWlCTyxHQUFqQixFQUFzQkMsR0FBdEIsRUFBMkJDLElBQTNCLEVBQWlDO0FBQzdCakIsRUFBQUEsV0FBVyxDQUNOeUIsV0FETCxDQUNpQlYsR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDVCLEVBRUtQLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU1AsVUFBVCxDQUFvQkssR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlUsVUFETCxDQUNnQkssR0FBRyxDQUFDVyxNQUFKLENBQVdDLEVBRDNCLEVBQytCWixHQUFHLENBQUNJLElBRG5DLEVBRUtDLElBRkwsQ0FFV0MsSUFBRCxJQUFXQSxJQUFJLEdBQUdMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixJQUFULENBQUgsR0FBb0JMLEdBQUcsQ0FBQ1ksVUFBSixDQUFlLEdBQWYsQ0FGN0MsRUFHS0osS0FITCxDQUdXUCxJQUhYO0FBSUg7O0FBRUQsU0FBU0wsVUFBVCxDQUFvQkcsR0FBcEIsRUFBeUJDLEdBQXpCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQ2pCLEVBQUFBLFdBQVcsQ0FDTlksVUFETCxDQUNnQjtBQUFFZSxJQUFBQSxFQUFFLEVBQUVaLEdBQUcsQ0FBQ1csTUFBSixDQUFXQztBQUFqQixHQURoQixFQUVLUCxJQUZMLENBRVUsTUFDRkosR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDTE0sSUFBQUEsT0FBTyxFQUFFLDJCQURKO0FBRUxGLElBQUFBLEVBQUUsRUFBRVosR0FBRyxDQUFDVyxNQUFKLENBQVdDO0FBRlYsR0FBVCxDQUhSLEVBUUtILEtBUkwsQ0FRV1AsSUFSWDtBQVNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBjcmVhdGVTY2hlbWEsIHVwZGF0ZVNjaGVtYSB9ID0gcmVxdWlyZShcIi4vaXRlbS52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoLCBpc093bmVyIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBpdGVtU2VydmljZSA9IHJlcXVpcmUoXCIuL2l0ZW0uc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wb3N0KFwiL1wiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgY3JlYXRlU2NoZW1hLCBjcmVhdGUpO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRCeUlkKTtcbnJvdXRlci5wYXRjaChcIi86aWRcIiwgQXV0aChbUm9sZS5vd25lcl0pLCBpc093bmVyKCksIHVwZGF0ZVNjaGVtYSwgdXBkYXRlSXRlbSk7XG5yb3V0ZXIuZGVsZXRlKFwiLzppZFwiLCBBdXRoKFtSb2xlLm93bmVyXSksIGlzT3duZXIoKSwgZGVsZXRlSXRlbSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuXG5mdW5jdGlvbiBjcmVhdGUocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuY3JlYXRlSXRlbShyZXEuYm9keSlcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IHJlcy5zdGF0dXMoMjAxKS5qc29uKGl0ZW0pKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldEJ5SWQocmVxLCByZXMsIG5leHQpIHtcbiAgICBpdGVtU2VydmljZVxuICAgICAgICAuZ2V0SXRlbUJ5SWQocmVxLnBhcmFtcy5pZClcbiAgICAgICAgLnRoZW4oKGl0ZW0pID0+IChpdGVtID8gcmVzLmpzb24oaXRlbSkgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVJdGVtKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgaXRlbVNlcnZpY2VcbiAgICAgICAgLnVwZGF0ZUl0ZW0ocmVxLnBhcmFtcy5pZCwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChpdGVtKSA9PiAoaXRlbSA/IHJlcy5qc29uKGl0ZW0pIDogcmVzLnNlbmRTdGF0dXMoNDA0KSkpXG4gICAgICAgIC5jYXRjaChuZXh0KTtcbn1cblxuZnVuY3Rpb24gZGVsZXRlSXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIGl0ZW1TZXJ2aWNlXG4gICAgICAgIC5kZWxldGVJdGVtKHsgaWQ6IHJlcS5wYXJhbXMuaWQgfSlcbiAgICAgICAgLnRoZW4oKCkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkl0ZW0gZGVsZXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgICAgICBpZDogcmVxLnBhcmFtcy5pZCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuIl19",
            "originalCode": "const express = require(\"express\");\nconst { createSchema, updateSchema } = require(\"./item.validators\");\nconst { auth: Auth, isOwner } = require(\"../../../../../_middlewares/auth\");\nconst Role = require(\"../../../../../utils/role\");\nconst itemService = require(\"./item.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.post(\"/\", Auth([Role.owner]), isOwner(), createSchema, create);\nrouter.get(\"/:id\", Auth(), getById);\nrouter.patch(\"/:id\", Auth([Role.owner]), isOwner(), updateSchema, updateItem);\nrouter.delete(\"/:id\", Auth([Role.owner]), isOwner(), deleteItem);\n\nmodule.exports = router;\n\nfunction create(req, res, next) {\n    itemService\n        .createItem(req.body)\n        .then((item) => res.status(201).json(item))\n        .catch(next);\n}\n\nfunction getById(req, res, next) {\n    itemService\n        .getItemById(req.params.id)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction updateItem(req, res, next) {\n    itemService\n        .updateItem(req.params.id, req.body)\n        .then((item) => (item ? res.json(item) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction deleteItem(req, res, next) {\n    itemService\n        .deleteItem({ id: req.params.id })\n        .then(() =>\n            res.json({\n                message: \"Item deleted successfully\",\n                id: req.params.id,\n            })\n        )\n        .catch(next);\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/de/itemroutes_de9b46cc999b0a12213b699c8d15bd22.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2956",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6599,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6596,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "create",
                "ranges": [
                  {
                    "startOffset": 717,
                    "endOffset": 841,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getById",
                "ranges": [
                  {
                    "startOffset": 843,
                    "endOffset": 991,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 993,
                    "endOffset": 1153,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 1155,
                    "endOffset": 1353,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    price: Joi.number().required(),\n    quantity: Joi.number().required(),\n    description: Joi.string().required(),\n    image_url: Joi.string(),\n    category_id: Joi.number().required()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n  const schemaRules = {\n    name: Joi.string().empty(\"\"),\n    price: Joi.number().empty(\"\"),\n    quantity: Joi.number().empty(\"\"),\n    description: Joi.string().empty(\"\"),\n    image_url: Joi.string(),\n    category_id: Joi.number().empty(\"\")\n  };\n  const schema = Joi.object(schemaRules);\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0udmFsaWRhdG9ycy5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwidmFsaWRhdGVSZXF1ZXN0IiwiZXhwb3J0cyIsImNyZWF0ZVNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwicmVxdWlyZWQiLCJwcmljZSIsIm51bWJlciIsInF1YW50aXR5IiwiZGVzY3JpcHRpb24iLCJpbWFnZV91cmwiLCJjYXRlZ29yeV9pZCIsInVwZGF0ZVNjaGVtYSIsInNjaGVtYVJ1bGVzIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsZUFBZSxHQUFHRCxPQUFPLENBQUMsNkNBQUQsQ0FBL0I7O0FBRUFFLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxLQUFLLEVBQUViLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiLEVBRmU7QUFHdEJHLElBQUFBLFFBQVEsRUFBRWYsR0FBRyxDQUFDYyxNQUFKLEdBQWFGLFFBQWIsRUFIWTtBQUl0QkksSUFBQUEsV0FBVyxFQUFFaEIsR0FBRyxDQUFDVyxNQUFKLEdBQWFDLFFBQWIsRUFKUztBQUt0QkssSUFBQUEsU0FBUyxFQUFFakIsR0FBRyxDQUFDVyxNQUFKLEVBTFc7QUFNdEJPLElBQUFBLFdBQVcsRUFBRWxCLEdBQUcsQ0FBQ2MsTUFBSixHQUFhRixRQUFiO0FBTlMsR0FBWCxDQUFmO0FBUUFWLEVBQUFBLGVBQWUsQ0FBQ0csR0FBRCxFQUFNRSxJQUFOLEVBQVlDLE1BQVosQ0FBZjtBQUNILENBVkQ7O0FBWUFMLE9BQU8sQ0FBQ2dCLFlBQVIsR0FBdUIsQ0FBQ2QsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdkMsUUFBTWEsV0FBVyxHQUFHO0FBQ2hCVixJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhVSxLQUFiLENBQW1CLEVBQW5CLENBRFU7QUFFaEJSLElBQUFBLEtBQUssRUFBRWIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkIsQ0FGUztBQUdoQk4sSUFBQUEsUUFBUSxFQUFFZixHQUFHLENBQUNjLE1BQUosR0FBYU8sS0FBYixDQUFtQixFQUFuQixDQUhNO0FBSWhCTCxJQUFBQSxXQUFXLEVBQUVoQixHQUFHLENBQUNXLE1BQUosR0FBYVUsS0FBYixDQUFtQixFQUFuQixDQUpHO0FBS2hCSixJQUFBQSxTQUFTLEVBQUVqQixHQUFHLENBQUNXLE1BQUosRUFMSztBQU1oQk8sSUFBQUEsV0FBVyxFQUFFbEIsR0FBRyxDQUFDYyxNQUFKLEdBQWFPLEtBQWIsQ0FBbUIsRUFBbkI7QUFORyxHQUFwQjtBQVNBLFFBQU1iLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVdXLFdBQVgsQ0FBZjtBQUVBbEIsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FiRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgbmFtZTogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIHByaWNlOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5yZXF1aXJlZCgpLFxuICAgICAgICBkZXNjcmlwdGlvbjogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gICAgICAgIGltYWdlX3VybDogSm9pLnN0cmluZygpLFxuICAgICAgICBjYXRlZ29yeV9pZDogSm9pLm51bWJlcigpLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG5cbmV4cG9ydHMudXBkYXRlU2NoZW1hID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hUnVsZXMgPSB7XG4gICAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHJpY2U6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgZGVzY3JpcHRpb246IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgaW1hZ2VfdXJsOiBKb2kuc3RyaW5nKCksXG4gICAgICAgIGNhdGVnb3J5X2lkOiBKb2kubnVtYmVyKCkuZW1wdHkoXCJcIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoc2NoZW1hUnVsZXMpO1xuXG4gICAgdmFsaWRhdGVSZXF1ZXN0KHJlcSwgbmV4dCwgc2NoZW1hKTtcbn07XG4iXX0=",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../../../_middlewares/validateRequest\");\n\nexports.createSchema = (req, res, next) => {\n    const schema = Joi.object({\n        name: Joi.string().required(),\n        price: Joi.number().required(),\n        quantity: Joi.number().required(),\n        description: Joi.string().required(),\n        image_url: Joi.string(),\n        category_id: Joi.number().required(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateSchema = (req, res, next) => {\n    const schemaRules = {\n        name: Joi.string().empty(\"\"),\n        price: Joi.number().empty(\"\"),\n        quantity: Joi.number().empty(\"\"),\n        description: Joi.string().empty(\"\"),\n        image_url: Joi.string(),\n        category_id: Joi.number().empty(\"\"),\n    };\n\n    const schema = Joi.object(schemaRules);\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/b3/itemvalidators_b3b5560b6fc02d936e24d53b4a41cdcb.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2957",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4275,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4272,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createSchema",
                "ranges": [
                  {
                    "startOffset": 222,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateSchema",
                "ranges": [
                  {
                    "startOffset": 567,
                    "endOffset": 916,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Item = require(\"./item.model\");\n\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n  createItem,\n  getItemById,\n  updateItem,\n  deleteItem\n};\n\nasync function createItem(params) {\n  const item = await Item.query().insert(params);\n  return basicDetails(item);\n}\n\nasync function getItemById(id) {\n  const item = await getItem({\n    id\n  });\n  return item;\n}\n\nasync function updateItem(id, params) {\n  const updateItem = await Item.query().patchAndFetchById(id, params);\n  return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n  await Item.query().delete({ ...queryParams\n  });\n} // =================== helpers ============================\n\n\nasync function getItem(params) {\n  const item = await Item.query().where({ ...params\n  }).first();\n  return item;\n}\n\nfunction basicDetails(item) {\n  const {\n    id,\n    name,\n    description\n  } = item;\n  return {\n    id,\n    name,\n    description\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0uc2VydmljZS5qcyJdLCJuYW1lcyI6WyJJdGVtIiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZUl0ZW0iLCJnZXRJdGVtQnlJZCIsInVwZGF0ZUl0ZW0iLCJkZWxldGVJdGVtIiwicGFyYW1zIiwiaXRlbSIsInF1ZXJ5IiwiaW5zZXJ0IiwiYmFzaWNEZXRhaWxzIiwiaWQiLCJnZXRJdGVtIiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsIndoZXJlIiwiZmlyc3QiLCJuYW1lIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFdBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQTtBQUphLENBQWpCOztBQU9BLGVBQWVILFVBQWYsQ0FBMEJJLE1BQTFCLEVBQWtDO0FBQzlCLFFBQU1DLElBQUksR0FBRyxNQUFNVixJQUFJLENBQUNXLEtBQUwsR0FBYUMsTUFBYixDQUFvQkgsTUFBcEIsQ0FBbkI7QUFDQSxTQUFPSSxZQUFZLENBQUNILElBQUQsQ0FBbkI7QUFDSDs7QUFFRCxlQUFlSixXQUFmLENBQTJCUSxFQUEzQixFQUErQjtBQUMzQixRQUFNSixJQUFJLEdBQUcsTUFBTUssT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9KLElBQVA7QUFDSDs7QUFFRCxlQUFlSCxVQUFmLENBQTBCTyxFQUExQixFQUE4QkwsTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUYsVUFBVSxHQUFHLE1BQU1QLElBQUksQ0FBQ1csS0FBTCxHQUFhSyxpQkFBYixDQUErQkYsRUFBL0IsRUFBbUNMLE1BQW5DLENBQXpCO0FBRUEsU0FBT0YsVUFBUDtBQUNIOztBQUVELGVBQWVDLFVBQWYsQ0FBMEJTLFdBQTFCLEVBQXVDO0FBQ25DLFFBQU1qQixJQUFJLENBQUNXLEtBQUwsR0FBYU8sTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDs7O0FBQ0EsZUFBZUYsT0FBZixDQUF1Qk4sTUFBdkIsRUFBK0I7QUFDM0IsUUFBTUMsSUFBSSxHQUFHLE1BQU1WLElBQUksQ0FBQ1csS0FBTCxHQUNkUSxLQURjLENBQ1IsRUFBRSxHQUFHVjtBQUFMLEdBRFEsRUFFZFcsS0FGYyxFQUFuQjtBQUdBLFNBQU9WLElBQVA7QUFDSDs7QUFFRCxTQUFTRyxZQUFULENBQXNCSCxJQUF0QixFQUE0QjtBQUN4QixRQUFNO0FBQUVJLElBQUFBLEVBQUY7QUFBTU8sSUFBQUEsSUFBTjtBQUFZQyxJQUFBQTtBQUFaLE1BQTRCWixJQUFsQztBQUNBLFNBQU87QUFBRUksSUFBQUEsRUFBRjtBQUFNTyxJQUFBQSxJQUFOO0FBQVlDLElBQUFBO0FBQVosR0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSXRlbSA9IHJlcXVpcmUoXCIuL2l0ZW0ubW9kZWxcIik7XG5jb25zdCBlcnJvciA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi91dGlscy9lcnJvclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlSXRlbSxcbiAgICBnZXRJdGVtQnlJZCxcbiAgICB1cGRhdGVJdGVtLFxuICAgIGRlbGV0ZUl0ZW0sXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhpdGVtKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0SXRlbUJ5SWQoaWQpIHtcbiAgICBjb25zdCBpdGVtID0gYXdhaXQgZ2V0SXRlbSh7IGlkIH0pO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVJdGVtKGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCB1cGRhdGVJdGVtID0gYXdhaXQgSXRlbS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIHVwZGF0ZUl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUl0ZW0ocXVlcnlQYXJhbXMpIHtcbiAgICBhd2FpdCBJdGVtLnF1ZXJ5KCkuZGVsZXRlKHsgLi4ucXVlcnlQYXJhbXMgfSk7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT0gaGVscGVycyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRJdGVtKHBhcmFtcykge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCBJdGVtLnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW1zIH0pXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBpdGVtO1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMoaXRlbSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGRlc2NyaXB0aW9uIH0gPSBpdGVtO1xuICAgIHJldHVybiB7IGlkLCBuYW1lLCBkZXNjcmlwdGlvbiB9O1xufVxuIl19",
            "originalCode": "const Item = require(\"./item.model\");\nconst error = require(\"../../../../../utils/error\");\n\nmodule.exports = {\n    createItem,\n    getItemById,\n    updateItem,\n    deleteItem,\n};\n\nasync function createItem(params) {\n    const item = await Item.query().insert(params);\n    return basicDetails(item);\n}\n\nasync function getItemById(id) {\n    const item = await getItem({ id });\n    return item;\n}\n\nasync function updateItem(id, params) {\n    const updateItem = await Item.query().patchAndFetchById(id, params);\n\n    return updateItem;\n}\n\nasync function deleteItem(queryParams) {\n    await Item.query().delete({ ...queryParams });\n}\n\n// =================== helpers ============================\nasync function getItem(params) {\n    const item = await Item.query()\n        .where({ ...params })\n        .first();\n    return item;\n}\n\nfunction basicDetails(item) {\n    const { id, name, description } = item;\n    return { id, name, description };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/37/itemservice_37723bc6ce9a1333746fd65833e30b1c.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2958",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4281,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4278,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createItem",
                "ranges": [
                  {
                    "startOffset": 261,
                    "endOffset": 377,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItemById",
                "ranges": [
                  {
                    "startOffset": 379,
                    "endOffset": 472,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateItem",
                "ranges": [
                  {
                    "startOffset": 474,
                    "endOffset": 607,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "deleteItem",
                "ranges": [
                  {
                    "startOffset": 609,
                    "endOffset": 702,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getItem",
                "ranges": [
                  {
                    "startOffset": 765,
                    "endOffset": 880,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 882,
                    "endOffset": 1019,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../../../constants/tableNames\");\n\nconst db = require(\"../../../../../db\");\n\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n  static get tableName() {\n    return tableNames.item;\n  }\n\n  static get relationMappings() {\n    const Category = require(\"../../category/category.model\");\n\n    return {\n      category: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Category,\n        join: {\n          from: `${tableNames.item}.category_id`,\n          to: `${tableNames.category}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Item;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0ubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwidGFibGVOYW1lcyIsImRiIiwiQ2F0ZWdvcnkiLCJJdGVtIiwidGFibGVOYW1lIiwiaXRlbSIsInJlbGF0aW9uTWFwcGluZ3MiLCJjYXRlZ29yeSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzIiwiam9pbiIsImZyb20iLCJ0byIsImtuZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBWUMsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMscUNBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBbEI7O0FBQ0EsTUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBRUEsTUFBTUksSUFBTixTQUFtQkwsS0FBbkIsQ0FBeUI7QUFDckIsYUFBV00sU0FBWCxHQUF1QjtBQUNuQixXQUFPSixVQUFVLENBQUNLLElBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUosUUFBUSxHQUFHSCxPQUFPLENBQUMsK0JBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIUSxNQUFBQSxRQUFRLEVBQUU7QUFDTkMsUUFBQUEsUUFBUSxFQUFFVixLQUFLLENBQUNXLG9CQURWO0FBRU5DLFFBQUFBLFVBQVUsRUFBRVIsUUFGTjtBQUdOUyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVaLFVBQVUsQ0FBQ0ssSUFBSyxjQUR2QjtBQUVGUSxVQUFBQSxFQUFFLEVBQUcsR0FBRWIsVUFBVSxDQUFDTyxRQUFTO0FBRnpCO0FBSEE7QUFEUCxLQUFQO0FBVUg7O0FBbEJvQjs7QUFxQnpCVCxLQUFLLENBQUNnQixJQUFOLENBQVdiLEVBQVg7QUFFQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vZGJcIik7XG5jb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS5tb2RlbFwiKTtcblxuY2xhc3MgSXRlbSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuaXRlbTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIGNvbnN0IENhdGVnb3J5ID0gcmVxdWlyZShcIi4uLy4uL2NhdGVnb3J5L2NhdGVnb3J5Lm1vZGVsXCIpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjYXRlZ29yeToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzOiBDYXRlZ29yeSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMuaXRlbX0uY2F0ZWdvcnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jYXRlZ29yeX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cblxuTW9kZWwua25leChkYik7XG5cbm1vZHVsZS5leHBvcnRzID0gSXRlbTtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../../../constants/tableNames\");\nconst db = require(\"../../../../../db\");\nconst Category = require(\"../category.model\");\n\nclass Item extends Model {\n    static get tableName() {\n        return tableNames.item;\n    }\n\n    static get relationMappings() {\n        const Category = require(\"../../category/category.model\");\n\n        return {\n            category: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Category,\n                join: {\n                    from: `${tableNames.item}.category_id`,\n                    to: `${tableNames.category}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Item;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/bd/itemmodel_bde36e534327c1a1231475da3047e2a2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2959",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3171,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3168,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Item",
                "ranges": [
                  {
                    "startOffset": 290,
                    "endOffset": 290,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 326,
                    "endOffset": 375,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 386,
                    "endOffset": 718,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../../db\");\n\nconst schema = require(\"./category.schema.json\");\n\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n  static get tableName() {\n    return tableNames.category;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Menu = require(\"../menu.model\");\n\n    const Item = require(\"../menu/item/item.model\");\n\n    return {\n      menu: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Menu,\n        join: {\n          from: `${tableName.category}.menu_id`,\n          to: `${tableNames.menu}.id`\n        }\n      },\n      items: {\n        relation: Model.HasManyRelation,\n        modelClasss: Item,\n        join: {\n          from: `${tableNames.category}.id`,\n          to: `${tableNames.item}.category_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Category;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5Lm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsImRiIiwic2NoZW1hIiwidGFibGVOYW1lcyIsIkNhdGVnb3J5IiwidGFibGVOYW1lIiwiY2F0ZWdvcnkiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIk1lbnUiLCJJdGVtIiwibWVudSIsInJlbGF0aW9uIiwiQmVsb25nc1RvT25lUmVsYXRpb24iLCJtb2RlbENsYXNzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJpdGVtcyIsIkhhc01hbnlSZWxhdGlvbiIsIml0ZW0iLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLGtDQUFELENBQTFCOztBQUVBLE1BQU1JLFFBQU4sU0FBdUJMLEtBQXZCLENBQTZCO0FBQ3pCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxRQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsSUFBSSxHQUFHVCxPQUFPLENBQUMsZUFBRCxDQUFwQjs7QUFDQSxVQUFNVSxJQUFJLEdBQUdWLE9BQU8sQ0FBQyx5QkFBRCxDQUFwQjs7QUFFQSxXQUFPO0FBQ0hXLE1BQUFBLElBQUksRUFBRTtBQUNGQyxRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ2Msb0JBRGQ7QUFFRkMsUUFBQUEsV0FBVyxFQUFFTCxJQUZYO0FBR0ZNLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRVgsU0FBUyxDQUFDQyxRQUFTLFVBRDFCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNRLElBQUs7QUFGckI7QUFISixPQURIO0FBU0hPLE1BQUFBLEtBQUssRUFBRTtBQUNITixRQUFBQSxRQUFRLEVBQUViLEtBQUssQ0FBQ29CLGVBRGI7QUFFSEwsUUFBQUEsV0FBVyxFQUFFSixJQUZWO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWIsVUFBVSxDQUFDRyxRQUFTLEtBRDNCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZCxVQUFVLENBQUNpQixJQUFLO0FBRnJCO0FBSEg7QUFUSixLQUFQO0FBa0JIOztBQWhDd0I7O0FBbUM3QnJCLEtBQUssQ0FBQ3NCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLFFBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IGRiID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2RiXCIpO1xuY29uc3Qgc2NoZW1hID0gcmVxdWlyZShcIi4vY2F0ZWdvcnkuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBDYXRlZ29yeSBleHRlbmRzIE1vZGVsIHtcbiAgICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRhYmxlTmFtZXMuY2F0ZWdvcnk7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBqc29uU2NoZW1hKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgLy8gSW1wb3J0aW5nIG1vZGVscyBoZXJlIGlzIGEgb25lIHdheSB0byBhdm9pZCByZXF1aXJlIGxvb3BzLlxuICAgICAgICBjb25zdCBNZW51ID0gcmVxdWlyZShcIi4uL21lbnUubW9kZWxcIik7XG4gICAgICAgIGNvbnN0IEl0ZW0gPSByZXF1aXJlKFwiLi4vbWVudS9pdGVtL2l0ZW0ubW9kZWxcIik7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1lbnU6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IE1lbnUsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWUuY2F0ZWdvcnl9Lm1lbnVfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpdGVtczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IEl0ZW0sXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLml0ZW19LmNhdGVnb3J5X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhdGVnb3J5O1xuIl19",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../../db\");\nconst schema = require(\"./category.schema.json\");\nconst tableNames = require(\"../../../../constants/tableNames\");\n\nclass Category extends Model {\n    static get tableName() {\n        return tableNames.category;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Menu = require(\"../menu.model\");\n        const Item = require(\"../menu/item/item.model\");\n\n        return {\n            menu: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Menu,\n                join: {\n                    from: `${tableName.category}.menu_id`,\n                    to: `${tableNames.menu}.id`,\n                },\n            },\n            items: {\n                relation: Model.HasManyRelation,\n                modelClasss: Item,\n                join: {\n                    from: `${tableNames.category}.id`,\n                    to: `${tableNames.item}.category_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Category;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/0e/categorymodel_0ef83f3e2352e4f7122c2a335cba1fb2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2960",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4654,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4651,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Category",
                "ranges": [
                  {
                    "startOffset": 287,
                    "endOffset": 287,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 327,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 391,
                    "endOffset": 432,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 443,
                    "endOffset": 1073,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Category = require(\"./category.model\");\n\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n  createCategory,\n  updateCategory,\n  getAllCategory,\n  getAllCompanyCategorys,\n  getCategoryById,\n  _delete\n};\n\nasync function createCategory(params) {\n  const category = await Category.query().insert(params);\n  return category;\n}\n\nasync function updateCategory(id, params) {\n  const category = await getCategory({\n    id\n  }); //check if category name is duplicated\n\n  if (params.name && category.name !== params.name && (await getCategory({\n    name: params.name,\n    menu_id: params.menu_id\n  }))) {\n    error(`Category ${params.name} already exists`);\n  }\n\n  const updatedcategory = await Category.query().patchAndFetchById(id, { ...params\n  });\n  return updatedcategory;\n}\n\nasync function getAllCategory() {\n  const categorys = await Category.query();\n  return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n  const categorys = await Category.query({ ...params\n  });\n  return categorys;\n}\n\nasync function getCategoryById(id) {\n  const category = await getCategory({\n    id\n  });\n  return category;\n}\n\nasync function _delete(queryParams) {\n  await Category.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getCategory(param) {\n  const category = await Category.query().where({ ...param\n  }).withGraphFetched(\"items\").first();\n  return category;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LnNlcnZpY2UuanMiXSwibmFtZXMiOlsiQ2F0ZWdvcnkiLCJyZXF1aXJlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlQ2F0ZWdvcnkiLCJ1cGRhdGVDYXRlZ29yeSIsImdldEFsbENhdGVnb3J5IiwiZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyIsImdldENhdGVnb3J5QnlJZCIsIl9kZWxldGUiLCJwYXJhbXMiLCJjYXRlZ29yeSIsInF1ZXJ5IiwiaW5zZXJ0IiwiaWQiLCJnZXRDYXRlZ29yeSIsIm5hbWUiLCJtZW51X2lkIiwidXBkYXRlZGNhdGVnb3J5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJjYXRlZ29yeXMiLCJxdWVyeVBhcmFtcyIsImRlbGV0ZSIsInBhcmFtIiwid2hlcmUiLCJ3aXRoR3JhcGhGZXRjaGVkIiwiZmlyc3QiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXhCOztBQUNBLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLHlCQUFELENBQXJCOztBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsY0FEYTtBQUViQyxFQUFBQSxjQUZhO0FBR2JDLEVBQUFBLGNBSGE7QUFJYkMsRUFBQUEsc0JBSmE7QUFLYkMsRUFBQUEsZUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLGNBQWYsQ0FBOEJNLE1BQTlCLEVBQXNDO0FBQ2xDLFFBQU1DLFFBQVEsR0FBRyxNQUFNWixRQUFRLENBQUNhLEtBQVQsR0FBaUJDLE1BQWpCLENBQXdCSCxNQUF4QixDQUF2QjtBQUNBLFNBQU9DLFFBQVA7QUFDSDs7QUFFRCxlQUFlTixjQUFmLENBQThCUyxFQUE5QixFQUFrQ0osTUFBbEMsRUFBMEM7QUFDdEMsUUFBTUMsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEMsQ0FEc0MsQ0FFdEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLFFBQVEsQ0FBQ0ssSUFBVCxLQUFrQk4sTUFBTSxDQUFDTSxJQUR6QixLQUVDLE1BQU1ELFdBQVcsQ0FBQztBQUNmQyxJQUFBQSxJQUFJLEVBQUVOLE1BQU0sQ0FBQ00sSUFERTtBQUVmQyxJQUFBQSxPQUFPLEVBQUVQLE1BQU0sQ0FBQ087QUFGRCxHQUFELENBRmxCLENBREosRUFPRTtBQUNFaEIsSUFBQUEsS0FBSyxDQUFFLFlBQVdTLE1BQU0sQ0FBQ00sSUFBSyxpQkFBekIsQ0FBTDtBQUNIOztBQUNELFFBQU1FLGVBQWUsR0FBRyxNQUFNbkIsUUFBUSxDQUFDYSxLQUFULEdBQWlCTyxpQkFBakIsQ0FBbUNMLEVBQW5DLEVBQXVDLEVBQ2pFLEdBQUdKO0FBRDhELEdBQXZDLENBQTlCO0FBSUEsU0FBT1EsZUFBUDtBQUNIOztBQUVELGVBQWVaLGNBQWYsR0FBZ0M7QUFDNUIsUUFBTWMsU0FBUyxHQUFHLE1BQU1yQixRQUFRLENBQUNhLEtBQVQsRUFBeEI7QUFDQSxTQUFPUSxTQUFQO0FBQ0g7O0FBRUQsZUFBZWIsc0JBQWYsQ0FBc0NHLE1BQXRDLEVBQThDO0FBQzFDLFFBQU1VLFNBQVMsR0FBRyxNQUFNckIsUUFBUSxDQUFDYSxLQUFULENBQWUsRUFBRSxHQUFHRjtBQUFMLEdBQWYsQ0FBeEI7QUFDQSxTQUFPVSxTQUFQO0FBQ0g7O0FBRUQsZUFBZVosZUFBZixDQUErQk0sRUFBL0IsRUFBbUM7QUFDL0IsUUFBTUgsUUFBUSxHQUFHLE1BQU1JLFdBQVcsQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBbEM7QUFDQSxTQUFPSCxRQUFQO0FBQ0g7O0FBRUQsZUFBZUYsT0FBZixDQUF1QlksV0FBdkIsRUFBb0M7QUFDaEMsUUFBTXRCLFFBQVEsQ0FBQ2EsS0FBVCxHQUFpQlUsTUFBakIsQ0FBd0IsRUFBRSxHQUFHRDtBQUFMLEdBQXhCLENBQU47QUFDSCxDLENBRUQ7QUFDQTtBQUNBO0FBRUE7QUFFQTs7O0FBRUEsZUFBZU4sV0FBZixDQUEyQlEsS0FBM0IsRUFBa0M7QUFDOUIsUUFBTVosUUFBUSxHQUFHLE1BQU1aLFFBQVEsQ0FBQ2EsS0FBVCxHQUNsQlksS0FEa0IsQ0FDWixFQUFFLEdBQUdEO0FBQUwsR0FEWSxFQUVsQkUsZ0JBRmtCLENBRUQsT0FGQyxFQUdsQkMsS0FIa0IsRUFBdkI7QUFLQSxTQUFPZixRQUFQO0FBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuL2NhdGVnb3J5Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZUNhdGVnb3J5LFxuICAgIHVwZGF0ZUNhdGVnb3J5LFxuICAgIGdldEFsbENhdGVnb3J5LFxuICAgIGdldEFsbENvbXBhbnlDYXRlZ29yeXMsXG4gICAgZ2V0Q2F0ZWdvcnlCeUlkLFxuICAgIF9kZWxldGUsXG59O1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVDYXRlZ29yeShwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCkuaW5zZXJ0KHBhcmFtcyk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVDYXRlZ29yeShpZCwgcGFyYW1zKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBnZXRDYXRlZ29yeSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgY2F0ZWdvcnkgbmFtZSBpcyBkdXBsaWNhdGVkXG4gICAgaWYgKFxuICAgICAgICBwYXJhbXMubmFtZSAmJlxuICAgICAgICBjYXRlZ29yeS5uYW1lICE9PSBwYXJhbXMubmFtZSAmJlxuICAgICAgICAoYXdhaXQgZ2V0Q2F0ZWdvcnkoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBtZW51X2lkOiBwYXJhbXMubWVudV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBDYXRlZ29yeSAke3BhcmFtcy5uYW1lfSBhbHJlYWR5IGV4aXN0c2ApO1xuICAgIH1cbiAgICBjb25zdCB1cGRhdGVkY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkY2F0ZWdvcnk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENhdGVnb3J5KCkge1xuICAgIGNvbnN0IGNhdGVnb3J5cyA9IGF3YWl0IENhdGVnb3J5LnF1ZXJ5KCk7XG4gICAgcmV0dXJuIGNhdGVnb3J5cztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsQ29tcGFueUNhdGVnb3J5cyhwYXJhbXMpIHtcbiAgICBjb25zdCBjYXRlZ29yeXMgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSh7IC4uLnBhcmFtcyB9KTtcbiAgICByZXR1cm4gY2F0ZWdvcnlzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRDYXRlZ29yeUJ5SWQoaWQpIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IGF3YWl0IGdldENhdGVnb3J5KHsgaWQgfSk7XG4gICAgcmV0dXJuIGNhdGVnb3J5O1xufVxuXG5hc3luYyBmdW5jdGlvbiBfZGVsZXRlKHF1ZXJ5UGFyYW1zKSB7XG4gICAgYXdhaXQgQ2F0ZWdvcnkucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IGNhdGVnb3J5LnF1ZXJ5KCkuZGVsZXRlQnlJZChpZCk7XG5cbi8vIH1cblxuLy8gPT09PT09PT09PT0gaGVscGVycz09PT09PT09PT09XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENhdGVnb3J5KHBhcmFtKSB7XG4gICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IC4uLnBhcmFtIH0pXG4gICAgICAgIC53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIilcbiAgICAgICAgLmZpcnN0KCk7XG5cbiAgICByZXR1cm4gY2F0ZWdvcnk7XG59XG4iXX0=",
            "originalCode": "const Category = require(\"./category.model\");\nconst error = require(\"../../../../utils/error\");\n\nmodule.exports = {\n    createCategory,\n    updateCategory,\n    getAllCategory,\n    getAllCompanyCategorys,\n    getCategoryById,\n    _delete,\n};\n\nasync function createCategory(params) {\n    const category = await Category.query().insert(params);\n    return category;\n}\n\nasync function updateCategory(id, params) {\n    const category = await getCategory({ id });\n    //check if category name is duplicated\n    if (\n        params.name &&\n        category.name !== params.name &&\n        (await getCategory({\n            name: params.name,\n            menu_id: params.menu_id,\n        }))\n    ) {\n        error(`Category ${params.name} already exists`);\n    }\n    const updatedcategory = await Category.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedcategory;\n}\n\nasync function getAllCategory() {\n    const categorys = await Category.query();\n    return categorys;\n}\n\nasync function getAllCompanyCategorys(params) {\n    const categorys = await Category.query({ ...params });\n    return categorys;\n}\n\nasync function getCategoryById(id) {\n    const category = await getCategory({ id });\n    return category;\n}\n\nasync function _delete(queryParams) {\n    await Category.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await category.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getCategory(param) {\n    const category = await Category.query()\n        .where({ ...param })\n        .withGraphFetched(\"items\")\n        .first();\n\n    return category;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/af/categoryservice_af4a088c54a063175cdbab3d375f5ef2.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2961",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6647,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6644,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createCategory",
                "ranges": [
                  {
                    "startOffset": 319,
                    "endOffset": 437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateCategory",
                "ranges": [
                  {
                    "startOffset": 439,
                    "endOffset": 884,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCategory",
                "ranges": [
                  {
                    "startOffset": 886,
                    "endOffset": 985,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyCategorys",
                "ranges": [
                  {
                    "startOffset": 987,
                    "endOffset": 1115,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategoryById",
                "ranges": [
                  {
                    "startOffset": 1117,
                    "endOffset": 1226,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1228,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCategory",
                "ranges": [
                  {
                    "startOffset": 1462,
                    "endOffset": 1617,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Menu = require(\"../menu/menu.model\");\n\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n  createMenu,\n  updateMenu,\n  getAllMenu,\n  getAllCompanyMenus,\n  getMenuById,\n  _delete\n};\n\nasync function createMenu(params) {\n  const menu = await Menu.query().insert(params);\n  return menu;\n}\n\nasync function updateMenu(id, params) {\n  const menu = await getMenu({\n    id\n  }); //check if menu name is duplicated\n\n  if (params.name && menu.name !== params.name && (await getMenu({\n    name: params.name,\n    company_id: params.company_id\n  }))) {\n    error(`Menu ${params.name} already exists`);\n  }\n\n  const updatedmenu = await Menu.query().patchAndFetchById(id, { ...params\n  });\n  return updatedmenu;\n}\n\nasync function getAllMenu() {\n  const menus = await Menu.query();\n  return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n  const menus = await Menu.query({ ...params\n  });\n  return menus;\n}\n\nasync function getMenuById(id) {\n  const menu = await getMenu({\n    id\n  });\n  return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n  await Menu.query().delete({ ...queryParams\n  });\n} // async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n// }\n// =========== helpers===========\n\n\nasync function getMenu(param) {\n  const menu = await Menu.query().where({ ...param\n  }).withGraphFetched(\"categories\").first();\n  return menu;\n}\n\nfunction basicDetails(menu) {\n  const {\n    id,\n    name,\n    company_id,\n    categories\n  } = menu;\n  return {\n    id,\n    name,\n    company_id,\n    categories\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZW51IiwicmVxdWlyZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU1lbnUiLCJ1cGRhdGVNZW51IiwiZ2V0QWxsTWVudSIsImdldEFsbENvbXBhbnlNZW51cyIsImdldE1lbnVCeUlkIiwiX2RlbGV0ZSIsInBhcmFtcyIsIm1lbnUiLCJxdWVyeSIsImluc2VydCIsImlkIiwiZ2V0TWVudSIsIm5hbWUiLCJjb21wYW55X2lkIiwidXBkYXRlZG1lbnUiLCJwYXRjaEFuZEZldGNoQnlJZCIsIm1lbnVzIiwiYmFzaWNEZXRhaWxzIiwicXVlcnlQYXJhbXMiLCJkZWxldGUiLCJwYXJhbSIsIndoZXJlIiwid2l0aEdyYXBoRmV0Y2hlZCIsImZpcnN0IiwiY2F0ZWdvcmllcyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsc0JBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxVQURhO0FBRWJDLEVBQUFBLFVBRmE7QUFHYkMsRUFBQUEsVUFIYTtBQUliQyxFQUFBQSxrQkFKYTtBQUtiQyxFQUFBQSxXQUxhO0FBTWJDLEVBQUFBO0FBTmEsQ0FBakI7O0FBU0EsZUFBZUwsVUFBZixDQUEwQk0sTUFBMUIsRUFBa0M7QUFDOUIsUUFBTUMsSUFBSSxHQUFHLE1BQU1aLElBQUksQ0FBQ2EsS0FBTCxHQUFhQyxNQUFiLENBQW9CSCxNQUFwQixDQUFuQjtBQUNBLFNBQU9DLElBQVA7QUFDSDs7QUFFRCxlQUFlTixVQUFmLENBQTBCUyxFQUExQixFQUE4QkosTUFBOUIsRUFBc0M7QUFDbEMsUUFBTUMsSUFBSSxHQUFHLE1BQU1JLE9BQU8sQ0FBQztBQUFFRCxJQUFBQTtBQUFGLEdBQUQsQ0FBMUIsQ0FEa0MsQ0FFbEM7O0FBQ0EsTUFDSUosTUFBTSxDQUFDTSxJQUFQLElBQ0FMLElBQUksQ0FBQ0ssSUFBTCxLQUFjTixNQUFNLENBQUNNLElBRHJCLEtBRUMsTUFBTUQsT0FBTyxDQUFDO0FBQ1hDLElBQUFBLElBQUksRUFBRU4sTUFBTSxDQUFDTSxJQURGO0FBRVhDLElBQUFBLFVBQVUsRUFBRVAsTUFBTSxDQUFDTztBQUZSLEdBQUQsQ0FGZCxDQURKLEVBT0U7QUFDRWhCLElBQUFBLEtBQUssQ0FBRSxRQUFPUyxNQUFNLENBQUNNLElBQUssaUJBQXJCLENBQUw7QUFDSDs7QUFDRCxRQUFNRSxXQUFXLEdBQUcsTUFBTW5CLElBQUksQ0FBQ2EsS0FBTCxHQUFhTyxpQkFBYixDQUErQkwsRUFBL0IsRUFBbUMsRUFDekQsR0FBR0o7QUFEc0QsR0FBbkMsQ0FBMUI7QUFJQSxTQUFPUSxXQUFQO0FBQ0g7O0FBRUQsZUFBZVosVUFBZixHQUE0QjtBQUN4QixRQUFNYyxLQUFLLEdBQUcsTUFBTXJCLElBQUksQ0FBQ2EsS0FBTCxFQUFwQjtBQUNBLFNBQU9RLEtBQVA7QUFDSDs7QUFFRCxlQUFlYixrQkFBZixDQUFrQ0csTUFBbEMsRUFBMEM7QUFDdEMsUUFBTVUsS0FBSyxHQUFHLE1BQU1yQixJQUFJLENBQUNhLEtBQUwsQ0FBVyxFQUFFLEdBQUdGO0FBQUwsR0FBWCxDQUFwQjtBQUNBLFNBQU9VLEtBQVA7QUFDSDs7QUFFRCxlQUFlWixXQUFmLENBQTJCTSxFQUEzQixFQUErQjtBQUMzQixRQUFNSCxJQUFJLEdBQUcsTUFBTUksT0FBTyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxDQUExQjtBQUNBLFNBQU9PLFlBQVksQ0FBQ1YsSUFBRCxDQUFuQjtBQUNIOztBQUVELGVBQWVGLE9BQWYsQ0FBdUJhLFdBQXZCLEVBQW9DO0FBQ2hDLFFBQU12QixJQUFJLENBQUNhLEtBQUwsR0FBYVcsTUFBYixDQUFvQixFQUFFLEdBQUdEO0FBQUwsR0FBcEIsQ0FBTjtBQUNILEMsQ0FFRDtBQUNBO0FBQ0E7QUFFQTtBQUVBOzs7QUFFQSxlQUFlUCxPQUFmLENBQXVCUyxLQUF2QixFQUE4QjtBQUMxQixRQUFNYixJQUFJLEdBQUcsTUFBTVosSUFBSSxDQUFDYSxLQUFMLEdBQ2RhLEtBRGMsQ0FDUixFQUFFLEdBQUdEO0FBQUwsR0FEUSxFQUVkRSxnQkFGYyxDQUVHLFlBRkgsRUFHZEMsS0FIYyxFQUFuQjtBQUlBLFNBQU9oQixJQUFQO0FBQ0g7O0FBRUQsU0FBU1UsWUFBVCxDQUFzQlYsSUFBdEIsRUFBNEI7QUFDeEIsUUFBTTtBQUFFRyxJQUFBQSxFQUFGO0FBQU1FLElBQUFBLElBQU47QUFBWUMsSUFBQUEsVUFBWjtBQUF3QlcsSUFBQUE7QUFBeEIsTUFBdUNqQixJQUE3QztBQUVBLFNBQU87QUFBRUcsSUFBQUEsRUFBRjtBQUFNRSxJQUFBQSxJQUFOO0FBQVlDLElBQUFBLFVBQVo7QUFBd0JXLElBQUFBO0FBQXhCLEdBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1lbnUgPSByZXF1aXJlKFwiLi4vbWVudS9tZW51Lm1vZGVsXCIpO1xuY29uc3QgZXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZU1lbnUsXG4gICAgdXBkYXRlTWVudSxcbiAgICBnZXRBbGxNZW51LFxuICAgIGdldEFsbENvbXBhbnlNZW51cyxcbiAgICBnZXRNZW51QnlJZCxcbiAgICBfZGVsZXRlLFxufTtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlTWVudShwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLmluc2VydChwYXJhbXMpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVNZW51KGlkLCBwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51ID0gYXdhaXQgZ2V0TWVudSh7IGlkIH0pO1xuICAgIC8vY2hlY2sgaWYgbWVudSBuYW1lIGlzIGR1cGxpY2F0ZWRcbiAgICBpZiAoXG4gICAgICAgIHBhcmFtcy5uYW1lICYmXG4gICAgICAgIG1lbnUubmFtZSAhPT0gcGFyYW1zLm5hbWUgJiZcbiAgICAgICAgKGF3YWl0IGdldE1lbnUoe1xuICAgICAgICAgICAgbmFtZTogcGFyYW1zLm5hbWUsXG4gICAgICAgICAgICBjb21wYW55X2lkOiBwYXJhbXMuY29tcGFueV9pZCxcbiAgICAgICAgfSkpXG4gICAgKSB7XG4gICAgICAgIGVycm9yKGBNZW51ICR7cGFyYW1zLm5hbWV9IGFscmVhZHkgZXhpc3RzYCk7XG4gICAgfVxuICAgIGNvbnN0IHVwZGF0ZWRtZW51ID0gYXdhaXQgTWVudS5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcblxuICAgIHJldHVybiB1cGRhdGVkbWVudTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWxsTWVudSgpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoKTtcbiAgICByZXR1cm4gbWVudXM7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbENvbXBhbnlNZW51cyhwYXJhbXMpIHtcbiAgICBjb25zdCBtZW51cyA9IGF3YWl0IE1lbnUucXVlcnkoeyAuLi5wYXJhbXMgfSk7XG4gICAgcmV0dXJuIG1lbnVzO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRNZW51QnlJZChpZCkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBnZXRNZW51KHsgaWQgfSk7XG4gICAgcmV0dXJuIGJhc2ljRGV0YWlscyhtZW51KTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX2RlbGV0ZShxdWVyeVBhcmFtcykge1xuICAgIGF3YWl0IE1lbnUucXVlcnkoKS5kZWxldGUoeyAuLi5xdWVyeVBhcmFtcyB9KTtcbn1cblxuLy8gYXN5bmMgZnVuY3Rpb24gX3NvZnREZWxldGUoaWQpIHtcbi8vbWFyayBhcyBpbmFjdGl2ZVxuLy8gIGF3YWl0IG1lbnUucXVlcnkoKS5kZWxldGVCeUlkKGlkKTtcblxuLy8gfVxuXG4vLyA9PT09PT09PT09PSBoZWxwZXJzPT09PT09PT09PT1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TWVudShwYXJhbSkge1xuICAgIGNvbnN0IG1lbnUgPSBhd2FpdCBNZW51LnF1ZXJ5KClcbiAgICAgICAgLndoZXJlKHsgLi4ucGFyYW0gfSlcbiAgICAgICAgLndpdGhHcmFwaEZldGNoZWQoXCJjYXRlZ29yaWVzXCIpXG4gICAgICAgIC5maXJzdCgpO1xuICAgIHJldHVybiBtZW51O1xufVxuXG5mdW5jdGlvbiBiYXNpY0RldGFpbHMobWVudSkge1xuICAgIGNvbnN0IHsgaWQsIG5hbWUsIGNvbXBhbnlfaWQsIGNhdGVnb3JpZXMgfSA9IG1lbnU7XG5cbiAgICByZXR1cm4geyBpZCwgbmFtZSwgY29tcGFueV9pZCwgY2F0ZWdvcmllcyB9O1xufVxuIl19",
            "originalCode": "const Menu = require(\"../menu/menu.model\");\nconst error = require(\"../../../utils/error\");\n\nmodule.exports = {\n    createMenu,\n    updateMenu,\n    getAllMenu,\n    getAllCompanyMenus,\n    getMenuById,\n    _delete,\n};\n\nasync function createMenu(params) {\n    const menu = await Menu.query().insert(params);\n    return menu;\n}\n\nasync function updateMenu(id, params) {\n    const menu = await getMenu({ id });\n    //check if menu name is duplicated\n    if (\n        params.name &&\n        menu.name !== params.name &&\n        (await getMenu({\n            name: params.name,\n            company_id: params.company_id,\n        }))\n    ) {\n        error(`Menu ${params.name} already exists`);\n    }\n    const updatedmenu = await Menu.query().patchAndFetchById(id, {\n        ...params,\n    });\n\n    return updatedmenu;\n}\n\nasync function getAllMenu() {\n    const menus = await Menu.query();\n    return menus;\n}\n\nasync function getAllCompanyMenus(params) {\n    const menus = await Menu.query({ ...params });\n    return menus;\n}\n\nasync function getMenuById(id) {\n    const menu = await getMenu({ id });\n    return basicDetails(menu);\n}\n\nasync function _delete(queryParams) {\n    await Menu.query().delete({ ...queryParams });\n}\n\n// async function _softDelete(id) {\n//mark as inactive\n//  await menu.query().deleteById(id);\n\n// }\n\n// =========== helpers===========\n\nasync function getMenu(param) {\n    const menu = await Menu.query()\n        .where({ ...param })\n        .withGraphFetched(\"categories\")\n        .first();\n    return menu;\n}\n\nfunction basicDetails(menu) {\n    const { id, name, company_id, categories } = menu;\n\n    return { id, name, company_id, categories };\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/09/menuservice_0982deee8fc4f2525220c81116cda394.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2962",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 6988,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 6985,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createMenu",
                "ranges": [
                  {
                    "startOffset": 294,
                    "endOffset": 396,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateMenu",
                "ranges": [
                  {
                    "startOffset": 398,
                    "endOffset": 809,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllMenu",
                "ranges": [
                  {
                    "startOffset": 811,
                    "endOffset": 894,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getAllCompanyMenus",
                "ranges": [
                  {
                    "startOffset": 896,
                    "endOffset": 1008,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenuById",
                "ranges": [
                  {
                    "startOffset": 1010,
                    "endOffset": 1117,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "_delete",
                "ranges": [
                  {
                    "startOffset": 1119,
                    "endOffset": 1209,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getMenu",
                "ranges": [
                  {
                    "startOffset": 1345,
                    "endOffset": 1489,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "basicDetails",
                "ranges": [
                  {
                    "startOffset": 1491,
                    "endOffset": 1658,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst db = require(\"../../../db\");\n\nconst schema = require(\"./menu.schema.json\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n  static get tableName() {\n    return tableNames.menu;\n  }\n\n  static get jsonSchema() {\n    return schema;\n  }\n\n  static get relationMappings() {\n    // Importing models here is a one way to avoid require loops.\n    const Company = require(\"../company.model\");\n\n    const Category = require(\"../category/category.model\");\n\n    return {\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClasss: Company,\n        join: {\n          from: `${tableName.menu}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      },\n      categories: {\n        relation: Model.HasManyRelation,\n        modelClasss: Category,\n        join: {\n          from: `${tableNames.menu}.id`,\n          to: `${tableNames.category}.menu_id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Menu;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUubW9kZWwuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwiZGIiLCJzY2hlbWEiLCJ0YWJsZU5hbWVzIiwiTWVudSIsInRhYmxlTmFtZSIsIm1lbnUiLCJqc29uU2NoZW1hIiwicmVsYXRpb25NYXBwaW5ncyIsIkNvbXBhbnkiLCJDYXRlZ29yeSIsImNvbXBhbnkiLCJyZWxhdGlvbiIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwibW9kZWxDbGFzc3MiLCJqb2luIiwiZnJvbSIsInRvIiwiY2F0ZWdvcmllcyIsIkhhc01hbnlSZWxhdGlvbiIsImNhdGVnb3J5Iiwia25leCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQWxCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLG9CQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUVBLE1BQU1JLElBQU4sU0FBbUJMLEtBQW5CLENBQXlCO0FBQ3JCLGFBQVdNLFNBQVgsR0FBdUI7QUFDbkIsV0FBT0YsVUFBVSxDQUFDRyxJQUFsQjtBQUNIOztBQUVELGFBQVdDLFVBQVgsR0FBd0I7QUFDcEIsV0FBT0wsTUFBUDtBQUNIOztBQUVELGFBQVdNLGdCQUFYLEdBQThCO0FBQzFCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHVCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVUsUUFBUSxHQUFHVixPQUFPLENBQUMsNEJBQUQsQ0FBeEI7O0FBRUEsV0FBTztBQUNIVyxNQUFBQSxPQUFPLEVBQUU7QUFDTEMsUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNjLG9CQURYO0FBRUxDLFFBQUFBLFdBQVcsRUFBRUwsT0FGUjtBQUdMTSxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUVYLFNBQVMsQ0FBQ0MsSUFBSyxhQUR0QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDUSxPQUFRO0FBRnhCO0FBSEQsT0FETjtBQVNITyxNQUFBQSxVQUFVLEVBQUU7QUFDUk4sUUFBQUEsUUFBUSxFQUFFYixLQUFLLENBQUNvQixlQURSO0FBRVJMLFFBQUFBLFdBQVcsRUFBRUosUUFGTDtBQUdSSyxRQUFBQSxJQUFJLEVBQUU7QUFDRkMsVUFBQUEsSUFBSSxFQUFHLEdBQUViLFVBQVUsQ0FBQ0csSUFBSyxLQUR2QjtBQUVGVyxVQUFBQSxFQUFFLEVBQUcsR0FBRWQsVUFBVSxDQUFDaUIsUUFBUztBQUZ6QjtBQUhFO0FBVFQsS0FBUDtBQWtCSDs7QUFoQ29COztBQW1DekJyQixLQUFLLENBQUNzQixJQUFOLENBQVdwQixFQUFYO0FBRUFxQixNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoXCJvYmplY3Rpb25cIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoXCIuL21lbnUuc2NoZW1hLmpzb25cIik7XG5jb25zdCB0YWJsZU5hbWVzID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbnN0YW50cy90YWJsZU5hbWVzXCIpO1xuXG5jbGFzcyBNZW51IGV4dGVuZHMgTW9kZWwge1xuICAgIHN0YXRpYyBnZXQgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGFibGVOYW1lcy5tZW51O1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQganNvblNjaGVtYSgpIHtcbiAgICAgICAgcmV0dXJuIHNjaGVtYTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IHJlbGF0aW9uTWFwcGluZ3MoKSB7XG4gICAgICAgIC8vIEltcG9ydGluZyBtb2RlbHMgaGVyZSBpcyBhIG9uZSB3YXkgdG8gYXZvaWQgcmVxdWlyZSBsb29wcy5cbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBDYXRlZ29yeSA9IHJlcXVpcmUoXCIuLi9jYXRlZ29yeS9jYXRlZ29yeS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29tcGFueToge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5CZWxvbmdzVG9PbmVSZWxhdGlvbixcbiAgICAgICAgICAgICAgICBtb2RlbENsYXNzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZS5tZW51fS5jb21wYW55X2lkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMuY29tcGFueX0uaWRgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2F0ZWdvcmllczoge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uOiBNb2RlbC5IYXNNYW55UmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzc3M6IENhdGVnb3J5LFxuICAgICAgICAgICAgICAgIGpvaW46IHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogYCR7dGFibGVOYW1lcy5tZW51fS5pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLmNhdGVnb3J5fS5tZW51X2lkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbk1vZGVsLmtuZXgoZGIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lbnU7XG4iXX0=",
            "originalCode": "const { Model } = require(\"objection\");\nconst db = require(\"../../../db\");\nconst schema = require(\"./menu.schema.json\");\nconst tableNames = require(\"../../../constants/tableNames\");\n\nclass Menu extends Model {\n    static get tableName() {\n        return tableNames.menu;\n    }\n\n    static get jsonSchema() {\n        return schema;\n    }\n\n    static get relationMappings() {\n        // Importing models here is a one way to avoid require loops.\n        const Company = require(\"../company.model\");\n        const Category = require(\"../category/category.model\");\n\n        return {\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClasss: Company,\n                join: {\n                    from: `${tableName.menu}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n            categories: {\n                relation: Model.HasManyRelation,\n                modelClasss: Category,\n                join: {\n                    from: `${tableNames.menu}.id`,\n                    to: `${tableNames.category}.menu_id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Menu;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/21/menumodel_2169ce1c45f3dc0c50729f84caa9c38e.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2963",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 4674,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 4671,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Menu",
                "ranges": [
                  {
                    "startOffset": 277,
                    "endOffset": 277,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 313,
                    "endOffset": 362,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get jsonSchema",
                "ranges": [
                  {
                    "startOffset": 373,
                    "endOffset": 414,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 425,
                    "endOffset": 1081,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  createOrderSchema,\n  updateOrderSchema,\n  companyOrderSchema\n} = require(\"./order.validators\");\n\nconst {\n  auth: Auth\n} = require(\"../../../_middlewares/auth\");\n\nconst Role = require(\"../../../utils/role\");\n\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.use(\"/:order_id/orderItem\", OrderItem); // update an order item customer aka update cart item\n\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\"/:id\", updateOrderSchema, Auth([Role.staff, Role.owner]), updateOrder);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\"/company-orders\", companyOrderSchema, Auth([Role.owner, Role.staff]), getCompanyOrders);\n\nfunction createOrder(req, res, next) {\n  const payload = {\n    customer_id: req.user.id,\n    company_id: req.params.company_id,\n    item: req.body\n  };\n  orderService.createOrder(payload).then(orderItem => res.json({\n    message: `${orderItem.item} has been added to the cart`\n  })).catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n  orderService.updateOrder(req.params.id, req.user, req.body).then(order => res.json(order)).catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n  orderService.getOrderById(id).then(order => order ? res.json(order) : res.sendStatus(404)).catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n  orderService.getOwnOrders(req.user.id).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n  // TODO to use query params\n  params.company_id = req.params.company_id;\n  orderService.getCompanyOrders(params).then(orders => orders.length > 0 ? orders : res.sendStatus(404)).catch(next);\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNyZWF0ZU9yZGVyU2NoZW1hIiwidXBkYXRlT3JkZXJTY2hlbWEiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJhdXRoIiwiQXV0aCIsIlJvbGUiLCJvcmRlclNlcnZpY2UiLCJPcmRlckl0ZW0iLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInVzZSIsInBvc3QiLCJjdXN0b21lciIsImNyZWF0ZU9yZGVyIiwicGF0Y2giLCJzdGFmZiIsIm93bmVyIiwidXBkYXRlT3JkZXIiLCJnZXQiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicmVxIiwicmVzIiwibmV4dCIsInBheWxvYWQiLCJjdXN0b21lcl9pZCIsInVzZXIiLCJpZCIsImNvbXBhbnlfaWQiLCJwYXJhbXMiLCJpdGVtIiwiYm9keSIsInRoZW4iLCJvcmRlckl0ZW0iLCJqc29uIiwibWVzc2FnZSIsImNhdGNoIiwib3JkZXIiLCJzZW5kU3RhdHVzIiwib3JkZXJzIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQ0ZDLEVBQUFBLGlCQURFO0FBRUZDLEVBQUFBLGlCQUZFO0FBR0ZDLEVBQUFBO0FBSEUsSUFJRkgsT0FBTyxDQUFDLG9CQUFELENBSlg7O0FBS0EsTUFBTTtBQUFFSSxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJMLE9BQU8sQ0FBQyw0QkFBRCxDQUE5Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxNQUFNTyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxpQkFBRCxDQUE1Qjs7QUFFQSxNQUFNUSxTQUFTLEdBQUdSLE9BQU8sQ0FBQyw4QkFBRCxDQUF6Qjs7QUFFQSxNQUFNUyxNQUFNLEdBQUdWLE9BQU8sQ0FBQ1csTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsc0JBQVgsRUFBbUNKLFNBQW5DLEUsQ0FFQTs7QUFDQUMsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQlosaUJBQWpCLEVBQW9DSSxJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUF4QyxFQUF5REMsV0FBekQ7QUFDQU4sTUFBTSxDQUFDTyxLQUFQLENBQ0ksTUFESixFQUVJZCxpQkFGSixFQUdJRyxJQUFJLENBQUMsQ0FBQ0MsSUFBSSxDQUFDVyxLQUFOLEVBQWFYLElBQUksQ0FBQ1ksS0FBbEIsQ0FBRCxDQUhSLEVBSUlDLFdBSko7QUFNQVYsTUFBTSxDQUFDVyxHQUFQLENBQVcsTUFBWCxFQUFtQmYsSUFBSSxFQUF2QixFQUEyQmdCLFlBQTNCO0FBQ0FaLE1BQU0sQ0FBQ1csR0FBUCxDQUFXLGdCQUFYLEVBQTZCZixJQUFJLENBQUNDLElBQUksQ0FBQ1EsUUFBTixDQUFqQyxFQUFrRFEsWUFBbEQ7QUFDQWIsTUFBTSxDQUFDVyxHQUFQLENBQ0ksaUJBREosRUFFSWpCLGtCQUZKLEVBR0lFLElBQUksQ0FBQyxDQUFDQyxJQUFJLENBQUNZLEtBQU4sRUFBYVosSUFBSSxDQUFDVyxLQUFsQixDQUFELENBSFIsRUFJSU0sZ0JBSko7O0FBT0EsU0FBU1IsV0FBVCxDQUFxQlMsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQztBQUNqQyxRQUFNQyxPQUFPLEdBQUc7QUFDWkMsSUFBQUEsV0FBVyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0MsRUFEVjtBQUVaQyxJQUFBQSxVQUFVLEVBQUVQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRCxVQUZYO0FBR1pFLElBQUFBLElBQUksRUFBRVQsR0FBRyxDQUFDVTtBQUhFLEdBQWhCO0FBS0EzQixFQUFBQSxZQUFZLENBQ1BRLFdBREwsQ0FDaUJZLE9BRGpCLEVBRUtRLElBRkwsQ0FFV0MsU0FBRCxJQUNGWCxHQUFHLENBQUNZLElBQUosQ0FBUztBQUNMQyxJQUFBQSxPQUFPLEVBQUcsR0FBRUYsU0FBUyxDQUFDSCxJQUFLO0FBRHRCLEdBQVQsQ0FIUixFQU9LTSxLQVBMLENBT1diLElBUFg7QUFRSDs7QUFFRCxTQUFTUCxXQUFULENBQXFCSyxHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDO0FBQ2pDbkIsRUFBQUEsWUFBWSxDQUNQWSxXQURMLENBQ2lCSyxHQUFHLENBQUNRLE1BQUosQ0FBV0YsRUFENUIsRUFDZ0NOLEdBQUcsQ0FBQ0ssSUFEcEMsRUFDMENMLEdBQUcsQ0FBQ1UsSUFEOUMsRUFFS0MsSUFGTCxDQUVXSyxLQUFELElBQVdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBRnJCLEVBR0tELEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNMLFlBQVQsQ0FBc0JHLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BjLFlBREwsQ0FDa0JTLEVBRGxCLEVBRUtLLElBRkwsQ0FFV0ssS0FBRCxJQUFZQSxLQUFLLEdBQUdmLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxLQUFULENBQUgsR0FBcUJmLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRmhELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNKLFlBQVQsQ0FBc0JFLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQ0MsSUFBaEMsRUFBc0M7QUFDbENuQixFQUFBQSxZQUFZLENBQ1BlLFlBREwsQ0FDa0JFLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxFQUQzQixFQUVLSyxJQUZMLENBRVdPLE1BQUQsSUFBYUEsTUFBTSxDQUFDQyxNQUFQLEdBQWdCLENBQWhCLEdBQW9CRCxNQUFwQixHQUE2QmpCLEdBQUcsQ0FBQ2dCLFVBQUosQ0FBZSxHQUFmLENBRnBELEVBR0tGLEtBSEwsQ0FHV2IsSUFIWDtBQUlIOztBQUVELFNBQVNILGdCQUFULENBQTBCQyxHQUExQixFQUErQkMsR0FBL0IsRUFBb0NDLElBQXBDLEVBQTBDO0FBQ3RDO0FBRUFNLEVBQUFBLE1BQU0sQ0FBQ0QsVUFBUCxHQUFvQlAsR0FBRyxDQUFDUSxNQUFKLENBQVdELFVBQS9CO0FBQ0F4QixFQUFBQSxZQUFZLENBQ1BnQixnQkFETCxDQUNzQlMsTUFEdEIsRUFFS0csSUFGTCxDQUVXTyxNQUFELElBQWFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUFoQixHQUFvQkQsTUFBcEIsR0FBNkJqQixHQUFHLENBQUNnQixVQUFKLENBQWUsR0FBZixDQUZwRCxFQUdLRixLQUhMLENBR1diLElBSFg7QUFJSDs7QUFDRGtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBDLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qge1xuICAgIGNyZWF0ZU9yZGVyU2NoZW1hLFxuICAgIHVwZGF0ZU9yZGVyU2NoZW1hLFxuICAgIGNvbXBhbnlPcmRlclNjaGVtYSxcbn0gPSByZXF1aXJlKFwiLi9vcmRlci52YWxpZGF0b3JzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCBSb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi9vcmRlci5zZXJ2aWNlXCIpO1xuXG5jb25zdCBPcmRlckl0ZW0gPSByZXF1aXJlKFwiLi9vcmRlckl0ZW0vb3JkZXJJdGVtLnJvdXRlc1wiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci51c2UoXCIvOm9yZGVyX2lkL29yZGVySXRlbVwiLCBPcmRlckl0ZW0pO1xuXG4vLyB1cGRhdGUgYW4gb3JkZXIgaXRlbSBjdXN0b21lciBha2EgdXBkYXRlIGNhcnQgaXRlbVxucm91dGVyLnBvc3QoXCIvXCIsIGNyZWF0ZU9yZGVyU2NoZW1hLCBBdXRoKFJvbGUuY3VzdG9tZXIpLCBjcmVhdGVPcmRlcik7XG5yb3V0ZXIucGF0Y2goXG4gICAgXCIvOmlkXCIsXG4gICAgdXBkYXRlT3JkZXJTY2hlbWEsXG4gICAgQXV0aChbUm9sZS5zdGFmZiwgUm9sZS5vd25lcl0pLFxuICAgIHVwZGF0ZU9yZGVyXG4pO1xucm91dGVyLmdldChcIi86aWRcIiwgQXV0aCgpLCBnZXRPcmRlckJ5SWQpO1xucm91dGVyLmdldChcIi86aWQvbXktb3JkZXJzXCIsIEF1dGgoUm9sZS5jdXN0b21lciksIGdldE93bk9yZGVycyk7XG5yb3V0ZXIuZ2V0KFxuICAgIFwiL2NvbXBhbnktb3JkZXJzXCIsXG4gICAgY29tcGFueU9yZGVyU2NoZW1hLFxuICAgIEF1dGgoW1JvbGUub3duZXIsIFJvbGUuc3RhZmZdKSxcbiAgICBnZXRDb21wYW55T3JkZXJzXG4pO1xuXG5mdW5jdGlvbiBjcmVhdGVPcmRlcihyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgIGN1c3RvbWVyX2lkOiByZXEudXNlci5pZCxcbiAgICAgICAgY29tcGFueV9pZDogcmVxLnBhcmFtcy5jb21wYW55X2lkLFxuICAgICAgICBpdGVtOiByZXEuYm9keSxcbiAgICB9O1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuY3JlYXRlT3JkZXIocGF5bG9hZClcbiAgICAgICAgLnRoZW4oKG9yZGVySXRlbSkgPT5cbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBgJHtvcmRlckl0ZW0uaXRlbX0gaGFzIGJlZW4gYWRkZWQgdG8gdGhlIGNhcnRgLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVyKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgb3JkZXJTZXJ2aWNlXG4gICAgICAgIC51cGRhdGVPcmRlcihyZXEucGFyYW1zLmlkLCByZXEudXNlciwgcmVxLmJvZHkpXG4gICAgICAgIC50aGVuKChvcmRlcikgPT4gcmVzLmpzb24ob3JkZXIpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE9yZGVyQnlJZChyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3JkZXJCeUlkKGlkKVxuICAgICAgICAudGhlbigob3JkZXIpID0+IChvcmRlciA/IHJlcy5qc29uKG9yZGVyKSA6IHJlcy5zZW5kU3RhdHVzKDQwNCkpKVxuICAgICAgICAuY2F0Y2gobmV4dCk7XG59XG5cbmZ1bmN0aW9uIGdldE93bk9yZGVycyhyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZVxuICAgICAgICAuZ2V0T3duT3JkZXJzKHJlcS51c2VyLmlkKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxuXG5mdW5jdGlvbiBnZXRDb21wYW55T3JkZXJzKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8gVE9ETyB0byB1c2UgcXVlcnkgcGFyYW1zXG5cbiAgICBwYXJhbXMuY29tcGFueV9pZCA9IHJlcS5wYXJhbXMuY29tcGFueV9pZDtcbiAgICBvcmRlclNlcnZpY2VcbiAgICAgICAgLmdldENvbXBhbnlPcmRlcnMocGFyYW1zKVxuICAgICAgICAudGhlbigob3JkZXJzKSA9PiAob3JkZXJzLmxlbmd0aCA+IDAgPyBvcmRlcnMgOiByZXMuc2VuZFN0YXR1cyg0MDQpKSlcbiAgICAgICAgLmNhdGNoKG5leHQpO1xufVxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst {\n    createOrderSchema,\n    updateOrderSchema,\n    companyOrderSchema,\n} = require(\"./order.validators\");\nconst { auth: Auth } = require(\"../../../_middlewares/auth\");\nconst Role = require(\"../../../utils/role\");\nconst orderService = require(\"./order.service\");\n\nconst OrderItem = require(\"./orderItem/orderItem.routes\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.use(\"/:order_id/orderItem\", OrderItem);\n\n// update an order item customer aka update cart item\nrouter.post(\"/\", createOrderSchema, Auth(Role.customer), createOrder);\nrouter.patch(\n    \"/:id\",\n    updateOrderSchema,\n    Auth([Role.staff, Role.owner]),\n    updateOrder\n);\nrouter.get(\"/:id\", Auth(), getOrderById);\nrouter.get(\"/:id/my-orders\", Auth(Role.customer), getOwnOrders);\nrouter.get(\n    \"/company-orders\",\n    companyOrderSchema,\n    Auth([Role.owner, Role.staff]),\n    getCompanyOrders\n);\n\nfunction createOrder(req, res, next) {\n    const payload = {\n        customer_id: req.user.id,\n        company_id: req.params.company_id,\n        item: req.body,\n    };\n    orderService\n        .createOrder(payload)\n        .then((orderItem) =>\n            res.json({\n                message: `${orderItem.item} has been added to the cart`,\n            })\n        )\n        .catch(next);\n}\n\nfunction updateOrder(req, res, next) {\n    orderService\n        .updateOrder(req.params.id, req.user, req.body)\n        .then((order) => res.json(order))\n        .catch(next);\n}\n\nfunction getOrderById(req, res, next) {\n    orderService\n        .getOrderById(id)\n        .then((order) => (order ? res.json(order) : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getOwnOrders(req, res, next) {\n    orderService\n        .getOwnOrders(req.user.id)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\n\nfunction getCompanyOrders(req, res, next) {\n    // TODO to use query params\n\n    params.company_id = req.params.company_id;\n    orderService\n        .getCompanyOrders(params)\n        .then((orders) => (orders.length > 0 ? orders : res.sendStatus(404)))\n        .catch(next);\n}\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/8f/orderroutes_8f4620babd5b20aee9e160dc0d9cf20a.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2964",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9222,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 9219,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 978,
                    "endOffset": 1275,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 1277,
                    "endOffset": 1423,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1425,
                    "endOffset": 1572,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1574,
                    "endOffset": 1734,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1736,
                    "endOffset": 1974,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Joi = require(\"joi\");\n\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    item: Joi.number().required(),\n    quantity: Joi.number()\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n  const schema = Joi.object({\n    customer_id: Joi.number().empty(),\n    order_status: Joi.string().empty(\"\"),\n    purchase_status: Joi.string().empty(\"\")\n  });\n  validateRequest(req, next, schema);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnZhbGlkYXRvcnMuanMiXSwibmFtZXMiOlsiSm9pIiwicmVxdWlyZSIsInZhbGlkYXRlUmVxdWVzdCIsImV4cG9ydHMiLCJjcmVhdGVPcmRlclNjaGVtYSIsInJlcSIsInJlcyIsIm5leHQiLCJzY2hlbWEiLCJvYmplY3QiLCJpdGVtIiwibnVtYmVyIiwicmVxdWlyZWQiLCJxdWFudGl0eSIsInVwZGF0ZU9yZGVyU2NoZW1hIiwib3JkZXJfc3RhdHVzIiwic3RyaW5nIiwiZW1wdHkiLCJwdXJjaGFzZV9zdGF0dXMiLCJjb21wYW55T3JkZXJTY2hlbWEiLCJjdXN0b21lcl9pZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFDQSxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyx1Q0FBRCxDQUEvQjs7QUFFQUUsT0FBTyxDQUFDQyxpQkFBUixHQUE0QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM1QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csTUFBSixHQUFhQyxRQUFiLEVBRGdCO0FBRXRCQyxJQUFBQSxRQUFRLEVBQUViLEdBQUcsQ0FBQ1csTUFBSjtBQUZZLEdBQVgsQ0FBZjtBQUlBVCxFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQU5EOztBQVFBTCxPQUFPLENBQUNXLGlCQUFSLEdBQTRCLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQzVDLFFBQU1DLE1BQU0sR0FBR1IsR0FBRyxDQUFDUyxNQUFKLENBQVc7QUFDdEJNLElBQUFBLFlBQVksRUFBRWYsR0FBRyxDQUFDZ0IsTUFBSixHQUFhQyxLQUFiLENBQW1CLEVBQW5CLENBRFE7QUFFdEJDLElBQUFBLGVBQWUsRUFBRWxCLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQjtBQUZLLEdBQVgsQ0FBZjtBQUtBZixFQUFBQSxlQUFlLENBQUNHLEdBQUQsRUFBTUUsSUFBTixFQUFZQyxNQUFaLENBQWY7QUFDSCxDQVBEOztBQVNBTCxPQUFPLENBQUNnQixrQkFBUixHQUE2QixDQUFDZCxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM3QyxRQUFNQyxNQUFNLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXO0FBQ3RCVyxJQUFBQSxXQUFXLEVBQUVwQixHQUFHLENBQUNXLE1BQUosR0FBYU0sS0FBYixFQURTO0FBRXRCRixJQUFBQSxZQUFZLEVBQUVmLEdBQUcsQ0FBQ2dCLE1BQUosR0FBYUMsS0FBYixDQUFtQixFQUFuQixDQUZRO0FBR3RCQyxJQUFBQSxlQUFlLEVBQUVsQixHQUFHLENBQUNnQixNQUFKLEdBQWFDLEtBQWIsQ0FBbUIsRUFBbkI7QUFISyxHQUFYLENBQWY7QUFNQWYsRUFBQUEsZUFBZSxDQUFDRyxHQUFELEVBQU1FLElBQU4sRUFBWUMsTUFBWixDQUFmO0FBQ0gsQ0FSRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XG5jb25zdCB2YWxpZGF0ZVJlcXVlc3QgPSByZXF1aXJlKFwiLi4vLi4vLi4vX21pZGRsZXdhcmVzL3ZhbGlkYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0cy5jcmVhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBpdGVtOiBKb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcbiAgICAgICAgcXVhbnRpdHk6IEpvaS5udW1iZXIoKSxcbiAgICB9KTtcbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy51cGRhdGVPcmRlclNjaGVtYSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcblxuZXhwb3J0cy5jb21wYW55T3JkZXJTY2hlbWEgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgICAgICAgY3VzdG9tZXJfaWQ6IEpvaS5udW1iZXIoKS5lbXB0eSgpLFxuICAgICAgICBvcmRlcl9zdGF0dXM6IEpvaS5zdHJpbmcoKS5lbXB0eShcIlwiKSxcbiAgICAgICAgcHVyY2hhc2Vfc3RhdHVzOiBKb2kuc3RyaW5nKCkuZW1wdHkoXCJcIiksXG4gICAgfSk7XG5cbiAgICB2YWxpZGF0ZVJlcXVlc3QocmVxLCBuZXh0LCBzY2hlbWEpO1xufTtcbiJdfQ==",
            "originalCode": "const Joi = require(\"joi\");\nconst validateRequest = require(\"../../../_middlewares/validateRequest\");\n\nexports.createOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        item: Joi.number().required(),\n        quantity: Joi.number(),\n    });\n    validateRequest(req, next, schema);\n};\n\nexports.updateOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n\nexports.companyOrderSchema = (req, res, next) => {\n    const schema = Joi.object({\n        customer_id: Joi.number().empty(),\n        order_status: Joi.string().empty(\"\"),\n        purchase_status: Joi.string().empty(\"\"),\n    });\n\n    validateRequest(req, next, schema);\n};\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/e1/ordervalidators_e12e9bab16ee6f22191cb1085e8fa580.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2965",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.validators.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 3959,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 3956,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.createOrderSchema",
                "ranges": [
                  {
                    "startOffset": 221,
                    "endOffset": 380,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.updateOrderSchema",
                "ranges": [
                  {
                    "startOffset": 411,
                    "endOffset": 594,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>.exports.companyOrderSchema",
                "ranges": [
                  {
                    "startOffset": 626,
                    "endOffset": 848,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n  createOrder,\n  updateOrderItem,\n  updateOrder,\n  getOrderById,\n  getOwnOrders,\n  getCompanyOrders\n};\n\nasync function createOrder(params) {\n  const order = await get_or_create(params.customer_id, params.company_id); // insert the item to the order item table\n\n  const orderItem = order.$relatedQuery(\"items\").insert({\n    item: params.item.id,\n    order: order.id\n  });\n  return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n  const order = await getOrder(id); // check item quantity\n\n  if (params.item.quantity <= 0) {\n    // remove from cart\n    await order.$relatedQuery(\"items\").delete().where({\n      item: params.item.id\n    });\n    return;\n  }\n\n  const orderItem = await order.$relatedQuery(\"items\").patch({\n    quantity: params.item.quantity\n  }).where({\n    item: params.item.id\n  }).returning(\"*\");\n  return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n  let order = await getOrder(id).withGraphFetched(\"company\");\n\n  if (order.company.id !== user.company.id) {\n    const error = new Error(\"Unathorized\");\n    throw error;\n  } // aka update order table\n\n\n  order = await Order.query().patchAndFetchById(id, params);\n  return order;\n}\n\nasync function getOrderById(id) {\n  const order = await getOrder(id).withGraphFetched(\"items\");\n  return order;\n}\n\nasync function getOwnOrders(id) {\n  const orders = await Order.query().where({\n    customer_id: id\n  }).orderBy(\"created_at\");\n  return orders;\n}\n\nasync function getCompanyOrders(params) {\n  const orders = await Order.query().where(params).orderBy(\"created_at\");\n  return orders;\n} // =======================helpers==========================\n\n\nasync function get_or_create(id, company_id) {\n  // checks for the existence of a customer order\n  // if it exists add the new items on it\n  // if it does not exist it creates one\n  let order = await Order.query().where({\n    customer_id: id,\n    order_status: \"New\"\n  }).first();\n\n  if (!order) {\n    // create one\n    order = await Order.query().insert({\n      customer_id: id,\n      company_id,\n      order_status: \"New\",\n      purchase_status: \"unpaid\"\n    });\n  }\n\n  return order;\n}\n\nasync function getOrder(id) {\n  const order = await Order.query().findById(id);\n  return order;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnNlcnZpY2UuanMiXSwibmFtZXMiOlsiT3JkZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZU9yZGVyIiwidXBkYXRlT3JkZXJJdGVtIiwidXBkYXRlT3JkZXIiLCJnZXRPcmRlckJ5SWQiLCJnZXRPd25PcmRlcnMiLCJnZXRDb21wYW55T3JkZXJzIiwicGFyYW1zIiwib3JkZXIiLCJnZXRfb3JfY3JlYXRlIiwiY3VzdG9tZXJfaWQiLCJjb21wYW55X2lkIiwib3JkZXJJdGVtIiwiJHJlbGF0ZWRRdWVyeSIsImluc2VydCIsIml0ZW0iLCJpZCIsImdldE9yZGVyIiwicXVhbnRpdHkiLCJkZWxldGUiLCJ3aGVyZSIsInBhdGNoIiwicmV0dXJuaW5nIiwidXNlciIsIndpdGhHcmFwaEZldGNoZWQiLCJjb21wYW55IiwiZXJyb3IiLCJFcnJvciIsInF1ZXJ5IiwicGF0Y2hBbmRGZXRjaEJ5SWQiLCJvcmRlcnMiLCJvcmRlckJ5Iiwib3JkZXJfc3RhdHVzIiwiZmlyc3QiLCJwdXJjaGFzZV9zdGF0dXMiLCJmaW5kQnlJZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLFdBRGE7QUFFYkMsRUFBQUEsZUFGYTtBQUdiQyxFQUFBQSxXQUhhO0FBSWJDLEVBQUFBLFlBSmE7QUFLYkMsRUFBQUEsWUFMYTtBQU1iQyxFQUFBQTtBQU5hLENBQWpCOztBQVNBLGVBQWVMLFdBQWYsQ0FBMkJNLE1BQTNCLEVBQW1DO0FBQy9CLFFBQU1DLEtBQUssR0FBRyxNQUFNQyxhQUFhLENBQUNGLE1BQU0sQ0FBQ0csV0FBUixFQUFxQkgsTUFBTSxDQUFDSSxVQUE1QixDQUFqQyxDQUQrQixDQUcvQjs7QUFDQSxRQUFNQyxTQUFTLEdBQUdKLEtBQUssQ0FDbEJLLGFBRGEsQ0FDQyxPQURELEVBRWJDLE1BRmEsQ0FFTjtBQUFFQyxJQUFBQSxJQUFJLEVBQUVSLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZQyxFQUFwQjtBQUF3QlIsSUFBQUEsS0FBSyxFQUFFQSxLQUFLLENBQUNRO0FBQXJDLEdBRk0sQ0FBbEI7QUFJQSxTQUFPSixTQUFQO0FBQ0g7O0FBRUQsZUFBZVYsZUFBZixDQUErQmMsRUFBL0IsRUFBbUNULE1BQW5DLEVBQTJDO0FBQ3ZDLFFBQU1DLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBNUIsQ0FEdUMsQ0FHdkM7O0FBQ0EsTUFBSVQsTUFBTSxDQUFDUSxJQUFQLENBQVlHLFFBQVosSUFBd0IsQ0FBNUIsRUFBK0I7QUFDM0I7QUFDQSxVQUFNVixLQUFLLENBQ05LLGFBREMsQ0FDYSxPQURiLEVBRURNLE1BRkMsR0FHREMsS0FIQyxDQUdLO0FBQUVMLE1BQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBQXBCLEtBSEwsQ0FBTjtBQUtBO0FBQ0g7O0FBRUQsUUFBTUosU0FBUyxHQUFHLE1BQU1KLEtBQUssQ0FDeEJLLGFBRG1CLENBQ0wsT0FESyxFQUVuQlEsS0FGbUIsQ0FFYjtBQUNISCxJQUFBQSxRQUFRLEVBQUVYLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZRztBQURuQixHQUZhLEVBS25CRSxLQUxtQixDQUtiO0FBQ0hMLElBQUFBLElBQUksRUFBRVIsTUFBTSxDQUFDUSxJQUFQLENBQVlDO0FBRGYsR0FMYSxFQVFuQk0sU0FSbUIsQ0FRVCxHQVJTLENBQXhCO0FBVUEsU0FBT1YsU0FBUDtBQUNIOztBQUVELGVBQWVULFdBQWYsQ0FBMkJhLEVBQTNCLEVBQStCTyxJQUEvQixFQUFxQ2hCLE1BQXJDLEVBQTZDO0FBQ3pDLE1BQUlDLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixTQUE5QixDQUFsQjs7QUFFQSxNQUFJaEIsS0FBSyxDQUFDaUIsT0FBTixDQUFjVCxFQUFkLEtBQXFCTyxJQUFJLENBQUNFLE9BQUwsQ0FBYVQsRUFBdEMsRUFBMEM7QUFDdEMsVUFBTVUsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxhQUFWLENBQWQ7QUFDQSxVQUFNRCxLQUFOO0FBQ0gsR0FOd0MsQ0FPekM7OztBQUNBbEIsRUFBQUEsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY0MsaUJBQWQsQ0FBZ0NiLEVBQWhDLEVBQW9DVCxNQUFwQyxDQUFkO0FBRUEsU0FBT0MsS0FBUDtBQUNIOztBQUVELGVBQWVKLFlBQWYsQ0FBNEJZLEVBQTVCLEVBQWdDO0FBQzVCLFFBQU1SLEtBQUssR0FBRyxNQUFNUyxRQUFRLENBQUNELEVBQUQsQ0FBUixDQUFhUSxnQkFBYixDQUE4QixPQUE5QixDQUFwQjtBQUNBLFNBQU9oQixLQUFQO0FBQ0g7O0FBRUQsZUFBZUgsWUFBZixDQUE0QlcsRUFBNUIsRUFBZ0M7QUFDNUIsUUFBTWMsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQ2hCUixLQURnQixDQUNWO0FBQUVWLElBQUFBLFdBQVcsRUFBRU07QUFBZixHQURVLEVBRWhCZSxPQUZnQixDQUVSLFlBRlEsQ0FBckI7QUFHQSxTQUFPRCxNQUFQO0FBQ0g7O0FBRUQsZUFBZXhCLGdCQUFmLENBQWdDQyxNQUFoQyxFQUF3QztBQUNwQyxRQUFNdUIsTUFBTSxHQUFHLE1BQU1qQyxLQUFLLENBQUMrQixLQUFOLEdBQWNSLEtBQWQsQ0FBb0JiLE1BQXBCLEVBQTRCd0IsT0FBNUIsQ0FBb0MsWUFBcEMsQ0FBckI7QUFDQSxTQUFPRCxNQUFQO0FBQ0gsQyxDQUNEOzs7QUFDQSxlQUFlckIsYUFBZixDQUE2Qk8sRUFBN0IsRUFBaUNMLFVBQWpDLEVBQTZDO0FBQ3pDO0FBQ0E7QUFDQTtBQUVBLE1BQUlILEtBQUssR0FBRyxNQUFNWCxLQUFLLENBQUMrQixLQUFOLEdBQ2JSLEtBRGEsQ0FDUDtBQUNIVixJQUFBQSxXQUFXLEVBQUVNLEVBRFY7QUFFSGdCLElBQUFBLFlBQVksRUFBRTtBQUZYLEdBRE8sRUFLYkMsS0FMYSxFQUFsQjs7QUFPQSxNQUFJLENBQUN6QixLQUFMLEVBQVk7QUFDUjtBQUNBQSxJQUFBQSxLQUFLLEdBQUcsTUFBTVgsS0FBSyxDQUFDK0IsS0FBTixHQUFjZCxNQUFkLENBQXFCO0FBQy9CSixNQUFBQSxXQUFXLEVBQUVNLEVBRGtCO0FBRS9CTCxNQUFBQSxVQUYrQjtBQUcvQnFCLE1BQUFBLFlBQVksRUFBRSxLQUhpQjtBQUkvQkUsTUFBQUEsZUFBZSxFQUFFO0FBSmMsS0FBckIsQ0FBZDtBQU1IOztBQUVELFNBQU8xQixLQUFQO0FBQ0g7O0FBRUQsZUFBZVMsUUFBZixDQUF3QkQsRUFBeEIsRUFBNEI7QUFDeEIsUUFBTVIsS0FBSyxHQUFHLE1BQU1YLEtBQUssQ0FBQytCLEtBQU4sR0FBY08sUUFBZCxDQUF1Qm5CLEVBQXZCLENBQXBCO0FBQ0EsU0FBT1IsS0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgT3JkZXIgPSByZXF1aXJlKFwiLi9vcmRlci5tb2RlbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlT3JkZXIsXG4gICAgdXBkYXRlT3JkZXJJdGVtLFxuICAgIHVwZGF0ZU9yZGVyLFxuICAgIGdldE9yZGVyQnlJZCxcbiAgICBnZXRPd25PcmRlcnMsXG4gICAgZ2V0Q29tcGFueU9yZGVycyxcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9yZGVyKHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0X29yX2NyZWF0ZShwYXJhbXMuY3VzdG9tZXJfaWQsIHBhcmFtcy5jb21wYW55X2lkKTtcblxuICAgIC8vIGluc2VydCB0aGUgaXRlbSB0byB0aGUgb3JkZXIgaXRlbSB0YWJsZVxuICAgIGNvbnN0IG9yZGVySXRlbSA9IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLmluc2VydCh7IGl0ZW06IHBhcmFtcy5pdGVtLmlkLCBvcmRlcjogb3JkZXIuaWQgfSk7XG5cbiAgICByZXR1cm4gb3JkZXJJdGVtO1xufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVPcmRlckl0ZW0oaWQsIHBhcmFtcykge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgZ2V0T3JkZXIoaWQpO1xuXG4gICAgLy8gY2hlY2sgaXRlbSBxdWFudGl0eVxuICAgIGlmIChwYXJhbXMuaXRlbS5xdWFudGl0eSA8PSAwKSB7XG4gICAgICAgIC8vIHJlbW92ZSBmcm9tIGNhcnRcbiAgICAgICAgYXdhaXQgb3JkZXJcbiAgICAgICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgICAgIC5kZWxldGUoKVxuICAgICAgICAgICAgLndoZXJlKHsgaXRlbTogcGFyYW1zLml0ZW0uaWQgfSk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG9yZGVySXRlbSA9IGF3YWl0IG9yZGVyXG4gICAgICAgIC4kcmVsYXRlZFF1ZXJ5KFwiaXRlbXNcIilcbiAgICAgICAgLnBhdGNoKHtcbiAgICAgICAgICAgIHF1YW50aXR5OiBwYXJhbXMuaXRlbS5xdWFudGl0eSxcbiAgICAgICAgfSlcbiAgICAgICAgLndoZXJlKHtcbiAgICAgICAgICAgIGl0ZW06IHBhcmFtcy5pdGVtLmlkLFxuICAgICAgICB9KVxuICAgICAgICAucmV0dXJuaW5nKFwiKlwiKTtcblxuICAgIHJldHVybiBvcmRlckl0ZW07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZU9yZGVyKGlkLCB1c2VyLCBwYXJhbXMpIHtcbiAgICBsZXQgb3JkZXIgPSBhd2FpdCBnZXRPcmRlcihpZCkud2l0aEdyYXBoRmV0Y2hlZChcImNvbXBhbnlcIik7XG5cbiAgICBpZiAob3JkZXIuY29tcGFueS5pZCAhPT0gdXNlci5jb21wYW55LmlkKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFwiVW5hdGhvcml6ZWRcIik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICAvLyBha2EgdXBkYXRlIG9yZGVyIHRhYmxlXG4gICAgb3JkZXIgPSBhd2FpdCBPcmRlci5xdWVyeSgpLnBhdGNoQW5kRmV0Y2hCeUlkKGlkLCBwYXJhbXMpO1xuXG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPcmRlckJ5SWQoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IGdldE9yZGVyKGlkKS53aXRoR3JhcGhGZXRjaGVkKFwiaXRlbXNcIik7XG4gICAgcmV0dXJuIG9yZGVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPd25PcmRlcnMoaWQpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpXG4gICAgICAgIC53aGVyZSh7IGN1c3RvbWVyX2lkOiBpZCB9KVxuICAgICAgICAub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q29tcGFueU9yZGVycyhwYXJhbXMpIHtcbiAgICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5xdWVyeSgpLndoZXJlKHBhcmFtcykub3JkZXJCeShcImNyZWF0ZWRfYXRcIik7XG4gICAgcmV0dXJuIG9yZGVycztcbn1cbi8vID09PT09PT09PT09PT09PT09PT09PT09aGVscGVycz09PT09PT09PT09PT09PT09PT09PT09PT09XG5hc3luYyBmdW5jdGlvbiBnZXRfb3JfY3JlYXRlKGlkLCBjb21wYW55X2lkKSB7XG4gICAgLy8gY2hlY2tzIGZvciB0aGUgZXhpc3RlbmNlIG9mIGEgY3VzdG9tZXIgb3JkZXJcbiAgICAvLyBpZiBpdCBleGlzdHMgYWRkIHRoZSBuZXcgaXRlbXMgb24gaXRcbiAgICAvLyBpZiBpdCBkb2VzIG5vdCBleGlzdCBpdCBjcmVhdGVzIG9uZVxuXG4gICAgbGV0IG9yZGVyID0gYXdhaXQgT3JkZXIucXVlcnkoKVxuICAgICAgICAud2hlcmUoe1xuICAgICAgICAgICAgY3VzdG9tZXJfaWQ6IGlkLFxuICAgICAgICAgICAgb3JkZXJfc3RhdHVzOiBcIk5ld1wiLFxuICAgICAgICB9KVxuICAgICAgICAuZmlyc3QoKTtcblxuICAgIGlmICghb3JkZXIpIHtcbiAgICAgICAgLy8gY3JlYXRlIG9uZVxuICAgICAgICBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuaW5zZXJ0KHtcbiAgICAgICAgICAgIGN1c3RvbWVyX2lkOiBpZCxcbiAgICAgICAgICAgIGNvbXBhbnlfaWQsXG4gICAgICAgICAgICBvcmRlcl9zdGF0dXM6IFwiTmV3XCIsXG4gICAgICAgICAgICBwdXJjaGFzZV9zdGF0dXM6IFwidW5wYWlkXCIsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBvcmRlcjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0T3JkZXIoaWQpIHtcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IE9yZGVyLnF1ZXJ5KCkuZmluZEJ5SWQoaWQpO1xuICAgIHJldHVybiBvcmRlcjtcbn1cbiJdfQ==",
            "originalCode": "const Order = require(\"./order.model\");\n\nmodule.exports = {\n    createOrder,\n    updateOrderItem,\n    updateOrder,\n    getOrderById,\n    getOwnOrders,\n    getCompanyOrders,\n};\n\nasync function createOrder(params) {\n    const order = await get_or_create(params.customer_id, params.company_id);\n\n    // insert the item to the order item table\n    const orderItem = order\n        .$relatedQuery(\"items\")\n        .insert({ item: params.item.id, order: order.id });\n\n    return orderItem;\n}\n\nasync function updateOrderItem(id, params) {\n    const order = await getOrder(id);\n\n    // check item quantity\n    if (params.item.quantity <= 0) {\n        // remove from cart\n        await order\n            .$relatedQuery(\"items\")\n            .delete()\n            .where({ item: params.item.id });\n\n        return;\n    }\n\n    const orderItem = await order\n        .$relatedQuery(\"items\")\n        .patch({\n            quantity: params.item.quantity,\n        })\n        .where({\n            item: params.item.id,\n        })\n        .returning(\"*\");\n\n    return orderItem;\n}\n\nasync function updateOrder(id, user, params) {\n    let order = await getOrder(id).withGraphFetched(\"company\");\n\n    if (order.company.id !== user.company.id) {\n        const error = new Error(\"Unathorized\");\n        throw error;\n    }\n    // aka update order table\n    order = await Order.query().patchAndFetchById(id, params);\n\n    return order;\n}\n\nasync function getOrderById(id) {\n    const order = await getOrder(id).withGraphFetched(\"items\");\n    return order;\n}\n\nasync function getOwnOrders(id) {\n    const orders = await Order.query()\n        .where({ customer_id: id })\n        .orderBy(\"created_at\");\n    return orders;\n}\n\nasync function getCompanyOrders(params) {\n    const orders = await Order.query().where(params).orderBy(\"created_at\");\n    return orders;\n}\n// =======================helpers==========================\nasync function get_or_create(id, company_id) {\n    // checks for the existence of a customer order\n    // if it exists add the new items on it\n    // if it does not exist it creates one\n\n    let order = await Order.query()\n        .where({\n            customer_id: id,\n            order_status: \"New\",\n        })\n        .first();\n\n    if (!order) {\n        // create one\n        order = await Order.query().insert({\n            customer_id: id,\n            company_id,\n            order_status: \"New\",\n            purchase_status: \"unpaid\",\n        });\n    }\n\n    return order;\n}\n\nasync function getOrder(id) {\n    const order = await Order.query().findById(id);\n    return order;\n}\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/2d/orderservice_2dd8ed46d0ebb5dcc0edc8f1fb86b7ac.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2966",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.service.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 10175,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 10172,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "createOrder",
                "ranges": [
                  {
                    "startOffset": 253,
                    "endOffset": 541,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 543,
                    "endOffset": 993,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrder",
                "ranges": [
                  {
                    "startOffset": 995,
                    "endOffset": 1322,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrderById",
                "ranges": [
                  {
                    "startOffset": 1324,
                    "endOffset": 1437,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOwnOrders",
                "ranges": [
                  {
                    "startOffset": 1439,
                    "endOffset": 1584,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getCompanyOrders",
                "ranges": [
                  {
                    "startOffset": 1586,
                    "endOffset": 1720,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get_or_create",
                "ranges": [
                  {
                    "startOffset": 1783,
                    "endOffset": 2270,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "getOrder",
                "ranges": [
                  {
                    "startOffset": 2272,
                    "endOffset": 2369,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const {\n  Model\n} = require(\"objection\");\n\nconst tableNames = require(\"../../../constants/tableNames\");\n\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n  static get tableName() {\n    return tableNames.order;\n  }\n\n  static get relationMappings() {\n    const Company = require(\"../company.model\");\n\n    const User = require(\"../../user/user.model\");\n\n    const OrderItem = require(\"./orderItem/orderItem.model\");\n\n    return {\n      items: {\n        relation: Model.HasManyRelation,\n        modelClass: OrderItem,\n        join: {\n          from: `${tableNames.order}.id`,\n          to: `${tableNames.orderItem}.order_id`\n        }\n      },\n      customer: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: User,\n        join: {\n          from: `${tableNames.order}.customer_id`,\n          to: `${tableNames.user}.id`\n        }\n      },\n      company: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Company,\n        join: {\n          from: `${tableNames.order}.company_id`,\n          to: `${tableNames.company}.id`\n        }\n      }\n    };\n  }\n\n}\n\nModel.knex(db);\nmodule.exports = Order;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsInRhYmxlTmFtZXMiLCJkYiIsIk9yZGVyIiwidGFibGVOYW1lIiwib3JkZXIiLCJyZWxhdGlvbk1hcHBpbmdzIiwiQ29tcGFueSIsIlVzZXIiLCJPcmRlckl0ZW0iLCJpdGVtcyIsInJlbGF0aW9uIiwiSGFzTWFueVJlbGF0aW9uIiwibW9kZWxDbGFzcyIsImpvaW4iLCJmcm9tIiwidG8iLCJvcmRlckl0ZW0iLCJjdXN0b21lciIsIkJlbG9uZ3NUb09uZVJlbGF0aW9uIiwidXNlciIsImNvbXBhbnkiLCJrbmV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVlDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLCtCQUFELENBQTFCOztBQUNBLE1BQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBbEI7O0FBRUEsTUFBTUcsS0FBTixTQUFvQkosS0FBcEIsQ0FBMEI7QUFDdEIsYUFBV0ssU0FBWCxHQUF1QjtBQUNuQixXQUFPSCxVQUFVLENBQUNJLEtBQWxCO0FBQ0g7O0FBRUQsYUFBV0MsZ0JBQVgsR0FBOEI7QUFDMUIsVUFBTUMsT0FBTyxHQUFHUCxPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBQ0EsVUFBTVEsSUFBSSxHQUFHUixPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsVUFBTVMsU0FBUyxHQUFHVCxPQUFPLENBQUMsNkJBQUQsQ0FBekI7O0FBRUEsV0FBTztBQUNIVSxNQUFBQSxLQUFLLEVBQUU7QUFDSEMsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNhLGVBRGI7QUFFSEMsUUFBQUEsVUFBVSxFQUFFSixTQUZUO0FBR0hLLFFBQUFBLElBQUksRUFBRTtBQUNGQyxVQUFBQSxJQUFJLEVBQUcsR0FBRWQsVUFBVSxDQUFDSSxLQUFNLEtBRHhCO0FBRUZXLFVBQUFBLEVBQUUsRUFBRyxHQUFFZixVQUFVLENBQUNnQixTQUFVO0FBRjFCO0FBSEgsT0FESjtBQVVIQyxNQUFBQSxRQUFRLEVBQUU7QUFDTlAsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEVjtBQUVOTixRQUFBQSxVQUFVLEVBQUVMLElBRk47QUFHTk0sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sY0FEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ21CLElBQUs7QUFGckI7QUFIQSxPQVZQO0FBa0JIQyxNQUFBQSxPQUFPLEVBQUU7QUFDTFYsUUFBQUEsUUFBUSxFQUFFWixLQUFLLENBQUNvQixvQkFEWDtBQUVMTixRQUFBQSxVQUFVLEVBQUVOLE9BRlA7QUFHTE8sUUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFVBQUFBLElBQUksRUFBRyxHQUFFZCxVQUFVLENBQUNJLEtBQU0sYUFEeEI7QUFFRlcsVUFBQUEsRUFBRSxFQUFHLEdBQUVmLFVBQVUsQ0FBQ29CLE9BQVE7QUFGeEI7QUFIRDtBQWxCTixLQUFQO0FBMkJIOztBQXJDcUI7O0FBd0MxQnRCLEtBQUssQ0FBQ3VCLElBQU4sQ0FBV3BCLEVBQVg7QUFFQXFCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLEtBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZShcIm9iamVjdGlvblwiKTtcbmNvbnN0IHRhYmxlTmFtZXMgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29uc3RhbnRzL3RhYmxlTmFtZXNcIik7XG5jb25zdCBkYiA9IHJlcXVpcmUoXCIuLi8uLi8uLi9kYlwiKTtcblxuY2xhc3MgT3JkZXIgZXh0ZW5kcyBNb2RlbCB7XG4gICAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0YWJsZU5hbWVzLm9yZGVyO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgcmVsYXRpb25NYXBwaW5ncygpIHtcbiAgICAgICAgY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoXCIuLi9jb21wYW55Lm1vZGVsXCIpO1xuICAgICAgICBjb25zdCBVc2VyID0gcmVxdWlyZShcIi4uLy4uL3VzZXIvdXNlci5tb2RlbFwiKTtcbiAgICAgICAgY29uc3QgT3JkZXJJdGVtID0gcmVxdWlyZShcIi4vb3JkZXJJdGVtL29yZGVySXRlbS5tb2RlbFwiKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuSGFzTWFueVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IE9yZGVySXRlbSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICAgICAgdG86IGAke3RhYmxlTmFtZXMub3JkZXJJdGVtfS5vcmRlcl9pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGN1c3RvbWVyOiB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb246IE1vZGVsLkJlbG9uZ3NUb09uZVJlbGF0aW9uLFxuICAgICAgICAgICAgICAgIG1vZGVsQ2xhc3M6IFVzZXIsXG4gICAgICAgICAgICAgICAgam9pbjoge1xuICAgICAgICAgICAgICAgICAgICBmcm9tOiBgJHt0YWJsZU5hbWVzLm9yZGVyfS5jdXN0b21lcl9pZGAsXG4gICAgICAgICAgICAgICAgICAgIHRvOiBgJHt0YWJsZU5hbWVzLnVzZXJ9LmlkYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbjogTW9kZWwuQmVsb25nc1RvT25lUmVsYXRpb24sXG4gICAgICAgICAgICAgICAgbW9kZWxDbGFzczogQ29tcGFueSxcbiAgICAgICAgICAgICAgICBqb2luOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IGAke3RhYmxlTmFtZXMub3JkZXJ9LmNvbXBhbnlfaWRgLFxuICAgICAgICAgICAgICAgICAgICB0bzogYCR7dGFibGVOYW1lcy5jb21wYW55fS5pZGAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuXG5Nb2RlbC5rbmV4KGRiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPcmRlcjtcbiJdfQ==",
            "originalCode": "const { Model } = require(\"objection\");\nconst tableNames = require(\"../../../constants/tableNames\");\nconst db = require(\"../../../db\");\n\nclass Order extends Model {\n    static get tableName() {\n        return tableNames.order;\n    }\n\n    static get relationMappings() {\n        const Company = require(\"../company.model\");\n        const User = require(\"../../user/user.model\");\n        const OrderItem = require(\"./orderItem/orderItem.model\");\n\n        return {\n            items: {\n                relation: Model.HasManyRelation,\n                modelClass: OrderItem,\n                join: {\n                    from: `${tableNames.order}.id`,\n                    to: `${tableNames.orderItem}.order_id`,\n                },\n            },\n\n            customer: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: User,\n                join: {\n                    from: `${tableNames.order}.customer_id`,\n                    to: `${tableNames.user}.id`,\n                },\n            },\n            company: {\n                relation: Model.BelongsToOneRelation,\n                modelClass: Company,\n                join: {\n                    from: `${tableNames.order}.company_id`,\n                    to: `${tableNames.company}.id`,\n                },\n            },\n        };\n    }\n}\n\nModel.knex(db);\n\nmodule.exports = Order;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/66/ordermodel_662f5b9ea6475bcabfd0d4f0bf405dda.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2967",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.model.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 5243,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 5240,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Order",
                "ranges": [
                  {
                    "startOffset": 230,
                    "endOffset": 230,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get tableName",
                "ranges": [
                  {
                    "startOffset": 267,
                    "endOffset": 317,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "get relationMappings",
                "ranges": [
                  {
                    "startOffset": 328,
                    "endOffset": 1185,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "const express = require(\"express\");\n\nconst {\n  auth: Auth\n} = require(\"../../../../_middlewares/auth\");\n\nconst role = require(\"../../../../utils/role\");\n\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n  mergeParams: true\n});\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n  orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVySXRlbS5yb3V0ZXMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhdXRoIiwiQXV0aCIsInJvbGUiLCJvcmRlclNlcnZpY2UiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtZXJnZVBhcmFtcyIsInB1dCIsImN1c3RvbWVyIiwidXBkYXRlT3JkZXJJdGVtIiwicmVxIiwicmVzIiwibmV4dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxJQUFJLEVBQUVDO0FBQVIsSUFBaUJGLE9BQU8sQ0FBQywrQkFBRCxDQUE5Qjs7QUFDQSxNQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyx3QkFBRCxDQUFwQjs7QUFDQSxNQUFNSSxZQUFZLEdBQUdKLE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFFQSxNQUFNSyxNQUFNLEdBQUdOLE9BQU8sQ0FBQ08sTUFBUixDQUFlO0FBQzFCQyxFQUFBQSxXQUFXLEVBQUU7QUFEYSxDQUFmLENBQWY7QUFJQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQk4sSUFBSSxDQUFDQyxJQUFJLENBQUNNLFFBQU4sQ0FBcEIsRUFBcUNDLGVBQXJDOztBQUVBLFNBQVNBLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCQyxHQUE5QixFQUFtQ0MsSUFBbkMsRUFBeUM7QUFDckNULEVBQUFBLFlBQVksQ0FBQ00sZUFBYjtBQUNIOztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgeyBhdXRoOiBBdXRoIH0gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vX21pZGRsZXdhcmVzL2F1dGhcIik7XG5jb25zdCByb2xlID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3V0aWxzL3JvbGVcIik7XG5jb25zdCBvcmRlclNlcnZpY2UgPSByZXF1aXJlKFwiLi4vb3JkZXIuc2VydmljZVwiKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoe1xuICAgIG1lcmdlUGFyYW1zOiB0cnVlLFxufSk7XG5cbnJvdXRlci5wdXQoXCIvXCIsIEF1dGgocm9sZS5jdXN0b21lciksIHVwZGF0ZU9yZGVySXRlbSk7XG5cbmZ1bmN0aW9uIHVwZGF0ZU9yZGVySXRlbShyZXEsIHJlcywgbmV4dCkge1xuICAgIG9yZGVyU2VydmljZS51cGRhdGVPcmRlckl0ZW0oKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
            "originalCode": "const express = require(\"express\");\nconst { auth: Auth } = require(\"../../../../_middlewares/auth\");\nconst role = require(\"../../../../utils/role\");\nconst orderService = require(\"../order.service\");\n\nconst router = express.Router({\n    mergeParams: true,\n});\n\nrouter.put(\"/\", Auth(role.customer), updateOrderItem);\n\nfunction updateOrderItem(req, res, next) {\n    orderService.updateOrderItem();\n}\n\nmodule.exports = router;\n",
            "sourceMapPath": "/tmp/jest_rs/jest-transform-cache-b962fb3a13b4c1668b1985fc59a3e401-b0986c9d7f26a96973ae74af52fbaf1c/44/orderItemroutes_440b1db2888128c60482407cf8bcef31.map",
            "wrapperLength": 89
          },
          "result": {
            "scriptId": "2968",
            "url": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/orderItem/orderItem.routes.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 2184,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "Object.<anonymous>",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 2181,
                    "count": 1
                  }
                ],
                "isBlockCoverage": false
              },
              {
                "functionName": "updateOrderItem",
                "ranges": [
                  {
                    "startOffset": 406,
                    "endOffset": 484,
                    "count": 0
                  }
                ],
                "isBlockCoverage": false
              }
            ]
          }
        }
      ]
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/knexfile.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/knexfile.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 36
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 27
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 18
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 11
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 21
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 21
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 33
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 51
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 44
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 52
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 10
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 21
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 52
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 10
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 16
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 47
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 10
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 6
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 0
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 18
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 21
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 21
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 33
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 46
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 44
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 52
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 10
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 21
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 52
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 10
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 16
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 47
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 10
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 6
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 17
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 21
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 45
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 15
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 19
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 20
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 10
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 21
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 52
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 10
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 0
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 16
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 47
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 10
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 6
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 1,
        "30": 1,
        "31": 1,
        "32": 1,
        "33": 1,
        "34": 1,
        "35": 1,
        "36": 1,
        "37": 1,
        "38": 1,
        "39": 1,
        "40": 1,
        "41": 1,
        "42": 1,
        "43": 1,
        "44": 1,
        "45": 1,
        "46": 1,
        "47": 1,
        "48": 1,
        "49": 1,
        "50": 1,
        "51": 1,
        "52": 1,
        "53": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 54,
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 54,
                "column": 2
              },
              "end": {
                "line": 54,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 54,
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 54,
                "column": 2
              },
              "end": {
                "line": 54,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 2
            }
          },
          "line": 54
        }
      },
      "f": {
        "0": 1
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/auth.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/auth.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 36
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 47
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 56
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 18
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 9
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 12
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 2
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 27
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 36
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 24
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 5
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 38
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 18
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 12
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 40
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 59
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 11
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 66
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 16
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 41
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 58
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 15
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 9
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 35
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 13
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 75
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 43
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 47
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 25
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 0
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 80
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 64
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 73
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 13
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 0
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 58
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 36
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 19
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 25
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 24
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 9
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 6
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 1
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 0
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 20
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 38
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 13
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 46
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 24
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 42
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 54
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 18
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 25
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 0
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 24
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 73
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 13
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 19
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 25
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 24
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 9
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 6
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 28,
        "10": 28,
        "11": 5,
        "12": 5,
        "13": 28,
        "14": 28,
        "15": 33,
        "16": 33,
        "17": 33,
        "18": 33,
        "19": 33,
        "20": 16,
        "21": 33,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 16,
        "27": 16,
        "28": 16,
        "29": 16,
        "30": 16,
        "31": 16,
        "32": 16,
        "33": 16,
        "34": 16,
        "35": 33,
        "36": 1,
        "37": 1,
        "38": 1,
        "39": 15,
        "40": 15,
        "41": 15,
        "42": 15,
        "43": 33,
        "44": 0,
        "45": 0,
        "46": 15,
        "47": 28,
        "48": 1,
        "49": 3,
        "50": 3,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 3
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 68,
          "loc": {
            "start": {
              "line": 68,
              "column": 1
            },
            "end": {
              "line": 68,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 68,
                "column": 1
              },
              "end": {
                "line": 68,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 68,
          "loc": {
            "start": {
              "line": 68,
              "column": 1
            },
            "end": {
              "line": 68,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 68,
                "column": 1
              },
              "end": {
                "line": 68,
                "column": 1
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 10,
          "loc": {
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 10,
                "column": 0
              },
              "end": {
                "line": 48,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 11,
          "loc": {
            "start": {
              "line": 11,
              "column": 35
            },
            "end": {
              "line": 13,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 11,
                "column": 35
              },
              "end": {
                "line": 13,
                "column": 5
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 15,
          "loc": {
            "start": {
              "line": 15,
              "column": 11
            },
            "end": {
              "line": 47,
              "column": 6
            }
          },
          "locations": [
            {
              "start": {
                "line": 15,
                "column": 11
              },
              "end": {
                "line": 47,
                "column": 6
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 18,
          "loc": {
            "start": {
              "line": 18,
              "column": 12
            },
            "end": {
              "line": 19,
              "column": 15
            }
          },
          "locations": [
            {
              "start": {
                "line": 18,
                "column": 12
              },
              "end": {
                "line": 19,
                "column": 15
              }
            }
          ]
        },
        "6": {
          "type": "branch",
          "line": 20,
          "loc": {
            "start": {
              "line": 20,
              "column": 10
            },
            "end": {
              "line": 22,
              "column": 15
            }
          },
          "locations": [
            {
              "start": {
                "line": 20,
                "column": 10
              },
              "end": {
                "line": 22,
                "column": 15
              }
            }
          ]
        },
        "7": {
          "type": "branch",
          "line": 22,
          "loc": {
            "start": {
              "line": 22,
              "column": 9
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 9
              },
              "end": {
                "line": 26,
                "column": 9
              }
            }
          ]
        },
        "8": {
          "type": "branch",
          "line": 26,
          "loc": {
            "start": {
              "line": 26,
              "column": 9
            },
            "end": {
              "line": 36,
              "column": 48
            }
          },
          "locations": [
            {
              "start": {
                "line": 26,
                "column": 9
              },
              "end": {
                "line": 36,
                "column": 48
              }
            }
          ]
        },
        "9": {
          "type": "branch",
          "line": 36,
          "loc": {
            "start": {
              "line": 36,
              "column": 79
            },
            "end": {
              "line": 39,
              "column": 13
            }
          },
          "locations": [
            {
              "start": {
                "line": 36,
                "column": 79
              },
              "end": {
                "line": 39,
                "column": 13
              }
            }
          ]
        },
        "10": {
          "type": "branch",
          "line": 39,
          "loc": {
            "start": {
              "line": 39,
              "column": 13
            },
            "end": {
              "line": 44,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 39,
                "column": 13
              },
              "end": {
                "line": 44,
                "column": 10
              }
            }
          ]
        },
        "11": {
          "type": "branch",
          "line": 44,
          "loc": {
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 46,
              "column": 9
            }
          },
          "locations": [
            {
              "start": {
                "line": 44,
                "column": 10
              },
              "end": {
                "line": 46,
                "column": 9
              }
            }
          ]
        },
        "12": {
          "type": "branch",
          "line": 46,
          "loc": {
            "start": {
              "line": 46,
              "column": 9
            },
            "end": {
              "line": 47,
              "column": 6
            }
          },
          "locations": [
            {
              "start": {
                "line": 46,
                "column": 9
              },
              "end": {
                "line": 47,
                "column": 6
              }
            }
          ]
        },
        "13": {
          "type": "branch",
          "line": 50,
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          28
        ],
        "3": [
          5
        ],
        "4": [
          33
        ],
        "5": [
          16
        ],
        "6": [
          16
        ],
        "7": [
          1
        ],
        "8": [
          16
        ],
        "9": [
          1
        ],
        "10": [
          15
        ],
        "11": [
          0
        ],
        "12": [
          15
        ],
        "13": [
          3
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 68,
              "column": 1
            },
            "end": {
              "line": 68,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 68,
              "column": 1
            },
            "end": {
              "line": 68,
              "column": 1
            }
          },
          "line": 68
        },
        "1": {
          "name": "auth",
          "decl": {
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "line": 10
        },
        "2": {
          "name": "isOwner",
          "decl": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 1
            }
          },
          "line": 50
        }
      },
      "f": {
        "0": 1,
        "1": 28,
        "2": 3
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/validateRequest.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/_middlewares/validateRequest.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 33
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 45
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 21
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 48
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 51
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 51
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 6
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 64
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 16
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 13
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 46
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 38
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 29
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 10
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 12
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 25
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 15
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 5
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 19,
        "3": 19,
        "4": 19,
        "5": 19,
        "6": 19,
        "7": 19,
        "8": 19,
        "9": 19,
        "10": 19,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 19,
        "17": 18,
        "18": 18,
        "19": 18,
        "20": 19
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 21,
          "loc": {
            "start": {
              "line": 21,
              "column": 1
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 1
              },
              "end": {
                "line": 21,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 21,
          "loc": {
            "start": {
              "line": 21,
              "column": 1
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 1
              },
              "end": {
                "line": 21,
                "column": 1
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 3,
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 11,
          "loc": {
            "start": {
              "line": 11,
              "column": 15
            },
            "end": {
              "line": 17,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 11,
                "column": 15
              },
              "end": {
                "line": 17,
                "column": 11
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 17,
          "loc": {
            "start": {
              "line": 17,
              "column": 5
            },
            "end": {
              "line": 20,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 17,
                "column": 5
              },
              "end": {
                "line": 20,
                "column": 5
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 14,
          "loc": {
            "start": {
              "line": 14,
              "column": 22
            },
            "end": {
              "line": 14,
              "column": 38
            }
          },
          "locations": [
            {
              "start": {
                "line": 14,
                "column": 22
              },
              "end": {
                "line": 14,
                "column": 38
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          19
        ],
        "3": [
          1
        ],
        "4": [
          18
        ],
        "5": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 21,
              "column": 1
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 21,
              "column": 1
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "line": 21
        },
        "1": {
          "name": "validateRequest",
          "decl": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "line": 3
        }
      },
      "f": {
        "0": 1,
        "1": 19
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 32
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 7
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 17
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 17
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 17
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 22
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 33
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 46
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 58
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 41
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 43
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 66
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 55
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 61
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 42
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 36
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 69
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 49
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 39
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 0
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 24
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 32
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 41
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 15
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 35
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 36
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 38
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 10
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 21
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 1
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 35
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 31
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 15
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 46
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 36
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 29
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 21
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 22
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 24
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 102
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 15
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 10
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 21
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 1
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 0
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 43
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 34
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 15
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 46
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 36
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 29
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 21
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 22
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 24
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 102
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 15
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 10
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 21
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 1
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 0
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 38
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 15
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 30
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 70
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 21
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 1
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 0
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 33
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 15
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 17
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 47
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 21
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 1
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 0
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 34
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 68
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 80
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 64
          }
        },
        "82": {
          "start": {
            "line": 83,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 5
          }
        },
        "83": {
          "start": {
            "line": 84,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 0
          }
        },
        "84": {
          "start": {
            "line": 85,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 15
          }
        },
        "85": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 31
          }
        },
        "86": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 87,
            "column": 79
          }
        },
        "87": {
          "start": {
            "line": 88,
            "column": 0
          },
          "end": {
            "line": 88,
            "column": 21
          }
        },
        "88": {
          "start": {
            "line": 89,
            "column": 0
          },
          "end": {
            "line": 89,
            "column": 1
          }
        },
        "89": {
          "start": {
            "line": 90,
            "column": 0
          },
          "end": {
            "line": 90,
            "column": 0
          }
        },
        "90": {
          "start": {
            "line": 91,
            "column": 0
          },
          "end": {
            "line": 91,
            "column": 33
          }
        },
        "91": {
          "start": {
            "line": 92,
            "column": 0
          },
          "end": {
            "line": 92,
            "column": 15
          }
        },
        "92": {
          "start": {
            "line": 93,
            "column": 0
          },
          "end": {
            "line": 93,
            "column": 25
          }
        },
        "93": {
          "start": {
            "line": 94,
            "column": 0
          },
          "end": {
            "line": 94,
            "column": 45
          }
        },
        "94": {
          "start": {
            "line": 95,
            "column": 0
          },
          "end": {
            "line": 95,
            "column": 21
          }
        },
        "95": {
          "start": {
            "line": 96,
            "column": 0
          },
          "end": {
            "line": 96,
            "column": 1
          }
        },
        "96": {
          "start": {
            "line": 97,
            "column": 0
          },
          "end": {
            "line": 97,
            "column": 0
          }
        },
        "97": {
          "start": {
            "line": 98,
            "column": 0
          },
          "end": {
            "line": 98,
            "column": 33
          }
        },
        "98": {
          "start": {
            "line": 99,
            "column": 0
          },
          "end": {
            "line": 99,
            "column": 71
          }
        },
        "99": {
          "start": {
            "line": 100,
            "column": 0
          },
          "end": {
            "line": 100,
            "column": 80
          }
        },
        "100": {
          "start": {
            "line": 101,
            "column": 0
          },
          "end": {
            "line": 101,
            "column": 64
          }
        },
        "101": {
          "start": {
            "line": 102,
            "column": 0
          },
          "end": {
            "line": 102,
            "column": 5
          }
        },
        "102": {
          "start": {
            "line": 103,
            "column": 0
          },
          "end": {
            "line": 103,
            "column": 0
          }
        },
        "103": {
          "start": {
            "line": 104,
            "column": 0
          },
          "end": {
            "line": 104,
            "column": 15
          }
        },
        "104": {
          "start": {
            "line": 105,
            "column": 0
          },
          "end": {
            "line": 105,
            "column": 40
          }
        },
        "105": {
          "start": {
            "line": 106,
            "column": 0
          },
          "end": {
            "line": 106,
            "column": 45
          }
        },
        "106": {
          "start": {
            "line": 107,
            "column": 0
          },
          "end": {
            "line": 107,
            "column": 21
          }
        },
        "107": {
          "start": {
            "line": 108,
            "column": 0
          },
          "end": {
            "line": 108,
            "column": 1
          }
        },
        "108": {
          "start": {
            "line": 109,
            "column": 0
          },
          "end": {
            "line": 109,
            "column": 0
          }
        },
        "109": {
          "start": {
            "line": 110,
            "column": 0
          },
          "end": {
            "line": 110,
            "column": 34
          }
        },
        "110": {
          "start": {
            "line": 111,
            "column": 0
          },
          "end": {
            "line": 111,
            "column": 71
          }
        },
        "111": {
          "start": {
            "line": 112,
            "column": 0
          },
          "end": {
            "line": 112,
            "column": 80
          }
        },
        "112": {
          "start": {
            "line": 113,
            "column": 0
          },
          "end": {
            "line": 113,
            "column": 64
          }
        },
        "113": {
          "start": {
            "line": 114,
            "column": 0
          },
          "end": {
            "line": 114,
            "column": 5
          }
        },
        "114": {
          "start": {
            "line": 115,
            "column": 0
          },
          "end": {
            "line": 115,
            "column": 0
          }
        },
        "115": {
          "start": {
            "line": 116,
            "column": 0
          },
          "end": {
            "line": 116,
            "column": 15
          }
        },
        "116": {
          "start": {
            "line": 117,
            "column": 0
          },
          "end": {
            "line": 117,
            "column": 29
          }
        },
        "117": {
          "start": {
            "line": 118,
            "column": 0
          },
          "end": {
            "line": 118,
            "column": 19
          }
        },
        "118": {
          "start": {
            "line": 119,
            "column": 0
          },
          "end": {
            "line": 119,
            "column": 22
          }
        },
        "119": {
          "start": {
            "line": 120,
            "column": 0
          },
          "end": {
            "line": 120,
            "column": 56
          }
        },
        "120": {
          "start": {
            "line": 121,
            "column": 0
          },
          "end": {
            "line": 121,
            "column": 34
          }
        },
        "121": {
          "start": {
            "line": 122,
            "column": 0
          },
          "end": {
            "line": 122,
            "column": 14
          }
        },
        "122": {
          "start": {
            "line": 123,
            "column": 0
          },
          "end": {
            "line": 123,
            "column": 9
          }
        },
        "123": {
          "start": {
            "line": 124,
            "column": 0
          },
          "end": {
            "line": 124,
            "column": 21
          }
        },
        "124": {
          "start": {
            "line": 125,
            "column": 0
          },
          "end": {
            "line": 125,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 11,
        "25": 11,
        "26": 11,
        "27": 11,
        "28": 11,
        "29": 11,
        "30": 11,
        "31": 11,
        "32": 11,
        "33": 1,
        "34": 2,
        "35": 2,
        "36": 2,
        "37": 2,
        "38": 2,
        "39": 1,
        "40": 1,
        "41": 1,
        "42": 1,
        "43": 1,
        "44": 1,
        "45": 1,
        "46": 2,
        "47": 2,
        "48": 1,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 1,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 1,
        "71": 1,
        "72": 1,
        "73": 1,
        "74": 1,
        "75": 1,
        "76": 1,
        "77": 1,
        "78": 1,
        "79": 1,
        "80": 1,
        "81": 0,
        "82": 0,
        "83": 1,
        "84": 1,
        "85": 1,
        "86": 1,
        "87": 1,
        "88": 1,
        "89": 1,
        "90": 1,
        "91": 1,
        "92": 1,
        "93": 1,
        "94": 1,
        "95": 1,
        "96": 1,
        "97": 2,
        "98": 2,
        "99": 2,
        "100": 0,
        "101": 0,
        "102": 2,
        "103": 2,
        "104": 2,
        "105": 2,
        "106": 2,
        "107": 2,
        "108": 1,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 125,
          "loc": {
            "start": {
              "line": 125,
              "column": 1
            },
            "end": {
              "line": 125,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 125,
                "column": 1
              },
              "end": {
                "line": 125,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 125,
          "loc": {
            "start": {
              "line": 125,
              "column": 1
            },
            "end": {
              "line": 125,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 125,
                "column": 1
              },
              "end": {
                "line": 125,
                "column": 1
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 25,
          "loc": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 25,
                "column": 0
              },
              "end": {
                "line": 33,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 14
            },
            "end": {
              "line": 31,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 14
              },
              "end": {
                "line": 31,
                "column": 10
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 35,
          "loc": {
            "start": {
              "line": 35,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 35,
                "column": 0
              },
              "end": {
                "line": 48,
                "column": 1
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 39,
          "loc": {
            "start": {
              "line": 39,
              "column": 14
            },
            "end": {
              "line": 46,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 39,
                "column": 14
              },
              "end": {
                "line": 46,
                "column": 10
              }
            }
          ]
        },
        "6": {
          "type": "branch",
          "line": 72,
          "loc": {
            "start": {
              "line": 72,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 72,
                "column": 0
              },
              "end": {
                "line": 77,
                "column": 1
              }
            }
          ]
        },
        "7": {
          "type": "branch",
          "line": 75,
          "loc": {
            "start": {
              "line": 75,
              "column": 15
            },
            "end": {
              "line": 75,
              "column": 31
            }
          },
          "locations": [
            {
              "start": {
                "line": 75,
                "column": 15
              },
              "end": {
                "line": 75,
                "column": 31
              }
            }
          ]
        },
        "8": {
          "type": "branch",
          "line": 79,
          "loc": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 89,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 89,
                "column": 1
              }
            }
          ]
        },
        "9": {
          "type": "branch",
          "line": 81,
          "loc": {
            "start": {
              "line": 81,
              "column": 79
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 81,
                "column": 79
              },
              "end": {
                "line": 83,
                "column": 5
              }
            }
          ]
        },
        "10": {
          "type": "branch",
          "line": 87,
          "loc": {
            "start": {
              "line": 87,
              "column": 15
            },
            "end": {
              "line": 87,
              "column": 61
            }
          },
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 15
              },
              "end": {
                "line": 87,
                "column": 61
              }
            }
          ]
        },
        "11": {
          "type": "branch",
          "line": 87,
          "loc": {
            "start": {
              "line": 87,
              "column": 35
            },
            "end": {
              "line": 87,
              "column": 61
            }
          },
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 35
              },
              "end": {
                "line": 87,
                "column": 61
              }
            }
          ]
        },
        "12": {
          "type": "branch",
          "line": 91,
          "loc": {
            "start": {
              "line": 91,
              "column": 0
            },
            "end": {
              "line": 96,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 91,
                "column": 0
              },
              "end": {
                "line": 96,
                "column": 1
              }
            }
          ]
        },
        "13": {
          "type": "branch",
          "line": 94,
          "loc": {
            "start": {
              "line": 94,
              "column": 15
            },
            "end": {
              "line": 94,
              "column": 30
            }
          },
          "locations": [
            {
              "start": {
                "line": 94,
                "column": 15
              },
              "end": {
                "line": 94,
                "column": 30
              }
            }
          ]
        },
        "14": {
          "type": "branch",
          "line": 98,
          "loc": {
            "start": {
              "line": 98,
              "column": 0
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 98,
                "column": 0
              },
              "end": {
                "line": 108,
                "column": 1
              }
            }
          ]
        },
        "15": {
          "type": "branch",
          "line": 100,
          "loc": {
            "start": {
              "line": 100,
              "column": 79
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 100,
                "column": 79
              },
              "end": {
                "line": 102,
                "column": 5
              }
            }
          ]
        },
        "16": {
          "type": "branch",
          "line": 106,
          "loc": {
            "start": {
              "line": 106,
              "column": 15
            },
            "end": {
              "line": 106,
              "column": 30
            }
          },
          "locations": [
            {
              "start": {
                "line": 106,
                "column": 15
              },
              "end": {
                "line": 106,
                "column": 30
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          11
        ],
        "3": [
          11
        ],
        "4": [
          2
        ],
        "5": [
          1
        ],
        "6": [
          1
        ],
        "7": [
          1
        ],
        "8": [
          1
        ],
        "9": [
          0
        ],
        "10": [
          1
        ],
        "11": [
          0
        ],
        "12": [
          1
        ],
        "13": [
          1
        ],
        "14": [
          2
        ],
        "15": [
          0
        ],
        "16": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 125,
              "column": 1
            },
            "end": {
              "line": 125,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 125,
              "column": 1
            },
            "end": {
              "line": 125,
              "column": 1
            }
          },
          "line": 125
        },
        "1": {
          "name": "login",
          "decl": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 1
            }
          },
          "line": 25
        },
        "2": {
          "name": "register",
          "decl": {
            "start": {
              "line": 35,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 35,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "line": 35
        },
        "3": {
          "name": "registerCustomer",
          "decl": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 63,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 63,
              "column": 1
            }
          },
          "line": 50
        },
        "4": {
          "name": "verifyEmail",
          "decl": {
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 70,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 70,
              "column": 1
            }
          },
          "line": 65
        },
        "5": {
          "name": "getAll",
          "decl": {
            "start": {
              "line": 72,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 72,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "line": 72
        },
        "6": {
          "name": "getById",
          "decl": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 89,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 89,
              "column": 1
            }
          },
          "line": 79
        },
        "7": {
          "name": "create",
          "decl": {
            "start": {
              "line": 91,
              "column": 0
            },
            "end": {
              "line": 96,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 91,
              "column": 0
            },
            "end": {
              "line": 96,
              "column": 1
            }
          },
          "line": 91
        },
        "8": {
          "name": "update",
          "decl": {
            "start": {
              "line": 98,
              "column": 0
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 98,
              "column": 0
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "line": 98
        },
        "9": {
          "name": "_delete",
          "decl": {
            "start": {
              "line": 110,
              "column": 0
            },
            "end": {
              "line": 125,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 110,
              "column": 0
            },
            "end": {
              "line": 125,
              "column": 1
            }
          },
          "line": 110
        }
      },
      "f": {
        "0": 1,
        "1": 11,
        "2": 2,
        "3": 0,
        "4": 0,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 2,
        "9": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.service.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.service.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 43
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 39
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 33
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 33
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 47
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 18
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 7
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 19
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 18
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 21
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 25
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 25
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 20
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 7
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 10
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 13
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 16
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 11
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 11
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 11
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 12
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 20
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 2
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 43
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 48
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 8
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 19
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 33
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 59
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 7
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 66
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 20
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 5
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 51
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 0
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 12
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 36
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 14
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 6
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 1
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 0
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 41
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 15
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 52
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 80
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 66
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 32
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 64
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 10
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 0
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 20
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 5
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 0
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 45
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 0
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 18
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 52
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 0
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 42
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 0
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 12
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 22
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 14
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 6
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 1
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 0
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 39
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 67
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 0
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 46
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 0
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 34
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 29
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 25
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 32
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 7
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 1
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 0
          }
        },
        "82": {
          "start": {
            "line": 83,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 31
          }
        },
        "83": {
          "start": {
            "line": 84,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 15
          }
        },
        "84": {
          "start": {
            "line": 85,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 52
          }
        },
        "85": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 67
          }
        },
        "86": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 87,
            "column": 5
          }
        },
        "87": {
          "start": {
            "line": 88,
            "column": 0
          },
          "end": {
            "line": 88,
            "column": 0
          }
        },
        "88": {
          "start": {
            "line": 89,
            "column": 0
          },
          "end": {
            "line": 89,
            "column": 45
          }
        },
        "89": {
          "start": {
            "line": 90,
            "column": 0
          },
          "end": {
            "line": 90,
            "column": 0
          }
        },
        "90": {
          "start": {
            "line": 91,
            "column": 0
          },
          "end": {
            "line": 91,
            "column": 34
          }
        },
        "91": {
          "start": {
            "line": 92,
            "column": 0
          },
          "end": {
            "line": 92,
            "column": 0
          }
        },
        "92": {
          "start": {
            "line": 93,
            "column": 0
          },
          "end": {
            "line": 93,
            "column": 33
          }
        },
        "93": {
          "start": {
            "line": 94,
            "column": 0
          },
          "end": {
            "line": 94,
            "column": 1
          }
        },
        "94": {
          "start": {
            "line": 95,
            "column": 0
          },
          "end": {
            "line": 95,
            "column": 0
          }
        },
        "95": {
          "start": {
            "line": 96,
            "column": 0
          },
          "end": {
            "line": 96,
            "column": 35
          }
        },
        "96": {
          "start": {
            "line": 97,
            "column": 0
          },
          "end": {
            "line": 97,
            "column": 45
          }
        },
        "97": {
          "start": {
            "line": 98,
            "column": 0
          },
          "end": {
            "line": 98,
            "column": 0
          }
        },
        "98": {
          "start": {
            "line": 99,
            "column": 0
          },
          "end": {
            "line": 99,
            "column": 36
          }
        },
        "99": {
          "start": {
            "line": 100,
            "column": 0
          },
          "end": {
            "line": 100,
            "column": 8
          }
        },
        "100": {
          "start": {
            "line": 101,
            "column": 0
          },
          "end": {
            "line": 101,
            "column": 23
          }
        },
        "101": {
          "start": {
            "line": 102,
            "column": 0
          },
          "end": {
            "line": 102,
            "column": 41
          }
        },
        "102": {
          "start": {
            "line": 103,
            "column": 0
          },
          "end": {
            "line": 103,
            "column": 51
          }
        },
        "103": {
          "start": {
            "line": 104,
            "column": 0
          },
          "end": {
            "line": 104,
            "column": 7
          }
        },
        "104": {
          "start": {
            "line": 105,
            "column": 0
          },
          "end": {
            "line": 105,
            "column": 74
          }
        },
        "105": {
          "start": {
            "line": 106,
            "column": 0
          },
          "end": {
            "line": 106,
            "column": 20
          }
        },
        "106": {
          "start": {
            "line": 107,
            "column": 0
          },
          "end": {
            "line": 107,
            "column": 5
          }
        },
        "107": {
          "start": {
            "line": 108,
            "column": 0
          },
          "end": {
            "line": 108,
            "column": 0
          }
        },
        "108": {
          "start": {
            "line": 109,
            "column": 0
          },
          "end": {
            "line": 109,
            "column": 38
          }
        },
        "109": {
          "start": {
            "line": 110,
            "column": 0
          },
          "end": {
            "line": 110,
            "column": 26
          }
        },
        "110": {
          "start": {
            "line": 111,
            "column": 0
          },
          "end": {
            "line": 111,
            "column": 54
          }
        },
        "111": {
          "start": {
            "line": 112,
            "column": 0
          },
          "end": {
            "line": 112,
            "column": 5
          }
        },
        "112": {
          "start": {
            "line": 113,
            "column": 0
          },
          "end": {
            "line": 113,
            "column": 0
          }
        },
        "113": {
          "start": {
            "line": 114,
            "column": 0
          },
          "end": {
            "line": 114,
            "column": 80
          }
        },
        "114": {
          "start": {
            "line": 115,
            "column": 0
          },
          "end": {
            "line": 115,
            "column": 0
          }
        },
        "115": {
          "start": {
            "line": 116,
            "column": 0
          },
          "end": {
            "line": 116,
            "column": 37
          }
        },
        "116": {
          "start": {
            "line": 117,
            "column": 0
          },
          "end": {
            "line": 117,
            "column": 1
          }
        },
        "117": {
          "start": {
            "line": 118,
            "column": 0
          },
          "end": {
            "line": 118,
            "column": 0
          }
        },
        "118": {
          "start": {
            "line": 119,
            "column": 0
          },
          "end": {
            "line": 119,
            "column": 57
          }
        },
        "119": {
          "start": {
            "line": 120,
            "column": 0
          },
          "end": {
            "line": 120,
            "column": 25
          }
        },
        "120": {
          "start": {
            "line": 121,
            "column": 0
          },
          "end": {
            "line": 121,
            "column": 40
          }
        },
        "121": {
          "start": {
            "line": 122,
            "column": 0
          },
          "end": {
            "line": 122,
            "column": 48
          }
        },
        "122": {
          "start": {
            "line": 123,
            "column": 0
          },
          "end": {
            "line": 123,
            "column": 1
          }
        },
        "123": {
          "start": {
            "line": 124,
            "column": 0
          },
          "end": {
            "line": 124,
            "column": 0
          }
        },
        "124": {
          "start": {
            "line": 125,
            "column": 0
          },
          "end": {
            "line": 125,
            "column": 28
          }
        },
        "125": {
          "start": {
            "line": 126,
            "column": 0
          },
          "end": {
            "line": 126,
            "column": 45
          }
        },
        "126": {
          "start": {
            "line": 127,
            "column": 0
          },
          "end": {
            "line": 127,
            "column": 33
          }
        },
        "127": {
          "start": {
            "line": 128,
            "column": 0
          },
          "end": {
            "line": 128,
            "column": 1
          }
        },
        "128": {
          "start": {
            "line": 129,
            "column": 0
          },
          "end": {
            "line": 129,
            "column": 0
          }
        },
        "129": {
          "start": {
            "line": 130,
            "column": 0
          },
          "end": {
            "line": 130,
            "column": 37
          }
        },
        "130": {
          "start": {
            "line": 131,
            "column": 0
          },
          "end": {
            "line": 131,
            "column": 28
          }
        },
        "131": {
          "start": {
            "line": 132,
            "column": 0
          },
          "end": {
            "line": 132,
            "column": 38
          }
        },
        "132": {
          "start": {
            "line": 133,
            "column": 0
          },
          "end": {
            "line": 133,
            "column": 1
          }
        },
        "133": {
          "start": {
            "line": 134,
            "column": 0
          },
          "end": {
            "line": 134,
            "column": 0
          }
        },
        "134": {
          "start": {
            "line": 135,
            "column": 0
          },
          "end": {
            "line": 135,
            "column": 57
          }
        },
        "135": {
          "start": {
            "line": 136,
            "column": 0
          },
          "end": {
            "line": 136,
            "column": 34
          }
        },
        "136": {
          "start": {
            "line": 137,
            "column": 0
          },
          "end": {
            "line": 137,
            "column": 38
          }
        },
        "137": {
          "start": {
            "line": 138,
            "column": 0
          },
          "end": {
            "line": 138,
            "column": 28
          }
        },
        "138": {
          "start": {
            "line": 139,
            "column": 0
          },
          "end": {
            "line": 139,
            "column": 17
          }
        },
        "139": {
          "start": {
            "line": 140,
            "column": 0
          },
          "end": {
            "line": 140,
            "column": 19
          }
        },
        "140": {
          "start": {
            "line": 141,
            "column": 0
          },
          "end": {
            "line": 141,
            "column": 1
          }
        },
        "141": {
          "start": {
            "line": 142,
            "column": 0
          },
          "end": {
            "line": 142,
            "column": 0
          }
        },
        "142": {
          "start": {
            "line": 143,
            "column": 0
          },
          "end": {
            "line": 143,
            "column": 35
          }
        },
        "143": {
          "start": {
            "line": 144,
            "column": 0
          },
          "end": {
            "line": 144,
            "column": 79
          }
        },
        "144": {
          "start": {
            "line": 145,
            "column": 0
          },
          "end": {
            "line": 145,
            "column": 0
          }
        },
        "145": {
          "start": {
            "line": 146,
            "column": 0
          },
          "end": {
            "line": 146,
            "column": 43
          }
        },
        "146": {
          "start": {
            "line": 147,
            "column": 0
          },
          "end": {
            "line": 147,
            "column": 52
          }
        },
        "147": {
          "start": {
            "line": 148,
            "column": 0
          },
          "end": {
            "line": 148,
            "column": 50
          }
        },
        "148": {
          "start": {
            "line": 149,
            "column": 0
          },
          "end": {
            "line": 149,
            "column": 0
          }
        },
        "149": {
          "start": {
            "line": 150,
            "column": 0
          },
          "end": {
            "line": 150,
            "column": 21
          }
        },
        "150": {
          "start": {
            "line": 151,
            "column": 0
          },
          "end": {
            "line": 151,
            "column": 47
          }
        },
        "151": {
          "start": {
            "line": 152,
            "column": 0
          },
          "end": {
            "line": 152,
            "column": 14
          }
        },
        "152": {
          "start": {
            "line": 153,
            "column": 0
          },
          "end": {
            "line": 153,
            "column": 18
          }
        },
        "153": {
          "start": {
            "line": 154,
            "column": 0
          },
          "end": {
            "line": 154,
            "column": 17
          }
        },
        "154": {
          "start": {
            "line": 155,
            "column": 0
          },
          "end": {
            "line": 155,
            "column": 33
          }
        },
        "155": {
          "start": {
            "line": 156,
            "column": 0
          },
          "end": {
            "line": 156,
            "column": 20
          }
        },
        "156": {
          "start": {
            "line": 157,
            "column": 0
          },
          "end": {
            "line": 157,
            "column": 19
          }
        },
        "157": {
          "start": {
            "line": 158,
            "column": 0
          },
          "end": {
            "line": 158,
            "column": 21
          }
        },
        "158": {
          "start": {
            "line": 159,
            "column": 0
          },
          "end": {
            "line": 159,
            "column": 26
          }
        },
        "159": {
          "start": {
            "line": 160,
            "column": 0
          },
          "end": {
            "line": 160,
            "column": 43
          }
        },
        "160": {
          "start": {
            "line": 161,
            "column": 0
          },
          "end": {
            "line": 161,
            "column": 26
          }
        },
        "161": {
          "start": {
            "line": 162,
            "column": 0
          },
          "end": {
            "line": 162,
            "column": 7
          }
        },
        "162": {
          "start": {
            "line": 163,
            "column": 0
          },
          "end": {
            "line": 163,
            "column": 0
          }
        },
        "163": {
          "start": {
            "line": 164,
            "column": 0
          },
          "end": {
            "line": 164,
            "column": 33
          }
        },
        "164": {
          "start": {
            "line": 165,
            "column": 0
          },
          "end": {
            "line": 165,
            "column": 1
          }
        },
        "165": {
          "start": {
            "line": 166,
            "column": 0
          },
          "end": {
            "line": 166,
            "column": 0
          }
        },
        "166": {
          "start": {
            "line": 167,
            "column": 0
          },
          "end": {
            "line": 167,
            "column": 31
          }
        },
        "167": {
          "start": {
            "line": 168,
            "column": 0
          },
          "end": {
            "line": 168,
            "column": 43
          }
        },
        "168": {
          "start": {
            "line": 169,
            "column": 0
          },
          "end": {
            "line": 169,
            "column": 1
          }
        },
        "169": {
          "start": {
            "line": 170,
            "column": 0
          },
          "end": {
            "line": 170,
            "column": 0
          }
        },
        "170": {
          "start": {
            "line": 171,
            "column": 0
          },
          "end": {
            "line": 171,
            "column": 30
          }
        },
        "171": {
          "start": {
            "line": 172,
            "column": 0
          },
          "end": {
            "line": 172,
            "column": 50
          }
        },
        "172": {
          "start": {
            "line": 173,
            "column": 0
          },
          "end": {
            "line": 173,
            "column": 1
          }
        },
        "173": {
          "start": {
            "line": 174,
            "column": 0
          },
          "end": {
            "line": 174,
            "column": 0
          }
        },
        "174": {
          "start": {
            "line": 175,
            "column": 0
          },
          "end": {
            "line": 175,
            "column": 32
          }
        },
        "175": {
          "start": {
            "line": 176,
            "column": 0
          },
          "end": {
            "line": 176,
            "column": 11
          }
        },
        "176": {
          "start": {
            "line": 177,
            "column": 0
          },
          "end": {
            "line": 177,
            "column": 11
          }
        },
        "177": {
          "start": {
            "line": 178,
            "column": 0
          },
          "end": {
            "line": 178,
            "column": 18
          }
        },
        "178": {
          "start": {
            "line": 179,
            "column": 0
          },
          "end": {
            "line": 179,
            "column": 17
          }
        },
        "179": {
          "start": {
            "line": 180,
            "column": 0
          },
          "end": {
            "line": 180,
            "column": 14
          }
        },
        "180": {
          "start": {
            "line": 181,
            "column": 0
          },
          "end": {
            "line": 181,
            "column": 13
          }
        },
        "181": {
          "start": {
            "line": 182,
            "column": 0
          },
          "end": {
            "line": 182,
            "column": 16
          }
        },
        "182": {
          "start": {
            "line": 183,
            "column": 0
          },
          "end": {
            "line": 183,
            "column": 16
          }
        },
        "183": {
          "start": {
            "line": 184,
            "column": 0
          },
          "end": {
            "line": 184,
            "column": 19
          }
        },
        "184": {
          "start": {
            "line": 185,
            "column": 0
          },
          "end": {
            "line": 185,
            "column": 16
          }
        },
        "185": {
          "start": {
            "line": 186,
            "column": 0
          },
          "end": {
            "line": 186,
            "column": 12
          }
        },
        "186": {
          "start": {
            "line": 187,
            "column": 0
          },
          "end": {
            "line": 187,
            "column": 11
          }
        },
        "187": {
          "start": {
            "line": 188,
            "column": 0
          },
          "end": {
            "line": 188,
            "column": 18
          }
        },
        "188": {
          "start": {
            "line": 189,
            "column": 0
          },
          "end": {
            "line": 189,
            "column": 17
          }
        },
        "189": {
          "start": {
            "line": 190,
            "column": 0
          },
          "end": {
            "line": 190,
            "column": 14
          }
        },
        "190": {
          "start": {
            "line": 191,
            "column": 0
          },
          "end": {
            "line": 191,
            "column": 13
          }
        },
        "191": {
          "start": {
            "line": 192,
            "column": 0
          },
          "end": {
            "line": 192,
            "column": 16
          }
        },
        "192": {
          "start": {
            "line": 193,
            "column": 0
          },
          "end": {
            "line": 193,
            "column": 16
          }
        },
        "193": {
          "start": {
            "line": 194,
            "column": 0
          },
          "end": {
            "line": 194,
            "column": 19
          }
        },
        "194": {
          "start": {
            "line": 195,
            "column": 0
          },
          "end": {
            "line": 195,
            "column": 6
          }
        },
        "195": {
          "start": {
            "line": 196,
            "column": 0
          },
          "end": {
            "line": 196,
            "column": 1
          }
        },
        "196": {
          "start": {
            "line": 197,
            "column": 0
          },
          "end": {
            "line": 197,
            "column": 0
          }
        },
        "197": {
          "start": {
            "line": 198,
            "column": 0
          },
          "end": {
            "line": 198,
            "column": 55
          }
        },
        "198": {
          "start": {
            "line": 199,
            "column": 0
          },
          "end": {
            "line": 199,
            "column": 16
          }
        },
        "199": {
          "start": {
            "line": 200,
            "column": 0
          },
          "end": {
            "line": 200,
            "column": 17
          }
        },
        "200": {
          "start": {
            "line": 201,
            "column": 0
          },
          "end": {
            "line": 201,
            "column": 91
          }
        },
        "201": {
          "start": {
            "line": 202,
            "column": 0
          },
          "end": {
            "line": 202,
            "column": 84
          }
        },
        "202": {
          "start": {
            "line": 203,
            "column": 0
          },
          "end": {
            "line": 203,
            "column": 54
          }
        },
        "203": {
          "start": {
            "line": 204,
            "column": 0
          },
          "end": {
            "line": 204,
            "column": 10
          }
        },
        "204": {
          "start": {
            "line": 205,
            "column": 0
          },
          "end": {
            "line": 205,
            "column": 12
          }
        },
        "205": {
          "start": {
            "line": 206,
            "column": 0
          },
          "end": {
            "line": 206,
            "column": 133
          }
        },
        "206": {
          "start": {
            "line": 207,
            "column": 0
          },
          "end": {
            "line": 207,
            "column": 69
          }
        },
        "207": {
          "start": {
            "line": 208,
            "column": 0
          },
          "end": {
            "line": 208,
            "column": 5
          }
        },
        "208": {
          "start": {
            "line": 209,
            "column": 0
          },
          "end": {
            "line": 209,
            "column": 0
          }
        },
        "209": {
          "start": {
            "line": 210,
            "column": 0
          },
          "end": {
            "line": 210,
            "column": 21
          }
        },
        "210": {
          "start": {
            "line": 211,
            "column": 0
          },
          "end": {
            "line": 211,
            "column": 26
          }
        },
        "211": {
          "start": {
            "line": 212,
            "column": 0
          },
          "end": {
            "line": 212,
            "column": 59
          }
        },
        "212": {
          "start": {
            "line": 213,
            "column": 0
          },
          "end": {
            "line": 213,
            "column": 36
          }
        },
        "213": {
          "start": {
            "line": 214,
            "column": 0
          },
          "end": {
            "line": 214,
            "column": 38
          }
        },
        "214": {
          "start": {
            "line": 215,
            "column": 0
          },
          "end": {
            "line": 215,
            "column": 20
          }
        },
        "215": {
          "start": {
            "line": 216,
            "column": 0
          },
          "end": {
            "line": 216,
            "column": 7
          }
        },
        "216": {
          "start": {
            "line": 217,
            "column": 0
          },
          "end": {
            "line": 217,
            "column": 1
          }
        },
        "217": {
          "start": {
            "line": 218,
            "column": 0
          },
          "end": {
            "line": 218,
            "column": 0
          }
        },
        "218": {
          "start": {
            "line": 219,
            "column": 0
          },
          "end": {
            "line": 219,
            "column": 58
          }
        },
        "219": {
          "start": {
            "line": 220,
            "column": 0
          },
          "end": {
            "line": 220,
            "column": 16
          }
        },
        "220": {
          "start": {
            "line": 221,
            "column": 0
          },
          "end": {
            "line": 221,
            "column": 17
          }
        },
        "221": {
          "start": {
            "line": 222,
            "column": 0
          },
          "end": {
            "line": 222,
            "column": 143
          }
        },
        "222": {
          "start": {
            "line": 223,
            "column": 0
          },
          "end": {
            "line": 223,
            "column": 12
          }
        },
        "223": {
          "start": {
            "line": 224,
            "column": 0
          },
          "end": {
            "line": 224,
            "column": 130
          }
        },
        "224": {
          "start": {
            "line": 225,
            "column": 0
          },
          "end": {
            "line": 225,
            "column": 5
          }
        },
        "225": {
          "start": {
            "line": 226,
            "column": 0
          },
          "end": {
            "line": 226,
            "column": 0
          }
        },
        "226": {
          "start": {
            "line": 227,
            "column": 0
          },
          "end": {
            "line": 227,
            "column": 21
          }
        },
        "227": {
          "start": {
            "line": 228,
            "column": 0
          },
          "end": {
            "line": 228,
            "column": 18
          }
        },
        "228": {
          "start": {
            "line": 229,
            "column": 0
          },
          "end": {
            "line": 229,
            "column": 71
          }
        },
        "229": {
          "start": {
            "line": 230,
            "column": 0
          },
          "end": {
            "line": 230,
            "column": 48
          }
        },
        "230": {
          "start": {
            "line": 231,
            "column": 0
          },
          "end": {
            "line": 231,
            "column": 81
          }
        },
        "231": {
          "start": {
            "line": 232,
            "column": 0
          },
          "end": {
            "line": 232,
            "column": 27
          }
        },
        "232": {
          "start": {
            "line": 233,
            "column": 0
          },
          "end": {
            "line": 233,
            "column": 7
          }
        },
        "233": {
          "start": {
            "line": 234,
            "column": 0
          },
          "end": {
            "line": 234,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 44,
        "26": 44,
        "27": 11,
        "28": 11,
        "29": 11,
        "30": 11,
        "31": 44,
        "32": 44,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 11,
        "37": 11,
        "38": 11,
        "39": 44,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 1,
        "45": 6,
        "46": 6,
        "47": 6,
        "48": 1,
        "49": 1,
        "50": 1,
        "51": 1,
        "52": 1,
        "53": 1,
        "54": 1,
        "55": 1,
        "56": 1,
        "57": 1,
        "58": 1,
        "59": 1,
        "60": 1,
        "61": 1,
        "62": 1,
        "63": 1,
        "64": 6,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 1,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 1,
        "82": 3,
        "83": 3,
        "84": 3,
        "85": 0,
        "86": 0,
        "87": 1,
        "88": 1,
        "89": 1,
        "90": 1,
        "91": 1,
        "92": 3,
        "93": 0,
        "94": 1,
        "95": 6,
        "96": 6,
        "97": 2,
        "98": 2,
        "99": 2,
        "100": 6,
        "101": 1,
        "102": 6,
        "103": 6,
        "104": 1,
        "105": 1,
        "106": 1,
        "107": 1,
        "108": 1,
        "109": 6,
        "110": 0,
        "111": 0,
        "112": 1,
        "113": 1,
        "114": 1,
        "115": 6,
        "116": 0,
        "117": 1,
        "118": 1,
        "119": 2,
        "120": 2,
        "121": 2,
        "122": 0,
        "123": 1,
        "124": 2,
        "125": 2,
        "126": 2,
        "127": 0,
        "128": 1,
        "129": 1,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 1,
        "134": 1,
        "135": 22,
        "136": 22,
        "137": 22,
        "138": 11,
        "139": 22,
        "140": 0,
        "141": 1,
        "142": 6,
        "143": 6,
        "144": 6,
        "145": 6,
        "146": 6,
        "147": 2,
        "148": 2,
        "149": 2,
        "150": 2,
        "151": 2,
        "152": 2,
        "153": 2,
        "154": 2,
        "155": 2,
        "156": 2,
        "157": 2,
        "158": 2,
        "159": 2,
        "160": 2,
        "161": 2,
        "162": 2,
        "163": 6,
        "164": 0,
        "165": 1,
        "166": 4,
        "167": 4,
        "168": 0,
        "169": 1,
        "170": 2,
        "171": 2,
        "172": 2,
        "173": 1,
        "174": 11,
        "175": 11,
        "176": 11,
        "177": 11,
        "178": 11,
        "179": 11,
        "180": 11,
        "181": 11,
        "182": 11,
        "183": 11,
        "184": 11,
        "185": 11,
        "186": 11,
        "187": 11,
        "188": 11,
        "189": 11,
        "190": 11,
        "191": 11,
        "192": 11,
        "193": 11,
        "194": 11,
        "195": 11,
        "196": 1,
        "197": 0,
        "198": 0,
        "199": 0,
        "200": 0,
        "201": 0,
        "202": 0,
        "203": 0,
        "204": 0,
        "205": 0,
        "206": 0,
        "207": 0,
        "208": 0,
        "209": 0,
        "210": 0,
        "211": 0,
        "212": 0,
        "213": 0,
        "214": 0,
        "215": 0,
        "216": 0,
        "217": 1,
        "218": 0,
        "219": 0,
        "220": 0,
        "221": 0,
        "222": 0,
        "223": 0,
        "224": 0,
        "225": 0,
        "226": 0,
        "227": 0,
        "228": 0,
        "229": 0,
        "230": 0,
        "231": 0,
        "232": 0,
        "233": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 234,
          "loc": {
            "start": {
              "line": 234,
              "column": 1
            },
            "end": {
              "line": 234,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 234,
                "column": 1
              },
              "end": {
                "line": 234,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 234,
          "loc": {
            "start": {
              "line": 234,
              "column": 1
            },
            "end": {
              "line": 234,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 234,
                "column": 1
              },
              "end": {
                "line": 234,
                "column": 1
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 26,
          "loc": {
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 44,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 26,
                "column": 0
              },
              "end": {
                "line": 44,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 27,
          "loc": {
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 27,
                "column": 4
              },
              "end": {
                "line": 32,
                "column": 10
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 33,
          "loc": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 33,
                "column": 6
              },
              "end": {
                "line": 36,
                "column": 5
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 36,
          "loc": {
            "start": {
              "line": 36,
              "column": 5
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 36,
                "column": 5
              },
              "end": {
                "line": 40,
                "column": 11
              }
            }
          ]
        },
        "6": {
          "type": "branch",
          "line": 40,
          "loc": {
            "start": {
              "line": 40,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 40,
                "column": 4
              },
              "end": {
                "line": 44,
                "column": 1
              }
            }
          ]
        },
        "7": {
          "type": "branch",
          "line": 46,
          "loc": {
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 1
              }
            }
          ]
        },
        "8": {
          "type": "branch",
          "line": 48,
          "loc": {
            "start": {
              "line": 48,
              "column": 4
            },
            "end": {
              "line": 48,
              "column": 8
            }
          },
          "locations": [
            {
              "start": {
                "line": 48,
                "column": 4
              },
              "end": {
                "line": 48,
                "column": 8
              }
            }
          ]
        },
        "9": {
          "type": "branch",
          "line": 48,
          "loc": {
            "start": {
              "line": 48,
              "column": 51
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 48,
                "column": 51
              },
              "end": {
                "line": 65,
                "column": 11
              }
            }
          ]
        },
        "10": {
          "type": "branch",
          "line": 65,
          "loc": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 65,
                "column": 4
              },
              "end": {
                "line": 69,
                "column": 1
              }
            }
          ]
        },
        "11": {
          "type": "branch",
          "line": 83,
          "loc": {
            "start": {
              "line": 83,
              "column": 0
            },
            "end": {
              "line": 94,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 83,
                "column": 0
              },
              "end": {
                "line": 94,
                "column": 1
              }
            }
          ]
        },
        "12": {
          "type": "branch",
          "line": 85,
          "loc": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 8
            }
          },
          "locations": [
            {
              "start": {
                "line": 85,
                "column": 4
              },
              "end": {
                "line": 85,
                "column": 8
              }
            }
          ]
        },
        "13": {
          "type": "branch",
          "line": 85,
          "loc": {
            "start": {
              "line": 85,
              "column": 51
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 85,
                "column": 51
              },
              "end": {
                "line": 87,
                "column": 5
              }
            }
          ]
        },
        "14": {
          "type": "branch",
          "line": 87,
          "loc": {
            "start": {
              "line": 87,
              "column": 5
            },
            "end": {
              "line": 93,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 5
              },
              "end": {
                "line": 93,
                "column": 11
              }
            }
          ]
        },
        "15": {
          "type": "branch",
          "line": 93,
          "loc": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 93,
                "column": 4
              },
              "end": {
                "line": 94,
                "column": 1
              }
            }
          ]
        },
        "16": {
          "type": "branch",
          "line": 96,
          "loc": {
            "start": {
              "line": 96,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 96,
                "column": 0
              },
              "end": {
                "line": 117,
                "column": 1
              }
            }
          ]
        },
        "17": {
          "type": "branch",
          "line": 97,
          "loc": {
            "start": {
              "line": 97,
              "column": 37
            },
            "end": {
              "line": 101,
              "column": 14
            }
          },
          "locations": [
            {
              "start": {
                "line": 97,
                "column": 37
              },
              "end": {
                "line": 101,
                "column": 14
              }
            }
          ]
        },
        "18": {
          "type": "branch",
          "line": 101,
          "loc": {
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 102,
              "column": 41
            }
          },
          "locations": [
            {
              "start": {
                "line": 101,
                "column": 8
              },
              "end": {
                "line": 102,
                "column": 41
              }
            }
          ]
        },
        "19": {
          "type": "branch",
          "line": 101,
          "loc": {
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 103,
              "column": 28
            }
          },
          "locations": [
            {
              "start": {
                "line": 101,
                "column": 8
              },
              "end": {
                "line": 103,
                "column": 28
              }
            }
          ]
        },
        "20": {
          "type": "branch",
          "line": 104,
          "loc": {
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 8
            }
          },
          "locations": [
            {
              "start": {
                "line": 104,
                "column": 6
              },
              "end": {
                "line": 110,
                "column": 8
              }
            }
          ]
        },
        "21": {
          "type": "branch",
          "line": 110,
          "loc": {
            "start": {
              "line": 110,
              "column": 25
            },
            "end": {
              "line": 112,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 110,
                "column": 25
              },
              "end": {
                "line": 112,
                "column": 5
              }
            }
          ]
        },
        "22": {
          "type": "branch",
          "line": 112,
          "loc": {
            "start": {
              "line": 112,
              "column": 5
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 112,
                "column": 5
              },
              "end": {
                "line": 116,
                "column": 11
              }
            }
          ]
        },
        "23": {
          "type": "branch",
          "line": 116,
          "loc": {
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 116,
                "column": 4
              },
              "end": {
                "line": 117,
                "column": 1
              }
            }
          ]
        },
        "24": {
          "type": "branch",
          "line": 120,
          "loc": {
            "start": {
              "line": 120,
              "column": 0
            },
            "end": {
              "line": 123,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 120,
                "column": 0
              },
              "end": {
                "line": 123,
                "column": 1
              }
            }
          ]
        },
        "25": {
          "type": "branch",
          "line": 121,
          "loc": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 121,
                "column": 4
              },
              "end": {
                "line": 122,
                "column": 11
              }
            }
          ]
        },
        "26": {
          "type": "branch",
          "line": 122,
          "loc": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 122,
                "column": 4
              },
              "end": {
                "line": 123,
                "column": 1
              }
            }
          ]
        },
        "27": {
          "type": "branch",
          "line": 122,
          "loc": {
            "start": {
              "line": 122,
              "column": 25
            },
            "end": {
              "line": 122,
              "column": 44
            }
          },
          "locations": [
            {
              "start": {
                "line": 122,
                "column": 25
              },
              "end": {
                "line": 122,
                "column": 44
              }
            }
          ]
        },
        "28": {
          "type": "branch",
          "line": 125,
          "loc": {
            "start": {
              "line": 125,
              "column": 0
            },
            "end": {
              "line": 128,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 125,
                "column": 0
              },
              "end": {
                "line": 128,
                "column": 1
              }
            }
          ]
        },
        "29": {
          "type": "branch",
          "line": 126,
          "loc": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 126,
                "column": 4
              },
              "end": {
                "line": 127,
                "column": 11
              }
            }
          ]
        },
        "30": {
          "type": "branch",
          "line": 127,
          "loc": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 127,
                "column": 4
              },
              "end": {
                "line": 128,
                "column": 1
              }
            }
          ]
        },
        "31": {
          "type": "branch",
          "line": 136,
          "loc": {
            "start": {
              "line": 136,
              "column": 0
            },
            "end": {
              "line": 141,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 136,
                "column": 0
              },
              "end": {
                "line": 141,
                "column": 1
              }
            }
          ]
        },
        "32": {
          "type": "branch",
          "line": 138,
          "loc": {
            "start": {
              "line": 138,
              "column": 15
            },
            "end": {
              "line": 140,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 138,
                "column": 15
              },
              "end": {
                "line": 140,
                "column": 11
              }
            }
          ]
        },
        "33": {
          "type": "branch",
          "line": 140,
          "loc": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 140,
                "column": 4
              },
              "end": {
                "line": 141,
                "column": 1
              }
            }
          ]
        },
        "34": {
          "type": "branch",
          "line": 143,
          "loc": {
            "start": {
              "line": 143,
              "column": 0
            },
            "end": {
              "line": 165,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 143,
                "column": 0
              },
              "end": {
                "line": 165,
                "column": 1
              }
            }
          ]
        },
        "35": {
          "type": "branch",
          "line": 147,
          "loc": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 147,
                "column": 4
              },
              "end": {
                "line": 164,
                "column": 11
              }
            }
          ]
        },
        "36": {
          "type": "branch",
          "line": 164,
          "loc": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 165,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 164,
                "column": 4
              },
              "end": {
                "line": 165,
                "column": 1
              }
            }
          ]
        },
        "37": {
          "type": "branch",
          "line": 167,
          "loc": {
            "start": {
              "line": 167,
              "column": 0
            },
            "end": {
              "line": 169,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 167,
                "column": 0
              },
              "end": {
                "line": 169,
                "column": 1
              }
            }
          ]
        },
        "38": {
          "type": "branch",
          "line": 168,
          "loc": {
            "start": {
              "line": 168,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 168,
                "column": 4
              },
              "end": {
                "line": 169,
                "column": 1
              }
            }
          ]
        },
        "39": {
          "type": "branch",
          "line": 171,
          "loc": {
            "start": {
              "line": 171,
              "column": 0
            },
            "end": {
              "line": 173,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 171,
                "column": 0
              },
              "end": {
                "line": 173,
                "column": 1
              }
            }
          ]
        },
        "40": {
          "type": "branch",
          "line": 175,
          "loc": {
            "start": {
              "line": 175,
              "column": 0
            },
            "end": {
              "line": 196,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 175,
                "column": 0
              },
              "end": {
                "line": 196,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          44
        ],
        "3": [
          11
        ],
        "4": [
          0
        ],
        "5": [
          11
        ],
        "6": [
          0
        ],
        "7": [
          6
        ],
        "8": [
          2
        ],
        "9": [
          1
        ],
        "10": [
          0
        ],
        "11": [
          3
        ],
        "12": [
          1
        ],
        "13": [
          0
        ],
        "14": [
          1
        ],
        "15": [
          0
        ],
        "16": [
          6
        ],
        "17": [
          2
        ],
        "18": [
          1
        ],
        "19": [
          1
        ],
        "20": [
          1
        ],
        "21": [
          0
        ],
        "22": [
          1
        ],
        "23": [
          0
        ],
        "24": [
          2
        ],
        "25": [
          1
        ],
        "26": [
          0
        ],
        "27": [
          4
        ],
        "28": [
          2
        ],
        "29": [
          1
        ],
        "30": [
          0
        ],
        "31": [
          22
        ],
        "32": [
          11
        ],
        "33": [
          0
        ],
        "34": [
          6
        ],
        "35": [
          2
        ],
        "36": [
          0
        ],
        "37": [
          4
        ],
        "38": [
          0
        ],
        "39": [
          2
        ],
        "40": [
          11
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 234,
              "column": 1
            },
            "end": {
              "line": 234,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 234,
              "column": 1
            },
            "end": {
              "line": 234,
              "column": 1
            }
          },
          "line": 234
        },
        "1": {
          "name": "login",
          "decl": {
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 44,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 44,
              "column": 1
            }
          },
          "line": 26
        },
        "2": {
          "name": "register",
          "decl": {
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 1
            }
          },
          "line": 46
        },
        "3": {
          "name": "verifyEmail",
          "decl": {
            "start": {
              "line": 71,
              "column": 0
            },
            "end": {
              "line": 81,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 71,
              "column": 0
            },
            "end": {
              "line": 81,
              "column": 1
            }
          },
          "line": 71
        },
        "4": {
          "name": "create",
          "decl": {
            "start": {
              "line": 83,
              "column": 0
            },
            "end": {
              "line": 94,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 83,
              "column": 0
            },
            "end": {
              "line": 94,
              "column": 1
            }
          },
          "line": 83
        },
        "5": {
          "name": "update",
          "decl": {
            "start": {
              "line": 96,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 96,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 1
            }
          },
          "line": 96
        },
        "6": {
          "name": "getAll",
          "decl": {
            "start": {
              "line": 120,
              "column": 0
            },
            "end": {
              "line": 123,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 120,
              "column": 0
            },
            "end": {
              "line": 123,
              "column": 1
            }
          },
          "line": 120
        },
        "7": {
          "name": "getById",
          "decl": {
            "start": {
              "line": 125,
              "column": 0
            },
            "end": {
              "line": 128,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 125,
              "column": 0
            },
            "end": {
              "line": 128,
              "column": 1
            }
          },
          "line": 125
        },
        "8": {
          "name": "_delete",
          "decl": {
            "start": {
              "line": 131,
              "column": 0
            },
            "end": {
              "line": 133,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 131,
              "column": 0
            },
            "end": {
              "line": 133,
              "column": 1
            }
          },
          "line": 131
        },
        "9": {
          "name": "getAccount",
          "decl": {
            "start": {
              "line": 136,
              "column": 0
            },
            "end": {
              "line": 141,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 136,
              "column": 0
            },
            "end": {
              "line": 141,
              "column": 1
            }
          },
          "line": 136
        },
        "10": {
          "name": "insertUser",
          "decl": {
            "start": {
              "line": 143,
              "column": 0
            },
            "end": {
              "line": 165,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 143,
              "column": 0
            },
            "end": {
              "line": 165,
              "column": 1
            }
          },
          "line": 143
        },
        "11": {
          "name": "hash",
          "decl": {
            "start": {
              "line": 167,
              "column": 0
            },
            "end": {
              "line": 169,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 167,
              "column": 0
            },
            "end": {
              "line": 169,
              "column": 1
            }
          },
          "line": 167
        },
        "12": {
          "name": "randomTokenString",
          "decl": {
            "start": {
              "line": 171,
              "column": 0
            },
            "end": {
              "line": 173,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 171,
              "column": 0
            },
            "end": {
              "line": 173,
              "column": 1
            }
          },
          "line": 171
        },
        "13": {
          "name": "basicDetails",
          "decl": {
            "start": {
              "line": 175,
              "column": 0
            },
            "end": {
              "line": 196,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 175,
              "column": 0
            },
            "end": {
              "line": 196,
              "column": 1
            }
          },
          "line": 175
        },
        "14": {
          "name": "sendVerificationEmail",
          "decl": {
            "start": {
              "line": 198,
              "column": 0
            },
            "end": {
              "line": 217,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 198,
              "column": 0
            },
            "end": {
              "line": 217,
              "column": 1
            }
          },
          "line": 198
        },
        "15": {
          "name": "sendAlreadyRegisteredEmail",
          "decl": {
            "start": {
              "line": 219,
              "column": 0
            },
            "end": {
              "line": 234,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 219,
              "column": 0
            },
            "end": {
              "line": 234,
              "column": 1
            }
          },
          "line": 219
        }
      },
      "f": {
        "0": 1,
        "1": 44,
        "2": 6,
        "3": 0,
        "4": 3,
        "5": 6,
        "6": 2,
        "7": 2,
        "8": 0,
        "9": 22,
        "10": 6,
        "11": 4,
        "12": 2,
        "13": 11,
        "14": 0,
        "15": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.validators.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/auth/auth.validators.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 27
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 70
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 44
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 31
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 43
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 42
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 61
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 45
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 47
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 49
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 76
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 7
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 39
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 2
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 44
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 31
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 47
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 49
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 7
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 39
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 2
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 44
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 25
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 42
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 41
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 46
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 44
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 60
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 48
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 75
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 6
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 0
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 49
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 79
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 39
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 2
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 0
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 49
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 31
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 39
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 7
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 39
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 4,
        "5": 4,
        "6": 4,
        "7": 4,
        "8": 4,
        "9": 4,
        "10": 4,
        "11": 4,
        "12": 4,
        "13": 4,
        "14": 4,
        "15": 1,
        "16": 1,
        "17": 11,
        "18": 11,
        "19": 11,
        "20": 11,
        "21": 11,
        "22": 11,
        "23": 1,
        "24": 1,
        "25": 2,
        "26": 2,
        "27": 2,
        "28": 2,
        "29": 2,
        "30": 2,
        "31": 2,
        "32": 2,
        "33": 2,
        "34": 2,
        "35": 2,
        "36": 2,
        "37": 2,
        "38": 2,
        "39": 2,
        "40": 1,
        "41": 1,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 47,
          "loc": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 47,
                "column": 2
              },
              "end": {
                "line": 47,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 47,
          "loc": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 47,
                "column": 2
              },
              "end": {
                "line": 47,
                "column": 2
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 4,
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 15,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 23
              },
              "end": {
                "line": 15,
                "column": 2
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 17,
          "loc": {
            "start": {
              "line": 17,
              "column": 23
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 17,
                "column": 23
              },
              "end": {
                "line": 23,
                "column": 2
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 25,
          "loc": {
            "start": {
              "line": 25,
              "column": 23
            },
            "end": {
              "line": 40,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 25,
                "column": 23
              },
              "end": {
                "line": 40,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          4
        ],
        "3": [
          11
        ],
        "4": [
          2
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 2
            }
          },
          "line": 47
        },
        "1": {
          "name": "Object.<anonymous>.exports.signupSchema",
          "decl": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 15,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 15,
              "column": 2
            }
          },
          "line": 4
        },
        "2": {
          "name": "Object.<anonymous>.exports.signinSchema",
          "decl": {
            "start": {
              "line": 17,
              "column": 23
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 17,
              "column": 23
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "line": 17
        },
        "3": {
          "name": "Object.<anonymous>.exports.updateSchema",
          "decl": {
            "start": {
              "line": 25,
              "column": 23
            },
            "end": {
              "line": 40,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 25,
              "column": 23
            },
            "end": {
              "line": 40,
              "column": 2
            }
          },
          "line": 25
        },
        "4": {
          "name": "Object.<anonymous>.exports.verifyEmailSchema",
          "decl": {
            "start": {
              "line": 42,
              "column": 28
            },
            "end": {
              "line": 47,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 42,
              "column": 28
            },
            "end": {
              "line": 47,
              "column": 2
            }
          },
          "line": 42
        }
      },
      "f": {
        "0": 1,
        "1": 4,
        "2": 11,
        "3": 2,
        "4": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.model.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.model.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 60
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 49
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 29
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 28
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 35
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 29
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 22
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 5
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 1
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 25
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 0,
        "7": 0,
        "8": 1,
        "9": 1,
        "10": 0,
        "11": 0,
        "12": 1,
        "13": 1,
        "14": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 15,
          "loc": {
            "start": {
              "line": 15,
              "column": 25
            },
            "end": {
              "line": 15,
              "column": 25
            }
          },
          "locations": [
            {
              "start": {
                "line": 15,
                "column": 25
              },
              "end": {
                "line": 15,
                "column": 25
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 15,
          "loc": {
            "start": {
              "line": 15,
              "column": 25
            },
            "end": {
              "line": 15,
              "column": 25
            }
          },
          "locations": [
            {
              "start": {
                "line": 15,
                "column": 25
              },
              "end": {
                "line": 15,
                "column": 25
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 15,
              "column": 25
            },
            "end": {
              "line": 15,
              "column": 25
            }
          },
          "loc": {
            "start": {
              "line": 15,
              "column": 25
            },
            "end": {
              "line": 15,
              "column": 25
            }
          },
          "line": 15
        },
        "1": {
          "name": "Account",
          "decl": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "line": 5
        },
        "2": {
          "name": "get tableName",
          "decl": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "line": 6
        },
        "3": {
          "name": "get jsonSchema",
          "decl": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 5
            }
          },
          "line": 10
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/accounts/accounts.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 44
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 44
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 61
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 42
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 22
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 3
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 61
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 24
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 44
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 9
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 38
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 71
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 68
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 9
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 54
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 46
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 21
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 11
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 24
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 28
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 9
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 0
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 27
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 21
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 20
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 5
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 34,
          "loc": {
            "start": {
              "line": 34,
              "column": 1
            },
            "end": {
              "line": 34,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 34,
                "column": 1
              },
              "end": {
                "line": 34,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 34,
          "loc": {
            "start": {
              "line": 34,
              "column": 1
            },
            "end": {
              "line": 34,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 34,
                "column": 1
              },
              "end": {
                "line": 34,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 34,
              "column": 1
            },
            "end": {
              "line": 34,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 34,
              "column": 1
            },
            "end": {
              "line": 34,
              "column": 1
            }
          },
          "line": 34
        },
        "1": {
          "name": "getAccounts",
          "decl": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 1
            }
          },
          "line": 13
        }
      },
      "f": {
        "0": 1,
        "1": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.model.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.model.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 57
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 48
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 29
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 28
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 34
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 29
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 22
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 5
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 35
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 69
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 51
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 61
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 50
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 16
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 20
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 53
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 33
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 23
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 59
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 48
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 18
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 14
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 23
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 48
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 36
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 23
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 53
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 60
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 18
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 14
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 20
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 48
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 33
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 23
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 53
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 56
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 18
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 14
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 10
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 5
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 1
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 0
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 25
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 81,
        "7": 81,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 1,
        "30": 1,
        "31": 1,
        "32": 1,
        "33": 1,
        "34": 1,
        "35": 1,
        "36": 1,
        "37": 1,
        "38": 1,
        "39": 1,
        "40": 1,
        "41": 1,
        "42": 1,
        "43": 1,
        "44": 1,
        "45": 1,
        "46": 1,
        "47": 1,
        "48": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 49,
          "loc": {
            "start": {
              "line": 49,
              "column": 25
            },
            "end": {
              "line": 49,
              "column": 25
            }
          },
          "locations": [
            {
              "start": {
                "line": 49,
                "column": 25
              },
              "end": {
                "line": 49,
                "column": 25
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 49,
          "loc": {
            "start": {
              "line": 49,
              "column": 25
            },
            "end": {
              "line": 49,
              "column": 25
            }
          },
          "locations": [
            {
              "start": {
                "line": 49,
                "column": 25
              },
              "end": {
                "line": 49,
                "column": 25
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 5,
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "locations": [
            {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 6
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 6,
          "loc": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 6,
                "column": 4
              },
              "end": {
                "line": 8,
                "column": 5
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 10,
          "loc": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 10,
                "column": 4
              },
              "end": {
                "line": 12,
                "column": 5
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 14,
          "loc": {
            "start": {
              "line": 14,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 14,
                "column": 4
              },
              "end": {
                "line": 46,
                "column": 5
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          20
        ],
        "3": [
          81
        ],
        "4": [
          1
        ],
        "5": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 49,
              "column": 25
            },
            "end": {
              "line": 49,
              "column": 25
            }
          },
          "loc": {
            "start": {
              "line": 49,
              "column": 25
            },
            "end": {
              "line": 49,
              "column": 25
            }
          },
          "line": 49
        },
        "1": {
          "name": "Company",
          "decl": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "line": 5
        },
        "2": {
          "name": "get tableName",
          "decl": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "line": 6
        },
        "3": {
          "name": "get jsonSchema",
          "decl": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 5
            }
          },
          "line": 10
        },
        "4": {
          "name": "get relationMappings",
          "decl": {
            "start": {
              "line": 14,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 14,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "line": 14
        }
      },
      "f": {
        "0": 1,
        "1": 20,
        "2": 81,
        "3": 1,
        "4": 1
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 71
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 52
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 58
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 41
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 59
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 54
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 43
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 46
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 31
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 22
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 3
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 28
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 45
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 38
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 40
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 59
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 63
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 53
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 56
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 67
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 70
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 24
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 0
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 33
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 36
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 18
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 25
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 45
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 21
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 1
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 42
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 18
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 26
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 30
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 55
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 10
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 21
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 1
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 41
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 18
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 36
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 28
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 65
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 9
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 21
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 1
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 41
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 66
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 18
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 38
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 28
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 16
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 51
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 44
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 15
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 73
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 13
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 0
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 30
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 10
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 21
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 1
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 0
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 33
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 42
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 18
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 78
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 45
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 21
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 1
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 0
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 41
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 49
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 18
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 72
          }
        },
        "82": {
          "start": {
            "line": 83,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 21
          }
        },
        "83": {
          "start": {
            "line": 84,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 54
          }
        },
        "84": {
          "start": {
            "line": 85,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 10
          }
        },
        "85": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 21
          }
        },
        "86": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 87,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 1,
        "30": 1,
        "31": 1,
        "32": 1,
        "33": 1,
        "34": 1,
        "35": 1,
        "36": 1,
        "37": 1,
        "38": 1,
        "39": 1,
        "40": 1,
        "41": 1,
        "42": 1,
        "43": 1,
        "44": 1,
        "45": 1,
        "46": 1,
        "47": 1,
        "48": 1,
        "49": 1,
        "50": 1,
        "51": 1,
        "52": 1,
        "53": 3,
        "54": 3,
        "55": 3,
        "56": 3,
        "57": 3,
        "58": 3,
        "59": 3,
        "60": 1,
        "61": 3,
        "62": 1,
        "63": 1,
        "64": 2,
        "65": 2,
        "66": 2,
        "67": 3,
        "68": 3,
        "69": 1,
        "70": 6,
        "71": 6,
        "72": 6,
        "73": 6,
        "74": 6,
        "75": 6,
        "76": 6,
        "77": 1,
        "78": 2,
        "79": 2,
        "80": 2,
        "81": 2,
        "82": 2,
        "83": 1,
        "84": 1,
        "85": 2,
        "86": 2
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 87,
          "loc": {
            "start": {
              "line": 87,
              "column": 1
            },
            "end": {
              "line": 87,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 1
              },
              "end": {
                "line": 87,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 87,
          "loc": {
            "start": {
              "line": 87,
              "column": 1
            },
            "end": {
              "line": 87,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 1
              },
              "end": {
                "line": 87,
                "column": 1
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 30,
          "loc": {
            "start": {
              "line": 30,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 30,
                "column": 0
              },
              "end": {
                "line": 36,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 34,
          "loc": {
            "start": {
              "line": 34,
              "column": 15
            },
            "end": {
              "line": 34,
              "column": 30
            }
          },
          "locations": [
            {
              "start": {
                "line": 34,
                "column": 15
              },
              "end": {
                "line": 34,
                "column": 30
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 38,
          "loc": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 45,
                "column": 1
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 41,
          "loc": {
            "start": {
              "line": 41,
              "column": 15
            },
            "end": {
              "line": 43,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 41,
                "column": 15
              },
              "end": {
                "line": 43,
                "column": 10
              }
            }
          ]
        },
        "6": {
          "type": "branch",
          "line": 46,
          "loc": {
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 53,
                "column": 1
              }
            }
          ]
        },
        "7": {
          "type": "branch",
          "line": 49,
          "loc": {
            "start": {
              "line": 49,
              "column": 15
            },
            "end": {
              "line": 50,
              "column": 49
            }
          },
          "locations": [
            {
              "start": {
                "line": 49,
                "column": 15
              },
              "end": {
                "line": 50,
                "column": 49
              }
            }
          ]
        },
        "8": {
          "type": "branch",
          "line": 50,
          "loc": {
            "start": {
              "line": 50,
              "column": 21
            },
            "end": {
              "line": 50,
              "column": 49
            }
          },
          "locations": [
            {
              "start": {
                "line": 50,
                "column": 21
              },
              "end": {
                "line": 50,
                "column": 49
              }
            }
          ]
        },
        "9": {
          "type": "branch",
          "line": 54,
          "loc": {
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 54,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 1
              }
            }
          ]
        },
        "10": {
          "type": "branch",
          "line": 58,
          "loc": {
            "start": {
              "line": 58,
              "column": 15
            },
            "end": {
              "line": 67,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 58,
                "column": 15
              },
              "end": {
                "line": 67,
                "column": 10
              }
            }
          ]
        },
        "11": {
          "type": "branch",
          "line": 60,
          "loc": {
            "start": {
              "line": 60,
              "column": 16
            },
            "end": {
              "line": 61,
              "column": 44
            }
          },
          "locations": [
            {
              "start": {
                "line": 60,
                "column": 16
              },
              "end": {
                "line": 61,
                "column": 44
              }
            }
          ]
        },
        "12": {
          "type": "branch",
          "line": 62,
          "loc": {
            "start": {
              "line": 62,
              "column": 14
            },
            "end": {
              "line": 64,
              "column": 13
            }
          },
          "locations": [
            {
              "start": {
                "line": 62,
                "column": 14
              },
              "end": {
                "line": 64,
                "column": 13
              }
            }
          ]
        },
        "13": {
          "type": "branch",
          "line": 64,
          "loc": {
            "start": {
              "line": 64,
              "column": 13
            },
            "end": {
              "line": 67,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 64,
                "column": 13
              },
              "end": {
                "line": 67,
                "column": 10
              }
            }
          ]
        },
        "14": {
          "type": "branch",
          "line": 71,
          "loc": {
            "start": {
              "line": 71,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 71,
                "column": 0
              },
              "end": {
                "line": 77,
                "column": 1
              }
            }
          ]
        },
        "15": {
          "type": "branch",
          "line": 75,
          "loc": {
            "start": {
              "line": 75,
              "column": 15
            },
            "end": {
              "line": 75,
              "column": 30
            }
          },
          "locations": [
            {
              "start": {
                "line": 75,
                "column": 15
              },
              "end": {
                "line": 75,
                "column": 30
              }
            }
          ]
        },
        "16": {
          "type": "branch",
          "line": 79,
          "loc": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 87,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 87,
                "column": 1
              }
            }
          ]
        },
        "17": {
          "type": "branch",
          "line": 83,
          "loc": {
            "start": {
              "line": 83,
              "column": 14
            },
            "end": {
              "line": 85,
              "column": 10
            }
          },
          "locations": [
            {
              "start": {
                "line": 83,
                "column": 14
              },
              "end": {
                "line": 85,
                "column": 10
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          1
        ],
        "3": [
          1
        ],
        "4": [
          1
        ],
        "5": [
          1
        ],
        "6": [
          1
        ],
        "7": [
          1
        ],
        "8": [
          0
        ],
        "9": [
          3
        ],
        "10": [
          3
        ],
        "11": [
          1
        ],
        "12": [
          1
        ],
        "13": [
          2
        ],
        "14": [
          6
        ],
        "15": [
          2
        ],
        "16": [
          2
        ],
        "17": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 87,
              "column": 1
            },
            "end": {
              "line": 87,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 87,
              "column": 1
            },
            "end": {
              "line": 87,
              "column": 1
            }
          },
          "line": 87
        },
        "1": {
          "name": "create",
          "decl": {
            "start": {
              "line": 30,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 30,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 1
            }
          },
          "line": 30
        },
        "2": {
          "name": "getAllCompanies",
          "decl": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 1
            }
          },
          "line": 38
        },
        "3": {
          "name": "getMyCompanies",
          "decl": {
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "line": 46
        },
        "4": {
          "name": "getCompanyById",
          "decl": {
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 1
            }
          },
          "line": 54
        },
        "5": {
          "name": "update",
          "decl": {
            "start": {
              "line": 71,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 71,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "line": 71
        },
        "6": {
          "name": "_deleteCompany",
          "decl": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 87,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 87,
              "column": 1
            }
          },
          "line": 79
        }
      },
      "f": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 3,
        "5": 6,
        "6": 2
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.service.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.service.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 52
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 43
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 43
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 18
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 11
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 18
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 20
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 19
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 19
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 12
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 2
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 31
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 38
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 50
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 66
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 5
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 57
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 19
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 1
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 0
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 51
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 57
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 19
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 30
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 5
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 35
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 8
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 22
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 39
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 49
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 7
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 54
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 5
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 0
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 67
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 23
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 9
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 22
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 9
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 6
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 0
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 26
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 1
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 0
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 34
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 44
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 21
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 1
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 0
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 40
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 51
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 26
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 7
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 21
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 1
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 0
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 35
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 45
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 19
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 1
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 0
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 37
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 54
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 0
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 22
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 36
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 21
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 39
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 5
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 0
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 30
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 1
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 0
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 35
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 18
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 41
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 0
          }
        },
        "82": {
          "start": {
            "line": 83,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 4
          }
        },
        "83": {
          "start": {
            "line": 84,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 0
          }
        },
        "84": {
          "start": {
            "line": 85,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 33
          }
        },
        "85": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 0
          }
        },
        "86": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 87,
            "column": 34
          }
        },
        "87": {
          "start": {
            "line": 88,
            "column": 0
          },
          "end": {
            "line": 88,
            "column": 41
          }
        },
        "88": {
          "start": {
            "line": 89,
            "column": 0
          },
          "end": {
            "line": 89,
            "column": 28
          }
        },
        "89": {
          "start": {
            "line": 90,
            "column": 0
          },
          "end": {
            "line": 90,
            "column": 17
          }
        },
        "90": {
          "start": {
            "line": 91,
            "column": 0
          },
          "end": {
            "line": 91,
            "column": 19
          }
        },
        "91": {
          "start": {
            "line": 92,
            "column": 0
          },
          "end": {
            "line": 92,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 3,
        "14": 3,
        "15": 3,
        "16": 0,
        "17": 0,
        "18": 1,
        "19": 1,
        "20": 3,
        "21": 0,
        "22": 1,
        "23": 17,
        "24": 17,
        "25": 6,
        "26": 17,
        "27": 2,
        "28": 2,
        "29": 4,
        "30": 4,
        "31": 4,
        "32": 4,
        "33": 3,
        "34": 17,
        "35": 17,
        "36": 2,
        "37": 2,
        "38": 2,
        "39": 2,
        "40": 2,
        "41": 2,
        "42": 2,
        "43": 2,
        "44": 2,
        "45": 2,
        "46": 17,
        "47": 0,
        "48": 1,
        "49": 2,
        "50": 2,
        "51": 2,
        "52": 0,
        "53": 1,
        "54": 2,
        "55": 2,
        "56": 1,
        "57": 1,
        "58": 2,
        "59": 0,
        "60": 1,
        "61": 6,
        "62": 6,
        "63": 6,
        "64": 0,
        "65": 1,
        "66": 5,
        "67": 5,
        "68": 2,
        "69": 5,
        "70": 1,
        "71": 1,
        "72": 1,
        "73": 1,
        "74": 1,
        "75": 5,
        "76": 0,
        "77": 1,
        "78": 1,
        "79": 1,
        "80": 1,
        "81": 1,
        "82": 1,
        "83": 1,
        "84": 1,
        "85": 1,
        "86": 30,
        "87": 30,
        "88": 30,
        "89": 15,
        "90": 30,
        "91": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 92,
          "loc": {
            "start": {
              "line": 92,
              "column": 1
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 92,
                "column": 1
              },
              "end": {
                "line": 92,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 92,
          "loc": {
            "start": {
              "line": 92,
              "column": 1
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 92,
                "column": 1
              },
              "end": {
                "line": 92,
                "column": 1
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 14,
          "loc": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 14,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 16,
          "loc": {
            "start": {
              "line": 16,
              "column": 4
            },
            "end": {
              "line": 16,
              "column": 8
            }
          },
          "locations": [
            {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 8
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 16,
          "loc": {
            "start": {
              "line": 16,
              "column": 49
            },
            "end": {
              "line": 18,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 16,
                "column": 49
              },
              "end": {
                "line": 18,
                "column": 5
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 18,
          "loc": {
            "start": {
              "line": 18,
              "column": 5
            },
            "end": {
              "line": 21,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 18,
                "column": 5
              },
              "end": {
                "line": 21,
                "column": 11
              }
            }
          ]
        },
        "6": {
          "type": "branch",
          "line": 21,
          "loc": {
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 22,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 4
              },
              "end": {
                "line": 22,
                "column": 1
              }
            }
          ]
        },
        "7": {
          "type": "branch",
          "line": 24,
          "loc": {
            "start": {
              "line": 24,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 24,
                "column": 0
              },
              "end": {
                "line": 48,
                "column": 1
              }
            }
          ]
        },
        "8": {
          "type": "branch",
          "line": 25,
          "loc": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 8
            }
          },
          "locations": [
            {
              "start": {
                "line": 25,
                "column": 4
              },
              "end": {
                "line": 27,
                "column": 8
              }
            }
          ]
        },
        "9": {
          "type": "branch",
          "line": 27,
          "loc": {
            "start": {
              "line": 27,
              "column": 18
            },
            "end": {
              "line": 29,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 27,
                "column": 18
              },
              "end": {
                "line": 29,
                "column": 5
              }
            }
          ]
        },
        "10": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 5
            },
            "end": {
              "line": 34,
              "column": 39
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 5
              },
              "end": {
                "line": 34,
                "column": 39
              }
            }
          ]
        },
        "11": {
          "type": "branch",
          "line": 33,
          "loc": {
            "start": {
              "line": 33,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 28
            }
          },
          "locations": [
            {
              "start": {
                "line": 33,
                "column": 8
              },
              "end": {
                "line": 35,
                "column": 28
              }
            }
          ]
        },
        "12": {
          "type": "branch",
          "line": 36,
          "loc": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 36,
                "column": 6
              },
              "end": {
                "line": 47,
                "column": 11
              }
            }
          ]
        },
        "13": {
          "type": "branch",
          "line": 47,
          "loc": {
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 47,
                "column": 4
              },
              "end": {
                "line": 48,
                "column": 1
              }
            }
          ]
        },
        "14": {
          "type": "branch",
          "line": 50,
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 53,
                "column": 1
              }
            }
          ]
        },
        "15": {
          "type": "branch",
          "line": 51,
          "loc": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 51,
                "column": 4
              },
              "end": {
                "line": 52,
                "column": 11
              }
            }
          ]
        },
        "16": {
          "type": "branch",
          "line": 52,
          "loc": {
            "start": {
              "line": 52,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 52,
                "column": 4
              },
              "end": {
                "line": 53,
                "column": 1
              }
            }
          ]
        },
        "17": {
          "type": "branch",
          "line": 55,
          "loc": {
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 60,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 55,
                "column": 0
              },
              "end": {
                "line": 60,
                "column": 1
              }
            }
          ]
        },
        "18": {
          "type": "branch",
          "line": 56,
          "loc": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 56,
                "column": 4
              },
              "end": {
                "line": 59,
                "column": 11
              }
            }
          ]
        },
        "19": {
          "type": "branch",
          "line": 59,
          "loc": {
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 59,
                "column": 4
              },
              "end": {
                "line": 60,
                "column": 1
              }
            }
          ]
        },
        "20": {
          "type": "branch",
          "line": 62,
          "loc": {
            "start": {
              "line": 62,
              "column": 0
            },
            "end": {
              "line": 65,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 62,
                "column": 0
              },
              "end": {
                "line": 65,
                "column": 1
              }
            }
          ]
        },
        "21": {
          "type": "branch",
          "line": 63,
          "loc": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 63,
                "column": 4
              },
              "end": {
                "line": 64,
                "column": 11
              }
            }
          ]
        },
        "22": {
          "type": "branch",
          "line": 64,
          "loc": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 64,
                "column": 4
              },
              "end": {
                "line": 65,
                "column": 1
              }
            }
          ]
        },
        "23": {
          "type": "branch",
          "line": 67,
          "loc": {
            "start": {
              "line": 67,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 67,
                "column": 0
              },
              "end": {
                "line": 77,
                "column": 1
              }
            }
          ]
        },
        "24": {
          "type": "branch",
          "line": 68,
          "loc": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 8
            }
          },
          "locations": [
            {
              "start": {
                "line": 68,
                "column": 4
              },
              "end": {
                "line": 70,
                "column": 8
              }
            }
          ]
        },
        "25": {
          "type": "branch",
          "line": 70,
          "loc": {
            "start": {
              "line": 70,
              "column": 21
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 70,
                "column": 21
              },
              "end": {
                "line": 76,
                "column": 11
              }
            }
          ]
        },
        "26": {
          "type": "branch",
          "line": 76,
          "loc": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 76,
                "column": 4
              },
              "end": {
                "line": 77,
                "column": 1
              }
            }
          ]
        },
        "27": {
          "type": "branch",
          "line": 87,
          "loc": {
            "start": {
              "line": 87,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 0
              },
              "end": {
                "line": 92,
                "column": 1
              }
            }
          ]
        },
        "28": {
          "type": "branch",
          "line": 89,
          "loc": {
            "start": {
              "line": 89,
              "column": 15
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "locations": [
            {
              "start": {
                "line": 89,
                "column": 15
              },
              "end": {
                "line": 91,
                "column": 11
              }
            }
          ]
        },
        "29": {
          "type": "branch",
          "line": 91,
          "loc": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 91,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          3
        ],
        "3": [
          1
        ],
        "4": [
          0
        ],
        "5": [
          1
        ],
        "6": [
          0
        ],
        "7": [
          17
        ],
        "8": [
          6
        ],
        "9": [
          2
        ],
        "10": [
          4
        ],
        "11": [
          3
        ],
        "12": [
          2
        ],
        "13": [
          0
        ],
        "14": [
          2
        ],
        "15": [
          1
        ],
        "16": [
          0
        ],
        "17": [
          2
        ],
        "18": [
          1
        ],
        "19": [
          0
        ],
        "20": [
          6
        ],
        "21": [
          3
        ],
        "22": [
          0
        ],
        "23": [
          5
        ],
        "24": [
          2
        ],
        "25": [
          1
        ],
        "26": [
          0
        ],
        "27": [
          30
        ],
        "28": [
          15
        ],
        "29": [
          0
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 92,
              "column": 1
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 92,
              "column": 1
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "line": 92
        },
        "1": {
          "name": "create",
          "decl": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 1
            }
          },
          "line": 14
        },
        "2": {
          "name": "updateCompany",
          "decl": {
            "start": {
              "line": 24,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 24,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "line": 24
        },
        "3": {
          "name": "getAllCompanies",
          "decl": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "line": 50
        },
        "4": {
          "name": "getMyCompanies",
          "decl": {
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 60,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 60,
              "column": 1
            }
          },
          "line": 55
        },
        "5": {
          "name": "getCompanyById",
          "decl": {
            "start": {
              "line": 62,
              "column": 0
            },
            "end": {
              "line": 65,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 62,
              "column": 0
            },
            "end": {
              "line": 65,
              "column": 1
            }
          },
          "line": 62
        },
        "6": {
          "name": "_delete",
          "decl": {
            "start": {
              "line": 67,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 67,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "line": 67
        },
        "7": {
          "name": "getCompany",
          "decl": {
            "start": {
              "line": 87,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 87,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "line": 87
        }
      },
      "f": {
        "0": 1,
        "1": 3,
        "2": 17,
        "3": 2,
        "4": 2,
        "5": 6,
        "6": 5,
        "7": 30
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.validators.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/company.validators.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 27
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 70
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 44
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 31
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 38
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 45
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 31
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 34
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 47
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 7
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 39
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 2
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 44
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 25
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 37
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 44
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 46
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 38
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 41
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 44
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 6
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 43
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 39
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 2,
        "5": 2,
        "6": 2,
        "7": 2,
        "8": 2,
        "9": 2,
        "10": 2,
        "11": 2,
        "12": 2,
        "13": 1,
        "14": 1,
        "15": 6,
        "16": 6,
        "17": 6,
        "18": 6,
        "19": 6,
        "20": 6,
        "21": 6,
        "22": 6,
        "23": 6,
        "24": 6,
        "25": 6,
        "26": 6,
        "27": 6
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 28,
          "loc": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 28,
                "column": 2
              },
              "end": {
                "line": 28,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 28,
          "loc": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 28,
                "column": 2
              },
              "end": {
                "line": 28,
                "column": 2
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 4,
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 13,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 23
              },
              "end": {
                "line": 13,
                "column": 2
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 15,
          "loc": {
            "start": {
              "line": 15,
              "column": 23
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 15,
                "column": 23
              },
              "end": {
                "line": 28,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          2
        ],
        "3": [
          6
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "line": 28
        },
        "1": {
          "name": "Object.<anonymous>.exports.createSchema",
          "decl": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 13,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 13,
              "column": 2
            }
          },
          "line": 4
        },
        "2": {
          "name": "Object.<anonymous>.exports.updateSchema",
          "decl": {
            "start": {
              "line": 15,
              "column": 23
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 15,
              "column": 23
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "line": 15
        }
      },
      "f": {
        "0": 1,
        "1": 2,
        "2": 6
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.model.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.model.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 37
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 49
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 63
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 30
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 28
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 35
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 5
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 29
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 22
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 5
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 35
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 69
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 46
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 56
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 16
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 19
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 53
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 34
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 23
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 58
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 48
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 18
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 14
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 20
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 48
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 34
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 23
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 54
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 57
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 18
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 14
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 10
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 5
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 1
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 0
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 15
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 0
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 26
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 0,
        "8": 0,
        "9": 1,
        "10": 1,
        "11": 0,
        "12": 0,
        "13": 1,
        "14": 1,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 1,
        "39": 1,
        "40": 1,
        "41": 1,
        "42": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 43,
          "loc": {
            "start": {
              "line": 43,
              "column": 26
            },
            "end": {
              "line": 43,
              "column": 26
            }
          },
          "locations": [
            {
              "start": {
                "line": 43,
                "column": 26
              },
              "end": {
                "line": 43,
                "column": 26
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 43,
          "loc": {
            "start": {
              "line": 43,
              "column": 26
            },
            "end": {
              "line": 43,
              "column": 26
            }
          },
          "locations": [
            {
              "start": {
                "line": 43,
                "column": 26
              },
              "end": {
                "line": 43,
                "column": 26
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 43,
              "column": 26
            },
            "end": {
              "line": 43,
              "column": 26
            }
          },
          "loc": {
            "start": {
              "line": 43,
              "column": 26
            },
            "end": {
              "line": 43,
              "column": 26
            }
          },
          "line": 43
        },
        "1": {
          "name": "Category",
          "decl": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "line": 6
        },
        "2": {
          "name": "get tableName",
          "decl": {
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 5
            }
          },
          "line": 7
        },
        "3": {
          "name": "get jsonSchema",
          "decl": {
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 13,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 13,
              "column": 5
            }
          },
          "line": 11
        },
        "4": {
          "name": "get relationMappings",
          "decl": {
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "line": 15
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 72
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 64
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 47
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 47
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 43
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 54
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 49
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 31
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 22
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 3
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 54
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 39
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 59
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 40
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 36
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 63
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 59
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 24
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 33
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 32
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 29
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 47
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 26
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 25
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 73
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 13
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 59
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 10
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 47
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 21
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 1
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 0
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 49
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 38
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 0
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 19
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 47
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 29
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 67
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 9
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 21
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 1
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 0
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 42
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 19
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 39
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 27
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 63
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 9
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 21
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 1
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 0
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 33
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 51
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 29
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 41
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 0
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 47
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 26
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 25
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 73
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 13
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 74
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 10
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 27
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 63
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 9
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 21
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 1
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 0
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 42
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 58
          }
        },
        "82": {
          "start": {
            "line": 83,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 47
          }
        },
        "83": {
          "start": {
            "line": 84,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 26
          }
        },
        "84": {
          "start": {
            "line": 85,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 25
          }
        },
        "85": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 73
          }
        },
        "86": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 87,
            "column": 13
          }
        },
        "87": {
          "start": {
            "line": 88,
            "column": 0
          },
          "end": {
            "line": 88,
            "column": 44
          }
        },
        "88": {
          "start": {
            "line": 89,
            "column": 0
          },
          "end": {
            "line": 89,
            "column": 34
          }
        },
        "89": {
          "start": {
            "line": 90,
            "column": 0
          },
          "end": {
            "line": 90,
            "column": 50
          }
        },
        "90": {
          "start": {
            "line": 91,
            "column": 0
          },
          "end": {
            "line": 91,
            "column": 15
          }
        },
        "91": {
          "start": {
            "line": 92,
            "column": 0
          },
          "end": {
            "line": 92,
            "column": 10
          }
        },
        "92": {
          "start": {
            "line": 93,
            "column": 0
          },
          "end": {
            "line": 93,
            "column": 21
          }
        },
        "93": {
          "start": {
            "line": 94,
            "column": 0
          },
          "end": {
            "line": 94,
            "column": 44
          }
        },
        "94": {
          "start": {
            "line": 95,
            "column": 0
          },
          "end": {
            "line": 95,
            "column": 10
          }
        },
        "95": {
          "start": {
            "line": 96,
            "column": 0
          },
          "end": {
            "line": 96,
            "column": 21
          }
        },
        "96": {
          "start": {
            "line": 97,
            "column": 0
          },
          "end": {
            "line": 97,
            "column": 1
          }
        },
        "97": {
          "start": {
            "line": 98,
            "column": 0
          },
          "end": {
            "line": 98,
            "column": 0
          }
        },
        "98": {
          "start": {
            "line": 99,
            "column": 0
          },
          "end": {
            "line": 99,
            "column": 44
          }
        },
        "99": {
          "start": {
            "line": 100,
            "column": 0
          },
          "end": {
            "line": 100,
            "column": 46
          }
        },
        "100": {
          "start": {
            "line": 101,
            "column": 0
          },
          "end": {
            "line": 101,
            "column": 38
          }
        },
        "101": {
          "start": {
            "line": 102,
            "column": 0
          },
          "end": {
            "line": 102,
            "column": 44
          }
        },
        "102": {
          "start": {
            "line": 103,
            "column": 0
          },
          "end": {
            "line": 103,
            "column": 17
          }
        },
        "103": {
          "start": {
            "line": 104,
            "column": 0
          },
          "end": {
            "line": 104,
            "column": 0
          }
        },
        "104": {
          "start": {
            "line": 105,
            "column": 0
          },
          "end": {
            "line": 105,
            "column": 16
          }
        },
        "105": {
          "start": {
            "line": 106,
            "column": 0
          },
          "end": {
            "line": 106,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 1,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 1,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 1,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 1,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 1,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 1,
        "98": 1,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 106,
          "loc": {
            "start": {
              "line": 106,
              "column": 1
            },
            "end": {
              "line": 106,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 106,
                "column": 1
              },
              "end": {
                "line": 106,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 106,
          "loc": {
            "start": {
              "line": 106,
              "column": 1
            },
            "end": {
              "line": 106,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 106,
                "column": 1
              },
              "end": {
                "line": 106,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 106,
              "column": 1
            },
            "end": {
              "line": 106,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 106,
              "column": 1
            },
            "end": {
              "line": 106,
              "column": 1
            }
          },
          "line": 106
        },
        "1": {
          "name": "create",
          "decl": {
            "start": {
              "line": 28,
              "column": 0
            },
            "end": {
              "line": 41,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 28,
              "column": 0
            },
            "end": {
              "line": 41,
              "column": 1
            }
          },
          "line": 28
        },
        "2": {
          "name": "getAllCompanyCategorys",
          "decl": {
            "start": {
              "line": 43,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 43,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 1
            }
          },
          "line": 43
        },
        "3": {
          "name": "getCategoryById",
          "decl": {
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 1
            }
          },
          "line": 54
        },
        "4": {
          "name": "update",
          "decl": {
            "start": {
              "line": 63,
              "column": 0
            },
            "end": {
              "line": 79,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 63,
              "column": 0
            },
            "end": {
              "line": 79,
              "column": 1
            }
          },
          "line": 63
        },
        "5": {
          "name": "_deleteCategory",
          "decl": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 97,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 97,
              "column": 1
            }
          },
          "line": 81
        },
        "6": {
          "name": "isOwner",
          "decl": {
            "start": {
              "line": 100,
              "column": 0
            },
            "end": {
              "line": 106,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 100,
              "column": 0
            },
            "end": {
              "line": 106,
              "column": 1
            }
          },
          "line": 100
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.service.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.service.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 45
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 49
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 18
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 19
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 19
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 19
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 27
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 20
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 12
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 2
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 39
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 59
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 20
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 1
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 43
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 47
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 42
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 8
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 22
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 40
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 28
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 30
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 36
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 11
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 7
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 56
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 5
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 74
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 18
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 7
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 27
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 1
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 33
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 45
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 21
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 1
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 0
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 47
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 58
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 21
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 1
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 0
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 36
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 47
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 20
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 1
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 0
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 37
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 54
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 1
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 0
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 35
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 18
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 42
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 0
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 4
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 0
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 33
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 0
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 35
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 43
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 28
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 34
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 17
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 0
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 20
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 1,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 1,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 1,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 1,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 1,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 1,
        "56": 1,
        "57": 1,
        "58": 1,
        "59": 1,
        "60": 1,
        "61": 1,
        "62": 1,
        "63": 1,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 72,
          "loc": {
            "start": {
              "line": 72,
              "column": 1
            },
            "end": {
              "line": 72,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 72,
                "column": 1
              },
              "end": {
                "line": 72,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 72,
          "loc": {
            "start": {
              "line": 72,
              "column": 1
            },
            "end": {
              "line": 72,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 72,
                "column": 1
              },
              "end": {
                "line": 72,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 72,
              "column": 1
            },
            "end": {
              "line": 72,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 72,
              "column": 1
            },
            "end": {
              "line": 72,
              "column": 1
            }
          },
          "line": 72
        },
        "1": {
          "name": "createCategory",
          "decl": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 1
            }
          },
          "line": 13
        },
        "2": {
          "name": "updateCategory",
          "decl": {
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 1
            }
          },
          "line": 18
        },
        "3": {
          "name": "getAllCategory",
          "decl": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 41,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 41,
              "column": 1
            }
          },
          "line": 38
        },
        "4": {
          "name": "getAllCompanyCategorys",
          "decl": {
            "start": {
              "line": 43,
              "column": 0
            },
            "end": {
              "line": 46,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 43,
              "column": 0
            },
            "end": {
              "line": 46,
              "column": 1
            }
          },
          "line": 43
        },
        "5": {
          "name": "getCategoryById",
          "decl": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 1
            }
          },
          "line": 48
        },
        "6": {
          "name": "_delete",
          "decl": {
            "start": {
              "line": 53,
              "column": 0
            },
            "end": {
              "line": 55,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 53,
              "column": 0
            },
            "end": {
              "line": 55,
              "column": 1
            }
          },
          "line": 53
        },
        "7": {
          "name": "getCategory",
          "decl": {
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 72,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 72,
              "column": 1
            }
          },
          "line": 65
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.validators.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/category.validators.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 27
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 76
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 44
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 31
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 38
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 41
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 7
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 39
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 2
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 44
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 25
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 37
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 40
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 6
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 43
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 39
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 1,
        "11": 1,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 21,
          "loc": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 21,
          "loc": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "line": 21
        },
        "1": {
          "name": "Object.<anonymous>.exports.createSchema",
          "decl": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "line": 4
        },
        "2": {
          "name": "Object.<anonymous>.exports.updateSchema",
          "decl": {
            "start": {
              "line": 12,
              "column": 23
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 23
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "line": 12
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.model.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.model.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 66
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 40
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 46
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 26
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 28
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 31
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 5
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 35
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 66
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 16
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 23
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 53
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 37
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 23
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 59
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 52
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 18
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 14
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 10
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 5
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 1
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 15
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 22
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 0,
        "8": 0,
        "9": 1,
        "10": 1,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 1,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 22
            },
            "end": {
              "line": 29,
              "column": 22
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 22
              },
              "end": {
                "line": 29,
                "column": 22
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 22
            },
            "end": {
              "line": 29,
              "column": 22
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 22
              },
              "end": {
                "line": 29,
                "column": 22
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 29,
              "column": 22
            },
            "end": {
              "line": 29,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 29,
              "column": 22
            },
            "end": {
              "line": 29,
              "column": 22
            }
          },
          "line": 29
        },
        "1": {
          "name": "Item",
          "decl": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "line": 6
        },
        "2": {
          "name": "get tableName",
          "decl": {
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 5
            }
          },
          "line": 7
        },
        "3": {
          "name": "get relationMappings",
          "decl": {
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 5
            }
          },
          "line": 11
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 68
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 76
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 50
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 46
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 31
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 22
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 3
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 70
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 36
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 78
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 65
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 24
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 33
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 15
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 29
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 51
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 21
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 1
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 34
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 15
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 35
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 70
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 21
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 1
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 37
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 15
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 44
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 70
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 21
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 1
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 37
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 15
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 42
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 19
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 22
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 53
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 34
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 14
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 9
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 21
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 1,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 1,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 1,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 49,
          "loc": {
            "start": {
              "line": 49,
              "column": 1
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 49,
                "column": 1
              },
              "end": {
                "line": 49,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 49,
          "loc": {
            "start": {
              "line": 49,
              "column": 1
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 49,
                "column": 1
              },
              "end": {
                "line": 49,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 49,
              "column": 1
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 49,
              "column": 1
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "line": 49
        },
        "1": {
          "name": "create",
          "decl": {
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 23,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 23,
              "column": 1
            }
          },
          "line": 18
        },
        "2": {
          "name": "getById",
          "decl": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 1
            }
          },
          "line": 25
        },
        "3": {
          "name": "updateItem",
          "decl": {
            "start": {
              "line": 32,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 32,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 1
            }
          },
          "line": 32
        },
        "4": {
          "name": "deleteItem",
          "decl": {
            "start": {
              "line": 39,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 39,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "line": 39
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.service.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.service.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 37
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 52
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 18
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 15
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 16
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 15
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 15
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 2
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 35
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 51
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 30
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 1
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 32
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 39
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 16
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 1
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 39
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 72
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 0
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 22
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 1
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 40
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 50
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 1
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 59
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 32
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 35
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 29
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 17
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 16
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 1
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 29
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 43
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 37
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 1,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 1,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 1,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 1,
        "30": 1,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 1,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 42,
          "loc": {
            "start": {
              "line": 42,
              "column": 1
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 42,
                "column": 1
              },
              "end": {
                "line": 42,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 42,
          "loc": {
            "start": {
              "line": 42,
              "column": 1
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 42,
                "column": 1
              },
              "end": {
                "line": 42,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 42,
              "column": 1
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 42,
              "column": 1
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "line": 42
        },
        "1": {
          "name": "createItem",
          "decl": {
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 1
            }
          },
          "line": 11
        },
        "2": {
          "name": "getItemById",
          "decl": {
            "start": {
              "line": 16,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 16,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 1
            }
          },
          "line": 16
        },
        "3": {
          "name": "updateItem",
          "decl": {
            "start": {
              "line": 21,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 21,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 1
            }
          },
          "line": 21
        },
        "4": {
          "name": "deleteItem",
          "decl": {
            "start": {
              "line": 27,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 27,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 1
            }
          },
          "line": 27
        },
        "5": {
          "name": "getItem",
          "decl": {
            "start": {
              "line": 32,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 32,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 1
            }
          },
          "line": 32
        },
        "6": {
          "name": "basicDetails",
          "decl": {
            "start": {
              "line": 39,
              "column": 0
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 39,
              "column": 0
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "line": 39
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.validators.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/category/item/item.validators.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 27
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 79
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 44
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 31
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 38
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 39
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 42
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 45
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 32
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 45
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 7
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 39
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 2
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 44
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 25
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 37
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 38
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 41
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 44
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 32
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 44
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 6
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 43
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 39
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 1,
        "15": 1,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "line": 29
        },
        "1": {
          "name": "Object.<anonymous>.exports.createSchema",
          "decl": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 14,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 14,
              "column": 2
            }
          },
          "line": 4
        },
        "2": {
          "name": "Object.<anonymous>.exports.updateSchema",
          "decl": {
            "start": {
              "line": 16,
              "column": 23
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 16,
              "column": 23
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "line": 16
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.model.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.model.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 34
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 45
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 60
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 26
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 28
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 31
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 5
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 29
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 22
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 5
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 35
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 69
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 52
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 63
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 16
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 22
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 53
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 37
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 23
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 57
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 51
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 18
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 14
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 25
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 48
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 38
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 23
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 50
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 57
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 18
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 14
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 10
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 5
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 1
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 0
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 15
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 0
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 22
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 0,
        "8": 0,
        "9": 1,
        "10": 1,
        "11": 0,
        "12": 0,
        "13": 1,
        "14": 1,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 1,
        "39": 1,
        "40": 1,
        "41": 1,
        "42": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 43,
          "loc": {
            "start": {
              "line": 43,
              "column": 22
            },
            "end": {
              "line": 43,
              "column": 22
            }
          },
          "locations": [
            {
              "start": {
                "line": 43,
                "column": 22
              },
              "end": {
                "line": 43,
                "column": 22
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 43,
          "loc": {
            "start": {
              "line": 43,
              "column": 22
            },
            "end": {
              "line": 43,
              "column": 22
            }
          },
          "locations": [
            {
              "start": {
                "line": 43,
                "column": 22
              },
              "end": {
                "line": 43,
                "column": 22
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 43,
              "column": 22
            },
            "end": {
              "line": 43,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 43,
              "column": 22
            },
            "end": {
              "line": 43,
              "column": 22
            }
          },
          "line": 43
        },
        "1": {
          "name": "Menu",
          "decl": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "line": 6
        },
        "2": {
          "name": "get tableName",
          "decl": {
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 5
            }
          },
          "line": 7
        },
        "3": {
          "name": "get jsonSchema",
          "decl": {
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 13,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 13,
              "column": 5
            }
          },
          "line": 11
        },
        "4": {
          "name": "get relationMappings",
          "decl": {
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "line": 15
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 67
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 44
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 61
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 44
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 55
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 46
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 46
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 31
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 22
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 3
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 45
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 43
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 59
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 36
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 32
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 63
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 55
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 24
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 33
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 48
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 15
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 29
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 39
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 21
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 1
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 45
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 38
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 15
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 43
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 73
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 21
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 1
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 0
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 38
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 15
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 35
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 70
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 21
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 1
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 0
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 33
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 47
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 0
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 19
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 38
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 16
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 28
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 27
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 32
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 37
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 13
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 0
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 67
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 10
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 70
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 21
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 1
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 0
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 38
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 54
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 0
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 19
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 38
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 16
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 28
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 27
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 32
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 37
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 13
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 0
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 40
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 34
          }
        },
        "82": {
          "start": {
            "line": 83,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 50
          }
        },
        "83": {
          "start": {
            "line": 84,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 15
          }
        },
        "84": {
          "start": {
            "line": 85,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 10
          }
        },
        "85": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 21
          }
        },
        "86": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 87,
            "column": 44
          }
        },
        "87": {
          "start": {
            "line": 88,
            "column": 0
          },
          "end": {
            "line": 88,
            "column": 10
          }
        },
        "88": {
          "start": {
            "line": 89,
            "column": 0
          },
          "end": {
            "line": 89,
            "column": 21
          }
        },
        "89": {
          "start": {
            "line": 90,
            "column": 0
          },
          "end": {
            "line": 90,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 1,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 1,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 1,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 1,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 90,
          "loc": {
            "start": {
              "line": 90,
              "column": 1
            },
            "end": {
              "line": 90,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 90,
                "column": 1
              },
              "end": {
                "line": 90,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 90,
          "loc": {
            "start": {
              "line": 90,
              "column": 1
            },
            "end": {
              "line": 90,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 90,
                "column": 1
              },
              "end": {
                "line": 90,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 90,
              "column": 1
            },
            "end": {
              "line": 90,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 90,
              "column": 1
            },
            "end": {
              "line": 90,
              "column": 1
            }
          },
          "line": 90
        },
        "1": {
          "name": "create",
          "decl": {
            "start": {
              "line": 27,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 27,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 1
            }
          },
          "line": 27
        },
        "2": {
          "name": "getAllCompanyMenus",
          "decl": {
            "start": {
              "line": 35,
              "column": 0
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 35,
              "column": 0
            },
            "end": {
              "line": 42,
              "column": 1
            }
          },
          "line": 35
        },
        "3": {
          "name": "getMenuById",
          "decl": {
            "start": {
              "line": 44,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 44,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 1
            }
          },
          "line": 44
        },
        "4": {
          "name": "update",
          "decl": {
            "start": {
              "line": 51,
              "column": 0
            },
            "end": {
              "line": 67,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 51,
              "column": 0
            },
            "end": {
              "line": 67,
              "column": 1
            }
          },
          "line": 51
        },
        "5": {
          "name": "_deleteMenu",
          "decl": {
            "start": {
              "line": 69,
              "column": 0
            },
            "end": {
              "line": 90,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 69,
              "column": 0
            },
            "end": {
              "line": 90,
              "column": 1
            }
          },
          "line": 69
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.service.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.service.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 43
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 46
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 18
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 15
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 15
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 15
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 23
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 16
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 12
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 2
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 35
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 51
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 16
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 1
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 39
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 39
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 38
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 8
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 22
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 36
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 24
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 30
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 42
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 11
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 7
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 52
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 5
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 66
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 18
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 7
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 23
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 1
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 29
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 37
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 17
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 1
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 0
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 43
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 50
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 17
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 1
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 0
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 32
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 39
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 30
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 1
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 0
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 37
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 50
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 1
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 0
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 35
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 18
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 38
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 0
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 4
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 0
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 33
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 0
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 31
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 35
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 28
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 39
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 17
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 16
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 1
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 0
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 29
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 54
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 0
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 48
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 1,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 1,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 1,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 1,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 1,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 1,
        "56": 1,
        "57": 1,
        "58": 1,
        "59": 1,
        "60": 1,
        "61": 1,
        "62": 1,
        "63": 1,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 1,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 77,
          "loc": {
            "start": {
              "line": 77,
              "column": 1
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 77,
                "column": 1
              },
              "end": {
                "line": 77,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 77,
          "loc": {
            "start": {
              "line": 77,
              "column": 1
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 77,
                "column": 1
              },
              "end": {
                "line": 77,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 77,
              "column": 1
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 77,
              "column": 1
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "line": 77
        },
        "1": {
          "name": "createMenu",
          "decl": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 1
            }
          },
          "line": 13
        },
        "2": {
          "name": "updateMenu",
          "decl": {
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 1
            }
          },
          "line": 18
        },
        "3": {
          "name": "getAllMenu",
          "decl": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 41,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 41,
              "column": 1
            }
          },
          "line": 38
        },
        "4": {
          "name": "getAllCompanyMenus",
          "decl": {
            "start": {
              "line": 43,
              "column": 0
            },
            "end": {
              "line": 46,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 43,
              "column": 0
            },
            "end": {
              "line": 46,
              "column": 1
            }
          },
          "line": 43
        },
        "5": {
          "name": "getMenuById",
          "decl": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 1
            }
          },
          "line": 48
        },
        "6": {
          "name": "_delete",
          "decl": {
            "start": {
              "line": 53,
              "column": 0
            },
            "end": {
              "line": 55,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 53,
              "column": 0
            },
            "end": {
              "line": 55,
              "column": 1
            }
          },
          "line": 53
        },
        "7": {
          "name": "getMenu",
          "decl": {
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 71,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 71,
              "column": 1
            }
          },
          "line": 65
        },
        "8": {
          "name": "basicDetails",
          "decl": {
            "start": {
              "line": 73,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 73,
              "column": 0
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "line": 73
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.validator.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/menu/menu.validator.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 27
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 73
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 44
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 31
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 38
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 45
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 32
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 7
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 39
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 2
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 44
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 25
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 37
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 44
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 42
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 6
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 43
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 0
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 39
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 1,
        "12": 1,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 23,
          "loc": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 23,
                "column": 2
              },
              "end": {
                "line": 23,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 23,
          "loc": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 23,
                "column": 2
              },
              "end": {
                "line": 23,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "line": 23
        },
        "1": {
          "name": "Object.<anonymous>.exports.createSchema",
          "decl": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 11,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 11,
              "column": 2
            }
          },
          "line": 4
        },
        "2": {
          "name": "Object.<anonymous>.exports.updateSchema",
          "decl": {
            "start": {
              "line": 13,
              "column": 23
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 13,
              "column": 23
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "line": 13
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.model.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.model.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 60
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 34
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 27
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 28
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 32
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 35
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 52
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 54
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 65
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 16
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 20
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 48
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 38
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 23
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 51
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 59
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 18
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 14
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 23
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 53
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 33
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 23
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 60
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 48
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 18
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 14
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 22
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 53
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 36
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 23
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 59
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 51
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 18
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 14
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 10
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 5
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 1
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 0
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 15
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 0
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 23
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 0,
        "7": 0,
        "8": 1,
        "9": 1,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 1,
        "43": 1,
        "44": 1,
        "45": 1,
        "46": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 47,
          "loc": {
            "start": {
              "line": 47,
              "column": 23
            },
            "end": {
              "line": 47,
              "column": 23
            }
          },
          "locations": [
            {
              "start": {
                "line": 47,
                "column": 23
              },
              "end": {
                "line": 47,
                "column": 23
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 47,
          "loc": {
            "start": {
              "line": 47,
              "column": 23
            },
            "end": {
              "line": 47,
              "column": 23
            }
          },
          "locations": [
            {
              "start": {
                "line": 47,
                "column": 23
              },
              "end": {
                "line": 47,
                "column": 23
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 47,
              "column": 23
            },
            "end": {
              "line": 47,
              "column": 23
            }
          },
          "loc": {
            "start": {
              "line": 47,
              "column": 23
            },
            "end": {
              "line": 47,
              "column": 23
            }
          },
          "line": 47
        },
        "1": {
          "name": "Order",
          "decl": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "line": 5
        },
        "2": {
          "name": "get tableName",
          "decl": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "line": 6
        },
        "3": {
          "name": "get relationMappings",
          "decl": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "line": 10
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 7
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 22
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 22
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 23
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 34
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 61
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 44
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 48
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 58
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 31
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 22
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 3
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 46
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 53
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 70
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 13
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 11
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 22
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 35
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 15
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 2
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 41
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 64
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 11
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 22
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 23
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 35
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 20
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 2
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 0
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 38
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 21
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 33
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 42
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 23
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 6
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 16
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 29
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 28
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 22
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 72
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 14
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 9
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 21
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 1
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 0
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 38
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 16
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 55
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 41
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 21
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 1
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 0
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 39
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 16
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 25
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 73
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 21
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 1
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 0
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 39
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 16
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 34
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 77
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 21
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 1
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 0
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 43
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 31
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 0
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 46
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 16
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 33
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 77
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 21
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 1
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 24
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 1,
        "30": 1,
        "31": 1,
        "32": 1,
        "33": 1,
        "34": 1,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 1,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 1,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 1,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 1,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 82,
          "loc": {
            "start": {
              "line": 82,
              "column": 24
            },
            "end": {
              "line": 82,
              "column": 24
            }
          },
          "locations": [
            {
              "start": {
                "line": 82,
                "column": 24
              },
              "end": {
                "line": 82,
                "column": 24
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 82,
          "loc": {
            "start": {
              "line": 82,
              "column": 24
            },
            "end": {
              "line": 82,
              "column": 24
            }
          },
          "locations": [
            {
              "start": {
                "line": 82,
                "column": 24
              },
              "end": {
                "line": 82,
                "column": 24
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 82,
              "column": 24
            },
            "end": {
              "line": 82,
              "column": 24
            }
          },
          "loc": {
            "start": {
              "line": 82,
              "column": 24
            },
            "end": {
              "line": 82,
              "column": 24
            }
          },
          "line": 82
        },
        "1": {
          "name": "createOrder",
          "decl": {
            "start": {
              "line": 36,
              "column": 0
            },
            "end": {
              "line": 50,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 36,
              "column": 0
            },
            "end": {
              "line": 50,
              "column": 1
            }
          },
          "line": 36
        },
        "2": {
          "name": "updateOrder",
          "decl": {
            "start": {
              "line": 52,
              "column": 0
            },
            "end": {
              "line": 57,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 52,
              "column": 0
            },
            "end": {
              "line": 57,
              "column": 1
            }
          },
          "line": 52
        },
        "3": {
          "name": "getOrderById",
          "decl": {
            "start": {
              "line": 59,
              "column": 0
            },
            "end": {
              "line": 64,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 59,
              "column": 0
            },
            "end": {
              "line": 64,
              "column": 1
            }
          },
          "line": 59
        },
        "4": {
          "name": "getOwnOrders",
          "decl": {
            "start": {
              "line": 66,
              "column": 0
            },
            "end": {
              "line": 71,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 66,
              "column": 0
            },
            "end": {
              "line": 71,
              "column": 1
            }
          },
          "line": 66
        },
        "5": {
          "name": "getCompanyOrders",
          "decl": {
            "start": {
              "line": 73,
              "column": 0
            },
            "end": {
              "line": 81,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 73,
              "column": 0
            },
            "end": {
              "line": 81,
              "column": 1
            }
          },
          "line": 73
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.service.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.service.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 18
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 16
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 20
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 16
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 17
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 17
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 21
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 2
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 36
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 77
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 46
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 27
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 31
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 59
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 21
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 1
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 0
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 44
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 37
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 26
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 36
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 27
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 19
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 35
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 21
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 45
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 15
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 5
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 0
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 33
          }
        },
        "37": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 31
          }
        },
        "38": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 16
          }
        },
        "39": {
          "start": {
            "line": 40,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 43
          }
        },
        "40": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 10
          }
        },
        "41": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 16
          }
        },
        "42": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 33
          }
        },
        "43": {
          "start": {
            "line": 44,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 10
          }
        },
        "44": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 24
          }
        },
        "45": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 0
          }
        },
        "46": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 21
          }
        },
        "47": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 1
          }
        },
        "48": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 0
          }
        },
        "49": {
          "start": {
            "line": 50,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 46
          }
        },
        "50": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 63
          }
        },
        "51": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 0
          }
        },
        "52": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 47
          }
        },
        "53": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 47
          }
        },
        "54": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 20
          }
        },
        "55": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 5
          }
        },
        "56": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 29
          }
        },
        "57": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 62
          }
        },
        "58": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 0
          }
        },
        "59": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 17
          }
        },
        "60": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 1
          }
        },
        "61": {
          "start": {
            "line": 62,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 0
          }
        },
        "62": {
          "start": {
            "line": 63,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 33
          }
        },
        "63": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 63
          }
        },
        "64": {
          "start": {
            "line": 65,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 17
          }
        },
        "65": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 1
          }
        },
        "66": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 0
          }
        },
        "67": {
          "start": {
            "line": 68,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 33
          }
        },
        "68": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 38
          }
        },
        "69": {
          "start": {
            "line": 70,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 35
          }
        },
        "70": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 71,
            "column": 31
          }
        },
        "71": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 18
          }
        },
        "72": {
          "start": {
            "line": 73,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 1
          }
        },
        "73": {
          "start": {
            "line": 74,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 0
          }
        },
        "74": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 41
          }
        },
        "75": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 76,
            "column": 75
          }
        },
        "76": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 18
          }
        },
        "77": {
          "start": {
            "line": 78,
            "column": 0
          },
          "end": {
            "line": 78,
            "column": 1
          }
        },
        "78": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 59
          }
        },
        "79": {
          "start": {
            "line": 80,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 46
          }
        },
        "80": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 51
          }
        },
        "81": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 43
          }
        },
        "82": {
          "start": {
            "line": 83,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 42
          }
        },
        "83": {
          "start": {
            "line": 84,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 0
          }
        },
        "84": {
          "start": {
            "line": 85,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 35
          }
        },
        "85": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 16
          }
        },
        "86": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 87,
            "column": 28
          }
        },
        "87": {
          "start": {
            "line": 88,
            "column": 0
          },
          "end": {
            "line": 88,
            "column": 32
          }
        },
        "88": {
          "start": {
            "line": 89,
            "column": 0
          },
          "end": {
            "line": 89,
            "column": 10
          }
        },
        "89": {
          "start": {
            "line": 90,
            "column": 0
          },
          "end": {
            "line": 90,
            "column": 17
          }
        },
        "90": {
          "start": {
            "line": 91,
            "column": 0
          },
          "end": {
            "line": 91,
            "column": 0
          }
        },
        "91": {
          "start": {
            "line": 92,
            "column": 0
          },
          "end": {
            "line": 92,
            "column": 17
          }
        },
        "92": {
          "start": {
            "line": 93,
            "column": 0
          },
          "end": {
            "line": 93,
            "column": 21
          }
        },
        "93": {
          "start": {
            "line": 94,
            "column": 0
          },
          "end": {
            "line": 94,
            "column": 44
          }
        },
        "94": {
          "start": {
            "line": 95,
            "column": 0
          },
          "end": {
            "line": 95,
            "column": 28
          }
        },
        "95": {
          "start": {
            "line": 96,
            "column": 0
          },
          "end": {
            "line": 96,
            "column": 23
          }
        },
        "96": {
          "start": {
            "line": 97,
            "column": 0
          },
          "end": {
            "line": 97,
            "column": 32
          }
        },
        "97": {
          "start": {
            "line": 98,
            "column": 0
          },
          "end": {
            "line": 98,
            "column": 38
          }
        },
        "98": {
          "start": {
            "line": 99,
            "column": 0
          },
          "end": {
            "line": 99,
            "column": 11
          }
        },
        "99": {
          "start": {
            "line": 100,
            "column": 0
          },
          "end": {
            "line": 100,
            "column": 5
          }
        },
        "100": {
          "start": {
            "line": 101,
            "column": 0
          },
          "end": {
            "line": 101,
            "column": 0
          }
        },
        "101": {
          "start": {
            "line": 102,
            "column": 0
          },
          "end": {
            "line": 102,
            "column": 17
          }
        },
        "102": {
          "start": {
            "line": 103,
            "column": 0
          },
          "end": {
            "line": 103,
            "column": 1
          }
        },
        "103": {
          "start": {
            "line": 104,
            "column": 0
          },
          "end": {
            "line": 104,
            "column": 0
          }
        },
        "104": {
          "start": {
            "line": 105,
            "column": 0
          },
          "end": {
            "line": 105,
            "column": 29
          }
        },
        "105": {
          "start": {
            "line": 106,
            "column": 0
          },
          "end": {
            "line": 106,
            "column": 51
          }
        },
        "106": {
          "start": {
            "line": 107,
            "column": 0
          },
          "end": {
            "line": 107,
            "column": 17
          }
        },
        "107": {
          "start": {
            "line": 108,
            "column": 0
          },
          "end": {
            "line": 108,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 1,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 1,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 1,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 1,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 1,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 1,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 1,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 108,
          "loc": {
            "start": {
              "line": 108,
              "column": 1
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 108,
                "column": 1
              },
              "end": {
                "line": 108,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 108,
          "loc": {
            "start": {
              "line": 108,
              "column": 1
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 108,
                "column": 1
              },
              "end": {
                "line": 108,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 108,
              "column": 1
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 108,
              "column": 1
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "line": 108
        },
        "1": {
          "name": "createOrder",
          "decl": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 1
            }
          },
          "line": 12
        },
        "2": {
          "name": "updateOrderItem",
          "decl": {
            "start": {
              "line": 23,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 23,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 1
            }
          },
          "line": 23
        },
        "3": {
          "name": "updateOrder",
          "decl": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 1
            }
          },
          "line": 50
        },
        "4": {
          "name": "getOrderById",
          "decl": {
            "start": {
              "line": 63,
              "column": 0
            },
            "end": {
              "line": 66,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 63,
              "column": 0
            },
            "end": {
              "line": 66,
              "column": 1
            }
          },
          "line": 63
        },
        "5": {
          "name": "getOwnOrders",
          "decl": {
            "start": {
              "line": 68,
              "column": 0
            },
            "end": {
              "line": 73,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 68,
              "column": 0
            },
            "end": {
              "line": 73,
              "column": 1
            }
          },
          "line": 68
        },
        "6": {
          "name": "getCompanyOrders",
          "decl": {
            "start": {
              "line": 75,
              "column": 0
            },
            "end": {
              "line": 78,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 75,
              "column": 0
            },
            "end": {
              "line": 78,
              "column": 1
            }
          },
          "line": 75
        },
        "7": {
          "name": "get_or_create",
          "decl": {
            "start": {
              "line": 80,
              "column": 0
            },
            "end": {
              "line": 103,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 80,
              "column": 0
            },
            "end": {
              "line": 103,
              "column": 1
            }
          },
          "line": 80
        },
        "8": {
          "name": "getOrder",
          "decl": {
            "start": {
              "line": 105,
              "column": 0
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 105,
              "column": 0
            },
            "end": {
              "line": 108,
              "column": 1
            }
          },
          "line": 105
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.validators.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/order.validators.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 27
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 73
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 49
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 31
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 38
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 31
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 7
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 39
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 2
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 49
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 31
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 45
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 48
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 7
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 39
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 2
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 50
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 31
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 42
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 45
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 48
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 7
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 39
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 1,
        "11": 1,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 1,
        "20": 1,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 29,
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "line": 29
        },
        "1": {
          "name": "Object.<anonymous>.exports.createOrderSchema",
          "decl": {
            "start": {
              "line": 4,
              "column": 28
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 28
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "line": 4
        },
        "2": {
          "name": "Object.<anonymous>.exports.updateOrderSchema",
          "decl": {
            "start": {
              "line": 12,
              "column": 28
            },
            "end": {
              "line": 19,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 28
            },
            "end": {
              "line": 19,
              "column": 2
            }
          },
          "line": 12
        },
        "3": {
          "name": "Object.<anonymous>.exports.companyOrderSchema",
          "decl": {
            "start": {
              "line": 21,
              "column": 29
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 21,
              "column": 29
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "line": 21
        }
      },
      "f": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/orderItem/orderItem.routes.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/company/order/orderItem/orderItem.routes.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 64
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 47
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 49
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 31
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 22
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 3
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 54
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 42
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 35
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 1
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 24
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 1,
        "15": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 16,
          "loc": {
            "start": {
              "line": 16,
              "column": 24
            },
            "end": {
              "line": 16,
              "column": 24
            }
          },
          "locations": [
            {
              "start": {
                "line": 16,
                "column": 24
              },
              "end": {
                "line": 16,
                "column": 24
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 16,
          "loc": {
            "start": {
              "line": 16,
              "column": 24
            },
            "end": {
              "line": 16,
              "column": 24
            }
          },
          "locations": [
            {
              "start": {
                "line": 16,
                "column": 24
              },
              "end": {
                "line": 16,
                "column": 24
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 16,
              "column": 24
            },
            "end": {
              "line": 16,
              "column": 24
            }
          },
          "loc": {
            "start": {
              "line": 16,
              "column": 24
            },
            "end": {
              "line": 16,
              "column": 24
            }
          },
          "line": 16
        },
        "1": {
          "name": "updateOrderItem",
          "decl": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 1
            }
          },
          "line": 12
        }
      },
      "f": {
        "0": 1,
        "1": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/index.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/index.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 32
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 31
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 14
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 34
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 7
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 3
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 55
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 60
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 24
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 14,
          "loc": {
            "start": {
              "line": 14,
              "column": 24
            },
            "end": {
              "line": 14,
              "column": 24
            }
          },
          "locations": [
            {
              "start": {
                "line": 14,
                "column": 24
              },
              "end": {
                "line": 14,
                "column": 24
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 14,
          "loc": {
            "start": {
              "line": 14,
              "column": 24
            },
            "end": {
              "line": 14,
              "column": 24
            }
          },
          "locations": [
            {
              "start": {
                "line": 14,
                "column": 24
              },
              "end": {
                "line": 14,
                "column": 24
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 5,
          "loc": {
            "start": {
              "line": 5,
              "column": 16
            },
            "end": {
              "line": 9,
              "column": 3
            }
          },
          "locations": [
            {
              "start": {
                "line": 5,
                "column": 16
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 14,
              "column": 24
            },
            "end": {
              "line": 14,
              "column": 24
            }
          },
          "loc": {
            "start": {
              "line": 14,
              "column": 24
            },
            "end": {
              "line": 14,
              "column": 24
            }
          },
          "line": 14
        }
      },
      "f": {
        "0": 1
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/user/user.model.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/api/user/user.model.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 39
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 57
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 31
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 26
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 28
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 31
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 1
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 15
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 22
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 81,
        "7": 81,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 13,
          "loc": {
            "start": {
              "line": 13,
              "column": 22
            },
            "end": {
              "line": 13,
              "column": 22
            }
          },
          "locations": [
            {
              "start": {
                "line": 13,
                "column": 22
              },
              "end": {
                "line": 13,
                "column": 22
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 13,
          "loc": {
            "start": {
              "line": 13,
              "column": 22
            },
            "end": {
              "line": 13,
              "column": 22
            }
          },
          "locations": [
            {
              "start": {
                "line": 13,
                "column": 22
              },
              "end": {
                "line": 13,
                "column": 22
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 5,
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "locations": [
            {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 6
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 6,
          "loc": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "locations": [
            {
              "start": {
                "line": 6,
                "column": 4
              },
              "end": {
                "line": 8,
                "column": 5
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          27
        ],
        "3": [
          81
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 13,
              "column": 22
            },
            "end": {
              "line": 13,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 13,
              "column": 22
            },
            "end": {
              "line": 13,
              "column": 22
            }
          },
          "line": 13
        },
        "1": {
          "name": "User",
          "decl": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 6
            }
          },
          "line": 5
        },
        "2": {
          "name": "get tableName",
          "decl": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 5
            }
          },
          "line": 6
        }
      },
      "f": {
        "0": 1,
        "1": 27,
        "2": 81
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/app.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/app.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 33
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 43
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 33
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 29
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 16
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 22
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 48
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 51
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 27
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 45
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 29
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 22
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 23
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 18
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 16
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 23
          }
        },
        "22": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 24
          }
        },
        "23": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "24": {
          "start": {
            "line": 25,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 28
          }
        },
        "25": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 14
          }
        },
        "26": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 38
          }
        },
        "27": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 7
          }
        },
        "28": {
          "start": {
            "line": 29,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 3
          }
        },
        "29": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "30": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 24
          }
        },
        "31": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 67
          }
        },
        "32": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "33": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 30
          }
        },
        "34": {
          "start": {
            "line": 35,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 34
          }
        },
        "35": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 0
          }
        },
        "36": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 21
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1,
        "12": 1,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 1,
        "23": 1,
        "24": 1,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 1,
        "29": 1,
        "30": 1,
        "31": 1,
        "32": 1,
        "33": 1,
        "34": 1,
        "35": 1,
        "36": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 37,
          "loc": {
            "start": {
              "line": 37,
              "column": 21
            },
            "end": {
              "line": 37,
              "column": 21
            }
          },
          "locations": [
            {
              "start": {
                "line": 37,
                "column": 21
              },
              "end": {
                "line": 37,
                "column": 21
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 37,
          "loc": {
            "start": {
              "line": 37,
              "column": 21
            },
            "end": {
              "line": 37,
              "column": 21
            }
          },
          "locations": [
            {
              "start": {
                "line": 37,
                "column": 21
              },
              "end": {
                "line": 37,
                "column": 21
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 25,
          "loc": {
            "start": {
              "line": 25,
              "column": 13
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "locations": [
            {
              "start": {
                "line": 25,
                "column": 13
              },
              "end": {
                "line": 29,
                "column": 3
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 37,
              "column": 21
            },
            "end": {
              "line": 37,
              "column": 21
            }
          },
          "loc": {
            "start": {
              "line": 37,
              "column": 21
            },
            "end": {
              "line": 37,
              "column": 21
            }
          },
          "line": 37
        }
      },
      "f": {
        "0": 1
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/constants/tableNames.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/constants/tableNames.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 18
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 17
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 23
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 23
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 25
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 25
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 17
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 17
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 19
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 27
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 25
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 12,
          "loc": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 12,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 12,
          "loc": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 12,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "line": 12
        }
      },
      "f": {
        "0": 1
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/db.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/db.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 29
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 39
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 40
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 58
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 47
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 34
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 15
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 20
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 12,
          "loc": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 12,
              "column": 20
            }
          },
          "locations": [
            {
              "start": {
                "line": 12,
                "column": 20
              },
              "end": {
                "line": 12,
                "column": 20
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 12,
          "loc": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 12,
              "column": 20
            }
          },
          "locations": [
            {
              "start": {
                "line": 12,
                "column": 20
              },
              "end": {
                "line": 12,
                "column": 20
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 5,
          "loc": {
            "start": {
              "line": 5,
              "column": 20
            },
            "end": {
              "line": 5,
              "column": 58
            }
          },
          "locations": [
            {
              "start": {
                "line": 5,
                "column": 20
              },
              "end": {
                "line": 5,
                "column": 58
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          0
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 12,
              "column": 20
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 12,
              "column": 20
            }
          },
          "line": 12
        }
      },
      "f": {
        "0": 1
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/middlewares.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/middlewares.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 20
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 67
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 16
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 1
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 35
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 44
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 38
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 69
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 27
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 72
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 14
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 29
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 72
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 7
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 1
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 18
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 13
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 17
          }
        },
        "21": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 6,
        "8": 6,
        "9": 6,
        "10": 6,
        "11": 6,
        "12": 6,
        "13": 6,
        "14": 6,
        "15": 6,
        "16": 6,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1,
        "21": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 22,
          "loc": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 22,
          "loc": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 2
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 1,
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 8,
          "loc": {
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 8,
                "column": 0
              },
              "end": {
                "line": 17,
                "column": 1
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 10,
          "loc": {
            "start": {
              "line": 10,
              "column": 23
            },
            "end": {
              "line": 10,
              "column": 65
            }
          },
          "locations": [
            {
              "start": {
                "line": 10,
                "column": 23
              },
              "end": {
                "line": 10,
                "column": 65
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 15,
          "loc": {
            "start": {
              "line": 15,
              "column": 15
            },
            "end": {
              "line": 15,
              "column": 62
            }
          },
          "locations": [
            {
              "start": {
                "line": 15,
                "column": 15
              },
              "end": {
                "line": 15,
                "column": 62
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          1
        ],
        "3": [
          6
        ],
        "4": [
          0
        ],
        "5": [
          0
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 2
            }
          },
          "line": 22
        },
        "1": {
          "name": "notFound",
          "decl": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 1
            }
          },
          "line": 1
        },
        "2": {
          "name": "errorHandler",
          "decl": {
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "line": 8
        }
      },
      "f": {
        "0": 1,
        "1": 1,
        "2": 6
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/email.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/email.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 41
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 41
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 27
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 77
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 74
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 60
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 1
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 9,
          "loc": {
            "start": {
              "line": 9,
              "column": 1
            },
            "end": {
              "line": 9,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 9,
                "column": 1
              },
              "end": {
                "line": 9,
                "column": 1
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 9,
          "loc": {
            "start": {
              "line": 9,
              "column": 1
            },
            "end": {
              "line": 9,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 9,
                "column": 1
              },
              "end": {
                "line": 9,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 9,
              "column": 1
            },
            "end": {
              "line": 9,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 9,
              "column": 1
            },
            "end": {
              "line": 9,
              "column": 1
            }
          },
          "line": 9
        },
        "1": {
          "name": "sendEmail",
          "decl": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 1
            }
          },
          "line": 6
        }
      },
      "f": {
        "0": 1,
        "1": 0
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/error.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/error.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 31
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 37
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 16
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 5,
        "2": 5,
        "3": 5
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 4,
          "loc": {
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 4,
          "loc": {
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 1,
          "loc": {
            "start": {
              "line": 1,
              "column": 18
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 1,
                "column": 18
              },
              "end": {
                "line": 4,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          5
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "line": 4
        },
        "1": {
          "name": "Object.<anonymous>.module.exports",
          "decl": {
            "start": {
              "line": 1,
              "column": 18
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 1,
              "column": 18
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "line": 1
        }
      },
      "f": {
        "0": 1,
        "1": 5
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/jwt.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/jwt.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 36
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 24
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 45
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 17
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 20
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 35
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 13
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 32
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 14
          }
        },
        "10": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 31
          }
        },
        "11": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 48
          }
        },
        "12": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 38
          }
        },
        "13": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 13
          }
        },
        "14": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 10
          }
        },
        "15": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 7
          }
        },
        "16": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 1
          }
        },
        "17": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "18": {
          "start": {
            "line": 19,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 18
          }
        },
        "19": {
          "start": {
            "line": 20,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 9
          }
        },
        "20": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 11,
        "3": 11,
        "4": 11,
        "5": 11,
        "6": 11,
        "7": 11,
        "8": 11,
        "9": 11,
        "10": 11,
        "11": 11,
        "12": 11,
        "13": 11,
        "14": 11,
        "15": 11,
        "16": 11,
        "17": 1,
        "18": 1,
        "19": 1,
        "20": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 21,
          "loc": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 21,
          "loc": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 2
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 3,
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 17,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 4,
          "loc": {
            "start": {
              "line": 4,
              "column": 23
            },
            "end": {
              "line": 16,
              "column": 7
            }
          },
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 23
              },
              "end": {
                "line": 16,
                "column": 7
              }
            }
          ]
        },
        "4": {
          "type": "branch",
          "line": 11,
          "loc": {
            "start": {
              "line": 11,
              "column": 12
            },
            "end": {
              "line": 14,
              "column": 13
            }
          },
          "locations": [
            {
              "start": {
                "line": 11,
                "column": 12
              },
              "end": {
                "line": 14,
                "column": 13
              }
            }
          ]
        },
        "5": {
          "type": "branch",
          "line": 12,
          "loc": {
            "start": {
              "line": 12,
              "column": 27
            },
            "end": {
              "line": 12,
              "column": 34
            }
          },
          "locations": [
            {
              "start": {
                "line": 12,
                "column": 27
              },
              "end": {
                "line": 12,
                "column": 34
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          11
        ],
        "3": [
          11
        ],
        "4": [
          11
        ],
        "5": [
          0
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "line": 21
        },
        "1": {
          "name": "sign",
          "decl": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "line": 3
        }
      },
      "f": {
        "0": 1,
        "1": 11
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/permissions.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/permissions.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 31
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 35
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 46
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 60
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 1
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 18
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 16
          }
        },
        "9": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 0,
        "5": 0,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 10,
          "loc": {
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 10,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 10,
          "loc": {
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 10,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 2
              }
            }
          ]
        },
        "2": {
          "type": "branch",
          "line": 3,
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 6,
                "column": 1
              }
            }
          ]
        },
        "3": {
          "type": "branch",
          "line": 4,
          "loc": {
            "start": {
              "line": 4,
              "column": 33
            },
            "end": {
              "line": 6,
              "column": 1
            }
          },
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 33
              },
              "end": {
                "line": 6,
                "column": 1
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ],
        "2": [
          1
        ],
        "3": [
          0
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "line": 10
        },
        "1": {
          "name": "scopedItems",
          "decl": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 1
            }
          },
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 1
            }
          },
          "line": 3
        }
      },
      "f": {
        "0": 1,
        "1": 1
      }
    },
    "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/role.js": {
      "path": "/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos/src/utils/role.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 18
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 19
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 19
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 25
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 19
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 2
          }
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1
      },
      "branchMap": {
        "0": {
          "type": "branch",
          "line": 6,
          "loc": {
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 6,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 2
              }
            }
          ]
        },
        "1": {
          "type": "branch",
          "line": 6,
          "loc": {
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "locations": [
            {
              "start": {
                "line": 6,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 2
              }
            }
          ]
        }
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          1
        ]
      },
      "fnMap": {
        "0": {
          "name": "Object.<anonymous>",
          "decl": {
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "line": 6
        }
      },
      "f": {
        "0": 1
      }
    }
  }
}