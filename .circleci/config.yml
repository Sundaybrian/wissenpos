version: 2.1
executors:
    node-executor:
        docker:
            - image: circleci/node:11.10.1
        working_directory: ~/repo

    postgres-executor:
        docker:
            - image: postgres:10
              environment:
                  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
                  POSTGRES_USER: ${POSTGRES_USER}
                  POSTGRES_DB: ${POSTGRES_DB}
        working_directory: ~/repo

    docker-executor:
        docker:
            - image: docker:18.06.3-ce-git
        working_directory: ~/repo

jobs:
    dependencies: # reusable jobs
        executor: node-executor
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-npm-deps-{{ checksum "package-lock.json" }}
            - run:
                  name: Install dependencies
                  command: npm install --silent
            - save_cache:
                  key: v1-npm-deps-{{ checksum "package-lock.json" }}
                  paths:
                      - node_modules
            - persist_to_workspace:
                  root: .
                  paths:
                      - .
    build:
        docker:
            - image: node:11.10.1
            - image: circleci/postgres:11-alpine-ram
              environment:
                  POSTGRES_USER: postgres
                  POSTGRES_PASSWORD: postgres
                  POSTGRES_DB: example12
        

        working_directory: ~/repo

        steps:
            - dependencies

            # run tests!
            - run: npm test



    build_docker_image: #reusable build jobs for docker
        executor: docker-executor
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Build app docker image and push
                  command: |
                      docker build -t sundaypriest/wissenpos-backend .
                      docker login -u $DOCKER_LOGIN -p $DOCKER_PWD
                      docker push sundaypriest/wissenpos-backend:latest

    test: # build app and test
        executor: postgres-executor
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Run tests
                  command: npm run test

    deploy-to-test: # deploy safe code to development
        executor: node-executor
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Deploy to heroku
                  command: |
                      git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:master -f

workflows:
    version: 2
    wissenpos-backend-workflows:
        jobs:
            - dependencies
            - test:
                  requires:
                      - dependencies
                  filters:
                      branches:
                          only:
                              - /feature.*/

            - build_docker_image:
                  context: dev_context
                  filters:
                      branches:
                          only:
                              - develop
                  requires:
                      - deploy-to-test

            - deploy-to-test:
                  context: dev_context
                  filters:
                      branches:
                          only:
                              - develop
                  requires:
                      - dependencies
           - build:
               filters:
                   branches:
                       only:
                           - develop

